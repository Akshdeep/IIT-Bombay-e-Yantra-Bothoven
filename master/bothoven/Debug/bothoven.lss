
bothoven.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00001b14  00800200  00002006  0000209a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002006  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001dc  00801d14  00801d14  00003bae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003bae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003be0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00003c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e59  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001046  00000000  00000000  00006ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001926  00000000  00000000  00007cef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000764  00000000  00000000  00009618  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000da9  00000000  00000000  00009d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022a8  00000000  00000000  0000ab25  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  0000cdcd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	da c0       	rjmp	.+436    	; 0x1b6 <__ctors_end>
       2:	00 00       	nop
       4:	f9 c0       	rjmp	.+498    	; 0x1f8 <__bad_interrupt>
       6:	00 00       	nop
       8:	f7 c0       	rjmp	.+494    	; 0x1f8 <__bad_interrupt>
       a:	00 00       	nop
       c:	f5 c0       	rjmp	.+490    	; 0x1f8 <__bad_interrupt>
       e:	00 00       	nop
      10:	f3 c0       	rjmp	.+486    	; 0x1f8 <__bad_interrupt>
      12:	00 00       	nop
      14:	93 c3       	rjmp	.+1830   	; 0x73c <__vector_5>
      16:	00 00       	nop
      18:	6c c3       	rjmp	.+1752   	; 0x6f2 <__vector_6>
      1a:	00 00       	nop
      1c:	ed c0       	rjmp	.+474    	; 0x1f8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	eb c0       	rjmp	.+470    	; 0x1f8 <__bad_interrupt>
      22:	00 00       	nop
      24:	e9 c0       	rjmp	.+466    	; 0x1f8 <__bad_interrupt>
      26:	00 00       	nop
      28:	e7 c0       	rjmp	.+462    	; 0x1f8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	e5 c0       	rjmp	.+458    	; 0x1f8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	e3 c0       	rjmp	.+454    	; 0x1f8 <__bad_interrupt>
      32:	00 00       	nop
      34:	e1 c0       	rjmp	.+450    	; 0x1f8 <__bad_interrupt>
      36:	00 00       	nop
      38:	df c0       	rjmp	.+446    	; 0x1f8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	dd c0       	rjmp	.+442    	; 0x1f8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	db c0       	rjmp	.+438    	; 0x1f8 <__bad_interrupt>
      42:	00 00       	nop
      44:	d9 c0       	rjmp	.+434    	; 0x1f8 <__bad_interrupt>
      46:	00 00       	nop
      48:	d7 c0       	rjmp	.+430    	; 0x1f8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d5 c0       	rjmp	.+426    	; 0x1f8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d3 c0       	rjmp	.+422    	; 0x1f8 <__bad_interrupt>
      52:	00 00       	nop
      54:	d1 c0       	rjmp	.+418    	; 0x1f8 <__bad_interrupt>
      56:	00 00       	nop
      58:	cf c0       	rjmp	.+414    	; 0x1f8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	cd c0       	rjmp	.+410    	; 0x1f8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cb c0       	rjmp	.+406    	; 0x1f8 <__bad_interrupt>
      62:	00 00       	nop
      64:	c9 c0       	rjmp	.+402    	; 0x1f8 <__bad_interrupt>
      66:	00 00       	nop
      68:	c7 c0       	rjmp	.+398    	; 0x1f8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c5 c0       	rjmp	.+394    	; 0x1f8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c3 c0       	rjmp	.+390    	; 0x1f8 <__bad_interrupt>
      72:	00 00       	nop
      74:	c1 c0       	rjmp	.+386    	; 0x1f8 <__bad_interrupt>
      76:	00 00       	nop
      78:	bf c0       	rjmp	.+382    	; 0x1f8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	bd c0       	rjmp	.+378    	; 0x1f8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bb c0       	rjmp	.+374    	; 0x1f8 <__bad_interrupt>
      82:	00 00       	nop
      84:	b9 c0       	rjmp	.+370    	; 0x1f8 <__bad_interrupt>
      86:	00 00       	nop
      88:	b7 c0       	rjmp	.+366    	; 0x1f8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	b5 c0       	rjmp	.+362    	; 0x1f8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	b3 c0       	rjmp	.+358    	; 0x1f8 <__bad_interrupt>
      92:	00 00       	nop
      94:	b1 c0       	rjmp	.+354    	; 0x1f8 <__bad_interrupt>
      96:	00 00       	nop
      98:	af c0       	rjmp	.+350    	; 0x1f8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ad c0       	rjmp	.+346    	; 0x1f8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	ab c0       	rjmp	.+342    	; 0x1f8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	a9 c0       	rjmp	.+338    	; 0x1f8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	a7 c0       	rjmp	.+334    	; 0x1f8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	a5 c0       	rjmp	.+330    	; 0x1f8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	a3 c0       	rjmp	.+326    	; 0x1f8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	a1 c0       	rjmp	.+322    	; 0x1f8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	9f c0       	rjmp	.+318    	; 0x1f8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	9d c0       	rjmp	.+314    	; 0x1f8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	9b c0       	rjmp	.+310    	; 0x1f8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	99 c0       	rjmp	.+306    	; 0x1f8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	97 c0       	rjmp	.+302    	; 0x1f8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	95 c0       	rjmp	.+298    	; 0x1f8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	93 c0       	rjmp	.+294    	; 0x1f8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	91 c0       	rjmp	.+290    	; 0x1f8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	8f c0       	rjmp	.+286    	; 0x1f8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	8d c0       	rjmp	.+282    	; 0x1f8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	8b c0       	rjmp	.+278    	; 0x1f8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	66 08       	sbc	r6, r6
      e6:	7a 08       	sbc	r7, r10
      e8:	98 08       	sbc	r9, r8
      ea:	ae 08       	sbc	r10, r14
      ec:	c4 08       	sbc	r12, r4
      ee:	e2 08       	sbc	r14, r2
      f0:	f8 08       	sbc	r15, r8
      f2:	0e 09       	sbc	r16, r14
      f4:	2c 09       	sbc	r18, r12
      f6:	36 0b       	sbc	r19, r22
      f8:	39 0b       	sbc	r19, r25
      fa:	39 0b       	sbc	r19, r25
      fc:	39 0b       	sbc	r19, r25
      fe:	2d 0b       	sbc	r18, r29
     100:	39 0b       	sbc	r19, r25
     102:	39 0b       	sbc	r19, r25
     104:	39 0b       	sbc	r19, r25
     106:	3c 0b       	sbc	r19, r28
     108:	39 0b       	sbc	r19, r25
     10a:	39 0b       	sbc	r19, r25
     10c:	39 0b       	sbc	r19, r25
     10e:	47 0a       	sbc	r4, r23
     110:	39 0b       	sbc	r19, r25
     112:	39 0b       	sbc	r19, r25
     114:	39 0b       	sbc	r19, r25
     116:	30 0b       	sbc	r19, r16
     118:	39 0b       	sbc	r19, r25
     11a:	39 0b       	sbc	r19, r25
     11c:	39 0b       	sbc	r19, r25
     11e:	33 0b       	sbc	r19, r19
     120:	39 0b       	sbc	r19, r25
     122:	4a 0a       	sbc	r4, r26
     124:	63 0a       	sbc	r6, r19
     126:	7c 0a       	sbc	r7, r28
     128:	95 0a       	sbc	r9, r21
     12a:	ae 0a       	sbc	r10, r30
     12c:	c7 0a       	sbc	r12, r23
     12e:	e0 0a       	sbc	r14, r16
     130:	f9 0a       	sbc	r15, r25
     132:	12 0b       	sbc	r17, r18
     134:	07 63       	ori	r16, 0x37	; 55
     136:	42 36       	cpi	r20, 0x62	; 98
     138:	b7 9b       	sbis	0x16, 7	; 22
     13a:	d8 a7       	std	Y+40, r29	; 0x28
     13c:	1a 39       	cpi	r17, 0x9A	; 154
     13e:	68 56       	subi	r22, 0x68	; 104
     140:	18 ae       	std	Y+56, r1	; 0x38
     142:	ba ab       	std	Y+50, r27	; 0x32
     144:	55 8c       	ldd	r5, Z+29	; 0x1d
     146:	1d 3c       	cpi	r17, 0xCD	; 205
     148:	b7 cc       	rjmp	.-1682   	; 0xfffffab8 <__eeprom_end+0xff7efab8>
     14a:	57 63       	ori	r21, 0x37	; 55
     14c:	bd 6d       	ori	r27, 0xDD	; 221
     14e:	ed fd       	.word	0xfded	; ????
     150:	75 3e       	cpi	r23, 0xE5	; 229
     152:	f6 17       	cp	r31, r22
     154:	72 31       	cpi	r23, 0x12	; 18
     156:	bf 00       	.word	0x00bf	; ????
     158:	00 00       	nop
     15a:	80 3f       	cpi	r24, 0xF0	; 240
     15c:	08 00       	.word	0x0008	; ????
     15e:	00 00       	nop
     160:	be 92       	st	-X, r11
     162:	24 49       	sbci	r18, 0x94	; 148
     164:	12 3e       	cpi	r17, 0xE2	; 226
     166:	ab aa       	std	Y+51, r10	; 0x33
     168:	aa 2a       	or	r10, r26
     16a:	be cd       	rjmp	.-1156   	; 0xfffffce8 <__eeprom_end+0xff7efce8>
     16c:	cc cc       	rjmp	.-1640   	; 0xfffffb06 <__eeprom_end+0xff7efb06>
     16e:	4c 3e       	cpi	r20, 0xEC	; 236
     170:	00 00       	nop
     172:	00 80       	ld	r0, Z
     174:	be ab       	std	Y+54, r27	; 0x36
     176:	aa aa       	std	Y+50, r10	; 0x32
     178:	aa 3e       	cpi	r26, 0xEA	; 234
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	bf 00       	.word	0x00bf	; ????
     180:	00 00       	nop
     182:	80 3f       	cpi	r24, 0xF0	; 240
     184:	00 00       	nop
     186:	00 00       	nop
     188:	00 08       	sbc	r0, r0
     18a:	41 78       	andi	r20, 0x81	; 129
     18c:	d3 bb       	out	0x13, r29	; 19
     18e:	43 87       	std	Z+11, r20	; 0x0b
     190:	d1 13       	cpse	r29, r17
     192:	3d 19       	sub	r19, r13
     194:	0e 3c       	cpi	r16, 0xCE	; 206
     196:	c3 bd       	out	0x23, r28	; 35
     198:	42 82       	std	Z+2, r4	; 0x02
     19a:	ad 2b       	or	r26, r29
     19c:	3e 68       	ori	r19, 0x8E	; 142
     19e:	ec 82       	std	Y+4, r14	; 0x04
     1a0:	76 be       	out	0x36, r7	; 54
     1a2:	d9 8f       	std	Y+25, r29	; 0x19
     1a4:	e1 a9       	ldd	r30, Z+49	; 0x31
     1a6:	3e 4c       	sbci	r19, 0xCE	; 206
     1a8:	80 ef       	ldi	r24, 0xF0	; 240
     1aa:	ff be       	out	0x3f, r15	; 63
     1ac:	01 c4       	rjmp	.+2050   	; 0x9b0 <follow+0xfe>
     1ae:	ff 7f       	andi	r31, 0xFF	; 255
     1b0:	3f 00       	.word	0x003f	; ????
     1b2:	00 00       	nop
	...

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d1 e2       	ldi	r29, 0x21	; 33
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61
     1c2:	00 e0       	ldi	r16, 0x00	; 0
     1c4:	0c bf       	out	0x3c, r16	; 60

000001c6 <__do_copy_data>:
     1c6:	1d e1       	ldi	r17, 0x1D	; 29
     1c8:	a0 e0       	ldi	r26, 0x00	; 0
     1ca:	b2 e0       	ldi	r27, 0x02	; 2
     1cc:	e6 e0       	ldi	r30, 0x06	; 6
     1ce:	f0 e2       	ldi	r31, 0x20	; 32
     1d0:	00 e0       	ldi	r16, 0x00	; 0
     1d2:	0b bf       	out	0x3b, r16	; 59
     1d4:	02 c0       	rjmp	.+4      	; 0x1da <__do_copy_data+0x14>
     1d6:	07 90       	elpm	r0, Z+
     1d8:	0d 92       	st	X+, r0
     1da:	a4 31       	cpi	r26, 0x14	; 20
     1dc:	b1 07       	cpc	r27, r17
     1de:	d9 f7       	brne	.-10     	; 0x1d6 <__do_copy_data+0x10>

000001e0 <__do_clear_bss>:
     1e0:	2e e1       	ldi	r18, 0x1E	; 30
     1e2:	a4 e1       	ldi	r26, 0x14	; 20
     1e4:	bd e1       	ldi	r27, 0x1D	; 29
     1e6:	01 c0       	rjmp	.+2      	; 0x1ea <.do_clear_bss_start>

000001e8 <.do_clear_bss_loop>:
     1e8:	1d 92       	st	X+, r1

000001ea <.do_clear_bss_start>:
     1ea:	a0 3f       	cpi	r26, 0xF0	; 240
     1ec:	b2 07       	cpc	r27, r18
     1ee:	e1 f7       	brne	.-8      	; 0x1e8 <.do_clear_bss_loop>
     1f0:	0e 94 37 0c 	call	0x186e	; 0x186e <main>
     1f4:	0c 94 01 10 	jmp	0x2002	; 0x2002 <_exit>

000001f8 <__bad_interrupt>:
     1f8:	03 cf       	rjmp	.-506    	; 0x0 <__vectors>

000001fa <right_servo1_pin_config>:

	}

	printf("master total path length: %d\n", master_total_path_length);
	printf("slave total path length: %d\n", slave_total_path_length);
}
     1fa:	25 9a       	sbi	0x04, 5	; 4
     1fc:	2d 9a       	sbi	0x05, 5	; 5
     1fe:	08 95       	ret

00000200 <left_servo2_pin_config>:
     200:	26 9a       	sbi	0x04, 6	; 4
     202:	2e 9a       	sbi	0x05, 6	; 5
     204:	08 95       	ret

00000206 <striking_arm_servo3_pin_config>:
     206:	27 9a       	sbi	0x04, 7	; 4
     208:	2f 9a       	sbi	0x05, 7	; 5
     20a:	08 95       	ret

0000020c <right_servo_1>:
     20c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     210:	68 2f       	mov	r22, r24
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	80 e0       	ldi	r24, 0x00	; 0
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__floatunsisf>
     21c:	2b e7       	ldi	r18, 0x7B	; 123
     21e:	34 e1       	ldi	r19, 0x14	; 20
     220:	4e ee       	ldi	r20, 0xEE	; 238
     222:	5f e3       	ldi	r21, 0x3F	; 63
     224:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <__divsf3>
     228:	20 e0       	ldi	r18, 0x00	; 0
     22a:	30 e0       	ldi	r19, 0x00	; 0
     22c:	4c e0       	ldi	r20, 0x0C	; 12
     22e:	52 e4       	ldi	r21, 0x42	; 66
     230:	0e 94 83 0c 	call	0x1906	; 0x1906 <__addsf3>
     234:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fixunssfsi>
     238:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     23c:	08 95       	ret

0000023e <left_servo_2>:
     23e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     242:	68 2f       	mov	r22, r24
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__floatunsisf>
     24e:	2b e7       	ldi	r18, 0x7B	; 123
     250:	34 e1       	ldi	r19, 0x14	; 20
     252:	4e ee       	ldi	r20, 0xEE	; 238
     254:	5f e3       	ldi	r21, 0x3F	; 63
     256:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <__divsf3>
     25a:	20 e0       	ldi	r18, 0x00	; 0
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	4c e0       	ldi	r20, 0x0C	; 12
     260:	52 e4       	ldi	r21, 0x42	; 66
     262:	0e 94 83 0c 	call	0x1906	; 0x1906 <__addsf3>
     266:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fixunssfsi>
     26a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
     26e:	08 95       	ret

00000270 <lcd_set_4bit>:
     270:	86 e6       	ldi	r24, 0x66	; 102
     272:	9e e0       	ldi	r25, 0x0E	; 14
     274:	01 97       	sbiw	r24, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <lcd_set_4bit+0x4>
     278:	00 00       	nop
     27a:	40 98       	cbi	0x08, 0	; 8
     27c:	41 98       	cbi	0x08, 1	; 8
     27e:	80 e3       	ldi	r24, 0x30	; 48
     280:	88 b9       	out	0x08, r24	; 8
     282:	42 9a       	sbi	0x08, 2	; 8
     284:	ef ef       	ldi	r30, 0xFF	; 255
     286:	f7 e4       	ldi	r31, 0x47	; 71
     288:	31 97       	sbiw	r30, 0x01	; 1
     28a:	f1 f7       	brne	.-4      	; 0x288 <lcd_set_4bit+0x18>
     28c:	00 c0       	rjmp	.+0      	; 0x28e <lcd_set_4bit+0x1e>
     28e:	00 00       	nop
     290:	42 98       	cbi	0x08, 2	; 8
     292:	e6 e6       	ldi	r30, 0x66	; 102
     294:	fe e0       	ldi	r31, 0x0E	; 14
     296:	31 97       	sbiw	r30, 0x01	; 1
     298:	f1 f7       	brne	.-4      	; 0x296 <lcd_set_4bit+0x26>
     29a:	00 00       	nop
     29c:	40 98       	cbi	0x08, 0	; 8
     29e:	41 98       	cbi	0x08, 1	; 8
     2a0:	88 b9       	out	0x08, r24	; 8
     2a2:	42 9a       	sbi	0x08, 2	; 8
     2a4:	ef ef       	ldi	r30, 0xFF	; 255
     2a6:	f7 e4       	ldi	r31, 0x47	; 71
     2a8:	31 97       	sbiw	r30, 0x01	; 1
     2aa:	f1 f7       	brne	.-4      	; 0x2a8 <lcd_set_4bit+0x38>
     2ac:	00 c0       	rjmp	.+0      	; 0x2ae <lcd_set_4bit+0x3e>
     2ae:	00 00       	nop
     2b0:	42 98       	cbi	0x08, 2	; 8
     2b2:	e6 e6       	ldi	r30, 0x66	; 102
     2b4:	fe e0       	ldi	r31, 0x0E	; 14
     2b6:	31 97       	sbiw	r30, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <lcd_set_4bit+0x46>
     2ba:	00 00       	nop
     2bc:	40 98       	cbi	0x08, 0	; 8
     2be:	41 98       	cbi	0x08, 1	; 8
     2c0:	88 b9       	out	0x08, r24	; 8
     2c2:	42 9a       	sbi	0x08, 2	; 8
     2c4:	8f ef       	ldi	r24, 0xFF	; 255
     2c6:	97 e4       	ldi	r25, 0x47	; 71
     2c8:	01 97       	sbiw	r24, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <lcd_set_4bit+0x58>
     2cc:	00 c0       	rjmp	.+0      	; 0x2ce <lcd_set_4bit+0x5e>
     2ce:	00 00       	nop
     2d0:	42 98       	cbi	0x08, 2	; 8
     2d2:	e6 e6       	ldi	r30, 0x66	; 102
     2d4:	fe e0       	ldi	r31, 0x0E	; 14
     2d6:	31 97       	sbiw	r30, 0x01	; 1
     2d8:	f1 f7       	brne	.-4      	; 0x2d6 <lcd_set_4bit+0x66>
     2da:	00 00       	nop
     2dc:	40 98       	cbi	0x08, 0	; 8
     2de:	41 98       	cbi	0x08, 1	; 8
     2e0:	80 e2       	ldi	r24, 0x20	; 32
     2e2:	88 b9       	out	0x08, r24	; 8
     2e4:	42 9a       	sbi	0x08, 2	; 8
     2e6:	8f ef       	ldi	r24, 0xFF	; 255
     2e8:	97 e4       	ldi	r25, 0x47	; 71
     2ea:	01 97       	sbiw	r24, 0x01	; 1
     2ec:	f1 f7       	brne	.-4      	; 0x2ea <lcd_set_4bit+0x7a>
     2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <lcd_set_4bit+0x80>
     2f0:	00 00       	nop
     2f2:	42 98       	cbi	0x08, 2	; 8
     2f4:	08 95       	ret

000002f6 <lcd_wr_command>:
     2f6:	98 b1       	in	r25, 0x08	; 8
     2f8:	9f 70       	andi	r25, 0x0F	; 15
     2fa:	98 b9       	out	0x08, r25	; 8
     2fc:	98 b1       	in	r25, 0x08	; 8
     2fe:	28 2f       	mov	r18, r24
     300:	20 7f       	andi	r18, 0xF0	; 240
     302:	92 2b       	or	r25, r18
     304:	98 b9       	out	0x08, r25	; 8
     306:	40 98       	cbi	0x08, 0	; 8
     308:	41 98       	cbi	0x08, 1	; 8
     30a:	42 9a       	sbi	0x08, 2	; 8
     30c:	ef ef       	ldi	r30, 0xFF	; 255
     30e:	f7 e4       	ldi	r31, 0x47	; 71
     310:	31 97       	sbiw	r30, 0x01	; 1
     312:	f1 f7       	brne	.-4      	; 0x310 <lcd_wr_command+0x1a>
     314:	00 c0       	rjmp	.+0      	; 0x316 <lcd_wr_command+0x20>
     316:	00 00       	nop
     318:	42 98       	cbi	0x08, 2	; 8
     31a:	98 b1       	in	r25, 0x08	; 8
     31c:	9f 70       	andi	r25, 0x0F	; 15
     31e:	98 b9       	out	0x08, r25	; 8
     320:	98 b1       	in	r25, 0x08	; 8
     322:	82 95       	swap	r24
     324:	80 7f       	andi	r24, 0xF0	; 240
     326:	89 2b       	or	r24, r25
     328:	88 b9       	out	0x08, r24	; 8
     32a:	40 98       	cbi	0x08, 0	; 8
     32c:	41 98       	cbi	0x08, 1	; 8
     32e:	42 9a       	sbi	0x08, 2	; 8
     330:	8f ef       	ldi	r24, 0xFF	; 255
     332:	97 e4       	ldi	r25, 0x47	; 71
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	f1 f7       	brne	.-4      	; 0x334 <lcd_wr_command+0x3e>
     338:	00 c0       	rjmp	.+0      	; 0x33a <lcd_wr_command+0x44>
     33a:	00 00       	nop
     33c:	42 98       	cbi	0x08, 2	; 8
     33e:	08 95       	ret

00000340 <lcd_init>:
     340:	86 e6       	ldi	r24, 0x66	; 102
     342:	9e e0       	ldi	r25, 0x0E	; 14
     344:	01 97       	sbiw	r24, 0x01	; 1
     346:	f1 f7       	brne	.-4      	; 0x344 <lcd_init+0x4>
     348:	00 00       	nop
     34a:	88 e2       	ldi	r24, 0x28	; 40
     34c:	d4 df       	rcall	.-88     	; 0x2f6 <lcd_wr_command>
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	d2 df       	rcall	.-92     	; 0x2f6 <lcd_wr_command>
     352:	86 e0       	ldi	r24, 0x06	; 6
     354:	d0 df       	rcall	.-96     	; 0x2f6 <lcd_wr_command>
     356:	8e e0       	ldi	r24, 0x0E	; 14
     358:	ce df       	rcall	.-100    	; 0x2f6 <lcd_wr_command>
     35a:	80 e8       	ldi	r24, 0x80	; 128
     35c:	cc cf       	rjmp	.-104    	; 0x2f6 <lcd_wr_command>
     35e:	08 95       	ret

00000360 <lcd_wr_char>:
     360:	98 b1       	in	r25, 0x08	; 8
     362:	9f 70       	andi	r25, 0x0F	; 15
     364:	98 b9       	out	0x08, r25	; 8
     366:	98 b1       	in	r25, 0x08	; 8
     368:	28 2f       	mov	r18, r24
     36a:	20 7f       	andi	r18, 0xF0	; 240
     36c:	92 2b       	or	r25, r18
     36e:	98 b9       	out	0x08, r25	; 8
     370:	40 9a       	sbi	0x08, 0	; 8
     372:	41 98       	cbi	0x08, 1	; 8
     374:	42 9a       	sbi	0x08, 2	; 8
     376:	ef ef       	ldi	r30, 0xFF	; 255
     378:	f7 e4       	ldi	r31, 0x47	; 71
     37a:	31 97       	sbiw	r30, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <lcd_wr_char+0x1a>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <lcd_wr_char+0x20>
     380:	00 00       	nop
     382:	42 98       	cbi	0x08, 2	; 8
     384:	98 b1       	in	r25, 0x08	; 8
     386:	9f 70       	andi	r25, 0x0F	; 15
     388:	98 b9       	out	0x08, r25	; 8
     38a:	98 b1       	in	r25, 0x08	; 8
     38c:	82 95       	swap	r24
     38e:	80 7f       	andi	r24, 0xF0	; 240
     390:	89 2b       	or	r24, r25
     392:	88 b9       	out	0x08, r24	; 8
     394:	40 9a       	sbi	0x08, 0	; 8
     396:	41 98       	cbi	0x08, 1	; 8
     398:	42 9a       	sbi	0x08, 2	; 8
     39a:	8f ef       	ldi	r24, 0xFF	; 255
     39c:	97 e4       	ldi	r25, 0x47	; 71
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	f1 f7       	brne	.-4      	; 0x39e <lcd_wr_char+0x3e>
     3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <lcd_wr_char+0x44>
     3a4:	00 00       	nop
     3a6:	42 98       	cbi	0x08, 2	; 8
     3a8:	08 95       	ret

000003aa <lcd_home>:
     3aa:	80 e8       	ldi	r24, 0x80	; 128
     3ac:	a4 cf       	rjmp	.-184    	; 0x2f6 <lcd_wr_command>
     3ae:	08 95       	ret

000003b0 <lcd_cursor>:
     3b0:	82 30       	cpi	r24, 0x02	; 2
     3b2:	69 f0       	breq	.+26     	; 0x3ce <lcd_cursor+0x1e>
     3b4:	18 f4       	brcc	.+6      	; 0x3bc <lcd_cursor+0xc>
     3b6:	81 30       	cpi	r24, 0x01	; 1
     3b8:	31 f0       	breq	.+12     	; 0x3c6 <lcd_cursor+0x16>
     3ba:	08 95       	ret
     3bc:	83 30       	cpi	r24, 0x03	; 3
     3be:	59 f0       	breq	.+22     	; 0x3d6 <lcd_cursor+0x26>
     3c0:	84 30       	cpi	r24, 0x04	; 4
     3c2:	69 f0       	breq	.+26     	; 0x3de <lcd_cursor+0x2e>
     3c4:	08 95       	ret
     3c6:	8f e7       	ldi	r24, 0x7F	; 127
     3c8:	86 0f       	add	r24, r22
     3ca:	95 cf       	rjmp	.-214    	; 0x2f6 <lcd_wr_command>
     3cc:	08 95       	ret
     3ce:	8f eb       	ldi	r24, 0xBF	; 191
     3d0:	86 0f       	add	r24, r22
     3d2:	91 cf       	rjmp	.-222    	; 0x2f6 <lcd_wr_command>
     3d4:	08 95       	ret
     3d6:	83 e9       	ldi	r24, 0x93	; 147
     3d8:	86 0f       	add	r24, r22
     3da:	8d cf       	rjmp	.-230    	; 0x2f6 <lcd_wr_command>
     3dc:	08 95       	ret
     3de:	83 ed       	ldi	r24, 0xD3	; 211
     3e0:	86 0f       	add	r24, r22
     3e2:	89 cf       	rjmp	.-238    	; 0x2f6 <lcd_wr_command>
     3e4:	08 95       	ret

000003e6 <lcd_print>:
     3e6:	0f 93       	push	r16
     3e8:	1f 93       	push	r17
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
     3ee:	8a 01       	movw	r16, r20
     3f0:	e9 01       	movw	r28, r18
     3f2:	88 23       	and	r24, r24
     3f4:	11 f0       	breq	.+4      	; 0x3fa <lcd_print+0x14>
     3f6:	61 11       	cpse	r22, r1
     3f8:	02 c0       	rjmp	.+4      	; 0x3fe <lcd_print+0x18>
     3fa:	d7 df       	rcall	.-82     	; 0x3aa <lcd_home>
     3fc:	01 c0       	rjmp	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	d8 df       	rcall	.-80     	; 0x3b0 <lcd_cursor>
     400:	c5 30       	cpi	r28, 0x05	; 5
     402:	d1 05       	cpc	r29, r1
     404:	c1 f4       	brne	.+48     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     406:	98 01       	movw	r18, r16
     408:	32 95       	swap	r19
     40a:	22 95       	swap	r18
     40c:	2f 70       	andi	r18, 0x0F	; 15
     40e:	23 27       	eor	r18, r19
     410:	3f 70       	andi	r19, 0x0F	; 15
     412:	23 27       	eor	r18, r19
     414:	a7 e4       	ldi	r26, 0x47	; 71
     416:	b3 e0       	ldi	r27, 0x03	; 3
     418:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     41c:	96 95       	lsr	r25
     41e:	87 95       	ror	r24
     420:	96 95       	lsr	r25
     422:	87 95       	ror	r24
     424:	96 95       	lsr	r25
     426:	87 95       	ror	r24
     428:	c0 96       	adiw	r24, 0x30	; 48
     42a:	90 93 f1 1d 	sts	0x1DF1, r25	; 0x801df1 <million+0x1>
     42e:	80 93 f0 1d 	sts	0x1DF0, r24	; 0x801df0 <million>
     432:	96 df       	rcall	.-212    	; 0x360 <lcd_wr_char>
     434:	04 c0       	rjmp	.+8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     436:	c4 30       	cpi	r28, 0x04	; 4
     438:	d1 05       	cpc	r29, r1
     43a:	09 f0       	breq	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43c:	be c0       	rjmp	.+380    	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
     43e:	98 01       	movw	r18, r16
     440:	36 95       	lsr	r19
     442:	27 95       	ror	r18
     444:	36 95       	lsr	r19
     446:	27 95       	ror	r18
     448:	36 95       	lsr	r19
     44a:	27 95       	ror	r18
     44c:	a5 ec       	ldi	r26, 0xC5	; 197
     44e:	b0 e2       	ldi	r27, 0x20	; 32
     450:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     454:	ac 01       	movw	r20, r24
     456:	52 95       	swap	r21
     458:	42 95       	swap	r20
     45a:	4f 70       	andi	r20, 0x0F	; 15
     45c:	45 27       	eor	r20, r21
     45e:	5f 70       	andi	r21, 0x0F	; 15
     460:	45 27       	eor	r20, r21
     462:	50 93 59 1e 	sts	0x1E59, r21	; 0x801e59 <temp+0x1>
     466:	40 93 58 1e 	sts	0x1E58, r20	; 0x801e58 <temp>
     46a:	9a 01       	movw	r18, r20
     46c:	ad ec       	ldi	r26, 0xCD	; 205
     46e:	bc ec       	ldi	r27, 0xCC	; 204
     470:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     474:	96 95       	lsr	r25
     476:	87 95       	ror	r24
     478:	96 95       	lsr	r25
     47a:	87 95       	ror	r24
     47c:	96 95       	lsr	r25
     47e:	87 95       	ror	r24
     480:	9c 01       	movw	r18, r24
     482:	22 0f       	add	r18, r18
     484:	33 1f       	adc	r19, r19
     486:	88 0f       	add	r24, r24
     488:	99 1f       	adc	r25, r25
     48a:	88 0f       	add	r24, r24
     48c:	99 1f       	adc	r25, r25
     48e:	88 0f       	add	r24, r24
     490:	99 1f       	adc	r25, r25
     492:	82 0f       	add	r24, r18
     494:	93 1f       	adc	r25, r19
     496:	9a 01       	movw	r18, r20
     498:	28 1b       	sub	r18, r24
     49a:	39 0b       	sbc	r19, r25
     49c:	c9 01       	movw	r24, r18
     49e:	c0 96       	adiw	r24, 0x30	; 48
     4a0:	90 93 dd 1e 	sts	0x1EDD, r25	; 0x801edd <thousand+0x1>
     4a4:	80 93 dc 1e 	sts	0x1EDC, r24	; 0x801edc <thousand>
     4a8:	5b df       	rcall	.-330    	; 0x360 <lcd_wr_char>
     4aa:	98 01       	movw	r18, r16
     4ac:	36 95       	lsr	r19
     4ae:	27 95       	ror	r18
     4b0:	36 95       	lsr	r19
     4b2:	27 95       	ror	r18
     4b4:	ab e7       	ldi	r26, 0x7B	; 123
     4b6:	b4 e1       	ldi	r27, 0x14	; 20
     4b8:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     4bc:	ac 01       	movw	r20, r24
     4be:	56 95       	lsr	r21
     4c0:	47 95       	ror	r20
     4c2:	50 93 59 1e 	sts	0x1E59, r21	; 0x801e59 <temp+0x1>
     4c6:	40 93 58 1e 	sts	0x1E58, r20	; 0x801e58 <temp>
     4ca:	9a 01       	movw	r18, r20
     4cc:	ad ec       	ldi	r26, 0xCD	; 205
     4ce:	bc ec       	ldi	r27, 0xCC	; 204
     4d0:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     4d4:	96 95       	lsr	r25
     4d6:	87 95       	ror	r24
     4d8:	96 95       	lsr	r25
     4da:	87 95       	ror	r24
     4dc:	96 95       	lsr	r25
     4de:	87 95       	ror	r24
     4e0:	9c 01       	movw	r18, r24
     4e2:	22 0f       	add	r18, r18
     4e4:	33 1f       	adc	r19, r19
     4e6:	88 0f       	add	r24, r24
     4e8:	99 1f       	adc	r25, r25
     4ea:	88 0f       	add	r24, r24
     4ec:	99 1f       	adc	r25, r25
     4ee:	88 0f       	add	r24, r24
     4f0:	99 1f       	adc	r25, r25
     4f2:	82 0f       	add	r24, r18
     4f4:	93 1f       	adc	r25, r19
     4f6:	9a 01       	movw	r18, r20
     4f8:	28 1b       	sub	r18, r24
     4fa:	39 0b       	sbc	r19, r25
     4fc:	c9 01       	movw	r24, r18
     4fe:	c0 96       	adiw	r24, 0x30	; 48
     500:	90 93 d7 1e 	sts	0x1ED7, r25	; 0x801ed7 <hundred+0x1>
     504:	80 93 d6 1e 	sts	0x1ED6, r24	; 0x801ed6 <hundred>
     508:	2b df       	rcall	.-426    	; 0x360 <lcd_wr_char>
     50a:	04 c0       	rjmp	.+8      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
     50c:	c2 30       	cpi	r28, 0x02	; 2
     50e:	d1 05       	cpc	r29, r1
     510:	09 f0       	breq	.+2      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
     512:	58 c0       	rjmp	.+176    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
     514:	98 01       	movw	r18, r16
     516:	ad ec       	ldi	r26, 0xCD	; 205
     518:	bc ec       	ldi	r27, 0xCC	; 204
     51a:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     51e:	ac 01       	movw	r20, r24
     520:	56 95       	lsr	r21
     522:	47 95       	ror	r20
     524:	56 95       	lsr	r21
     526:	47 95       	ror	r20
     528:	56 95       	lsr	r21
     52a:	47 95       	ror	r20
     52c:	50 93 59 1e 	sts	0x1E59, r21	; 0x801e59 <temp+0x1>
     530:	40 93 58 1e 	sts	0x1E58, r20	; 0x801e58 <temp>
     534:	9a 01       	movw	r18, r20
     536:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     53a:	96 95       	lsr	r25
     53c:	87 95       	ror	r24
     53e:	96 95       	lsr	r25
     540:	87 95       	ror	r24
     542:	96 95       	lsr	r25
     544:	87 95       	ror	r24
     546:	9c 01       	movw	r18, r24
     548:	22 0f       	add	r18, r18
     54a:	33 1f       	adc	r19, r19
     54c:	88 0f       	add	r24, r24
     54e:	99 1f       	adc	r25, r25
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	88 0f       	add	r24, r24
     556:	99 1f       	adc	r25, r25
     558:	82 0f       	add	r24, r18
     55a:	93 1f       	adc	r25, r19
     55c:	9a 01       	movw	r18, r20
     55e:	28 1b       	sub	r18, r24
     560:	39 0b       	sbc	r19, r25
     562:	c9 01       	movw	r24, r18
     564:	c0 96       	adiw	r24, 0x30	; 48
     566:	90 93 6f 1e 	sts	0x1E6F, r25	; 0x801e6f <tens+0x1>
     56a:	80 93 6e 1e 	sts	0x1E6E, r24	; 0x801e6e <tens>
     56e:	f8 de       	rcall	.-528    	; 0x360 <lcd_wr_char>
     570:	98 01       	movw	r18, r16
     572:	ad ec       	ldi	r26, 0xCD	; 205
     574:	bc ec       	ldi	r27, 0xCC	; 204
     576:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     57a:	96 95       	lsr	r25
     57c:	87 95       	ror	r24
     57e:	96 95       	lsr	r25
     580:	87 95       	ror	r24
     582:	96 95       	lsr	r25
     584:	87 95       	ror	r24
     586:	9c 01       	movw	r18, r24
     588:	22 0f       	add	r18, r18
     58a:	33 1f       	adc	r19, r19
     58c:	88 0f       	add	r24, r24
     58e:	99 1f       	adc	r25, r25
     590:	88 0f       	add	r24, r24
     592:	99 1f       	adc	r25, r25
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	82 0f       	add	r24, r18
     59a:	93 1f       	adc	r25, r19
     59c:	98 01       	movw	r18, r16
     59e:	28 1b       	sub	r18, r24
     5a0:	39 0b       	sbc	r19, r25
     5a2:	c9 01       	movw	r24, r18
     5a4:	c0 96       	adiw	r24, 0x30	; 48
     5a6:	90 93 db 1e 	sts	0x1EDB, r25	; 0x801edb <unit+0x1>
     5aa:	80 93 da 1e 	sts	0x1EDA, r24	; 0x801eda <unit>
     5ae:	d8 de       	rcall	.-592    	; 0x360 <lcd_wr_char>
     5b0:	26 97       	sbiw	r28, 0x06	; 6
     5b2:	64 f0       	brlt	.+24     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5b4:	85 e4       	ldi	r24, 0x45	; 69
     5b6:	d4 de       	rcall	.-600    	; 0x360 <lcd_wr_char>
     5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5ba:	c3 30       	cpi	r28, 0x03	; 3
     5bc:	d1 05       	cpc	r29, r1
     5be:	09 f0       	breq	.+2      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
     5c0:	a5 cf       	rjmp	.-182    	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     5c2:	73 cf       	rjmp	.-282    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     5c4:	c1 30       	cpi	r28, 0x01	; 1
     5c6:	d1 05       	cpc	r29, r1
     5c8:	99 f7       	brne	.-26     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
     5ca:	d2 cf       	rjmp	.-92     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	08 95       	ret

000005d6 <lcd_port_config>:
     5d6:	87 b1       	in	r24, 0x07	; 7
     5d8:	87 6f       	ori	r24, 0xF7	; 247
     5da:	87 b9       	out	0x07, r24	; 7
     5dc:	88 b1       	in	r24, 0x08	; 8
     5de:	80 78       	andi	r24, 0x80	; 128
     5e0:	88 b9       	out	0x08, r24	; 8
     5e2:	08 95       	ret

000005e4 <adc_pin_config>:
     5e4:	10 ba       	out	0x10, r1	; 16
     5e6:	11 ba       	out	0x11, r1	; 17
     5e8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
     5ec:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__TEXT_REGION_LENGTH__+0x700108>
     5f0:	08 95       	ret

000005f2 <adc_init>:
     5f2:	ea e7       	ldi	r30, 0x7A	; 122
     5f4:	f0 e0       	ldi	r31, 0x00	; 0
     5f6:	10 82       	st	Z, r1
     5f8:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     5fc:	80 e2       	ldi	r24, 0x20	; 32
     5fe:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     602:	80 e8       	ldi	r24, 0x80	; 128
     604:	80 bf       	out	0x30, r24	; 48
     606:	86 e8       	ldi	r24, 0x86	; 134
     608:	80 83       	st	Z, r24
     60a:	08 95       	ret

0000060c <ADC_Conversion>:
     60c:	88 30       	cpi	r24, 0x08	; 8
     60e:	18 f0       	brcs	.+6      	; 0x616 <ADC_Conversion+0xa>
     610:	98 e0       	ldi	r25, 0x08	; 8
     612:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     616:	87 70       	andi	r24, 0x07	; 7
     618:	80 62       	ori	r24, 0x20	; 32
     61a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
     61e:	ea e7       	ldi	r30, 0x7A	; 122
     620:	f0 e0       	ldi	r31, 0x00	; 0
     622:	80 81       	ld	r24, Z
     624:	80 64       	ori	r24, 0x40	; 64
     626:	80 83       	st	Z, r24
     628:	80 81       	ld	r24, Z
     62a:	84 ff       	sbrs	r24, 4
     62c:	fd cf       	rjmp	.-6      	; 0x628 <ADC_Conversion+0x1c>
     62e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
     632:	ea e7       	ldi	r30, 0x7A	; 122
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	90 81       	ld	r25, Z
     638:	90 61       	ori	r25, 0x10	; 16
     63a:	90 83       	st	Z, r25
     63c:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x70007b>
     640:	08 95       	ret

00000642 <motion_pin_config>:
     642:	81 b1       	in	r24, 0x01	; 1
     644:	8f 60       	ori	r24, 0x0F	; 15
     646:	81 b9       	out	0x01, r24	; 1
     648:	82 b1       	in	r24, 0x02	; 2
     64a:	80 7f       	andi	r24, 0xF0	; 240
     64c:	82 b9       	out	0x02, r24	; 2
     64e:	ea e0       	ldi	r30, 0x0A	; 10
     650:	f1 e0       	ldi	r31, 0x01	; 1
     652:	80 81       	ld	r24, Z
     654:	88 61       	ori	r24, 0x18	; 24
     656:	80 83       	st	Z, r24
     658:	eb e0       	ldi	r30, 0x0B	; 11
     65a:	f1 e0       	ldi	r31, 0x01	; 1
     65c:	80 81       	ld	r24, Z
     65e:	88 61       	ori	r24, 0x18	; 24
     660:	80 83       	st	Z, r24
     662:	08 95       	ret

00000664 <timer5_init>:
     664:	e1 e2       	ldi	r30, 0x21	; 33
     666:	f1 e0       	ldi	r31, 0x01	; 1
     668:	10 82       	st	Z, r1
     66a:	8f ef       	ldi	r24, 0xFF	; 255
     66c:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	90 93 24 01 	sts	0x0124, r25	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
     676:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     67a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     67e:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
     682:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
     686:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
     68a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
     68e:	89 ea       	ldi	r24, 0xA9	; 169
     690:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
     694:	8b e0       	ldi	r24, 0x0B	; 11
     696:	80 83       	st	Z, r24
     698:	08 95       	ret

0000069a <motion_set>:
     69a:	92 b1       	in	r25, 0x02	; 2
     69c:	90 7f       	andi	r25, 0xF0	; 240
     69e:	8f 70       	andi	r24, 0x0F	; 15
     6a0:	98 2b       	or	r25, r24
     6a2:	92 b9       	out	0x02, r25	; 2
     6a4:	08 95       	ret

000006a6 <forward>:
     6a6:	86 e0       	ldi	r24, 0x06	; 6
     6a8:	f8 cf       	rjmp	.-16     	; 0x69a <motion_set>
     6aa:	08 95       	ret

000006ac <stop>:
     6ac:	80 e0       	ldi	r24, 0x00	; 0
     6ae:	f5 cf       	rjmp	.-22     	; 0x69a <motion_set>
     6b0:	08 95       	ret

000006b2 <back>:
     6b2:	89 e0       	ldi	r24, 0x09	; 9
     6b4:	f2 cf       	rjmp	.-28     	; 0x69a <motion_set>
     6b6:	08 95       	ret

000006b8 <left>:
     6b8:	85 e0       	ldi	r24, 0x05	; 5
     6ba:	ef cf       	rjmp	.-34     	; 0x69a <motion_set>
     6bc:	08 95       	ret

000006be <right>:
     6be:	8a e0       	ldi	r24, 0x0A	; 10
     6c0:	ec cf       	rjmp	.-40     	; 0x69a <motion_set>
     6c2:	08 95       	ret

000006c4 <left_encoder_pin_config>:
     6c4:	6c 98       	cbi	0x0d, 4	; 13
     6c6:	74 9a       	sbi	0x0e, 4	; 14
     6c8:	08 95       	ret

000006ca <right_encoder_pin_config>:
     6ca:	6d 98       	cbi	0x0d, 5	; 13
     6cc:	75 9a       	sbi	0x0e, 5	; 14
     6ce:	08 95       	ret

000006d0 <left_position_encoder_interrupt_init>:
     6d0:	f8 94       	cli
     6d2:	ea e6       	ldi	r30, 0x6A	; 106
     6d4:	f0 e0       	ldi	r31, 0x00	; 0
     6d6:	80 81       	ld	r24, Z
     6d8:	82 60       	ori	r24, 0x02	; 2
     6da:	80 83       	st	Z, r24
     6dc:	ec 9a       	sbi	0x1d, 4	; 29
     6de:	78 94       	sei
     6e0:	08 95       	ret

000006e2 <right_position_encoder_interrupt_init>:
     6e2:	f8 94       	cli
     6e4:	ea e6       	ldi	r30, 0x6A	; 106
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	80 81       	ld	r24, Z
     6ea:	88 60       	ori	r24, 0x08	; 8
     6ec:	80 83       	st	Z, r24
     6ee:	ed 9a       	sbi	0x1d, 5	; 29
     6f0:	08 95       	ret

000006f2 <__vector_6>:
     6f2:	1f 92       	push	r1
     6f4:	0f 92       	push	r0
     6f6:	0f b6       	in	r0, 0x3f	; 63
     6f8:	0f 92       	push	r0
     6fa:	11 24       	eor	r1, r1
     6fc:	8f 93       	push	r24
     6fe:	9f 93       	push	r25
     700:	af 93       	push	r26
     702:	bf 93       	push	r27
     704:	80 91 20 1d 	lds	r24, 0x1D20	; 0x801d20 <ShaftCountRight>
     708:	90 91 21 1d 	lds	r25, 0x1D21	; 0x801d21 <ShaftCountRight+0x1>
     70c:	a0 91 22 1d 	lds	r26, 0x1D22	; 0x801d22 <ShaftCountRight+0x2>
     710:	b0 91 23 1d 	lds	r27, 0x1D23	; 0x801d23 <ShaftCountRight+0x3>
     714:	01 96       	adiw	r24, 0x01	; 1
     716:	a1 1d       	adc	r26, r1
     718:	b1 1d       	adc	r27, r1
     71a:	80 93 20 1d 	sts	0x1D20, r24	; 0x801d20 <ShaftCountRight>
     71e:	90 93 21 1d 	sts	0x1D21, r25	; 0x801d21 <ShaftCountRight+0x1>
     722:	a0 93 22 1d 	sts	0x1D22, r26	; 0x801d22 <ShaftCountRight+0x2>
     726:	b0 93 23 1d 	sts	0x1D23, r27	; 0x801d23 <ShaftCountRight+0x3>
     72a:	bf 91       	pop	r27
     72c:	af 91       	pop	r26
     72e:	9f 91       	pop	r25
     730:	8f 91       	pop	r24
     732:	0f 90       	pop	r0
     734:	0f be       	out	0x3f, r0	; 63
     736:	0f 90       	pop	r0
     738:	1f 90       	pop	r1
     73a:	18 95       	reti

0000073c <__vector_5>:
     73c:	1f 92       	push	r1
     73e:	0f 92       	push	r0
     740:	0f b6       	in	r0, 0x3f	; 63
     742:	0f 92       	push	r0
     744:	11 24       	eor	r1, r1
     746:	8f 93       	push	r24
     748:	9f 93       	push	r25
     74a:	af 93       	push	r26
     74c:	bf 93       	push	r27
     74e:	80 91 1c 1d 	lds	r24, 0x1D1C	; 0x801d1c <ShaftCountLeft>
     752:	90 91 1d 1d 	lds	r25, 0x1D1D	; 0x801d1d <ShaftCountLeft+0x1>
     756:	a0 91 1e 1d 	lds	r26, 0x1D1E	; 0x801d1e <ShaftCountLeft+0x2>
     75a:	b0 91 1f 1d 	lds	r27, 0x1D1F	; 0x801d1f <ShaftCountLeft+0x3>
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	a1 1d       	adc	r26, r1
     762:	b1 1d       	adc	r27, r1
     764:	80 93 1c 1d 	sts	0x1D1C, r24	; 0x801d1c <ShaftCountLeft>
     768:	90 93 1d 1d 	sts	0x1D1D, r25	; 0x801d1d <ShaftCountLeft+0x1>
     76c:	a0 93 1e 1d 	sts	0x1D1E, r26	; 0x801d1e <ShaftCountLeft+0x2>
     770:	b0 93 1f 1d 	sts	0x1D1F, r27	; 0x801d1f <ShaftCountLeft+0x3>
     774:	bf 91       	pop	r27
     776:	af 91       	pop	r26
     778:	9f 91       	pop	r25
     77a:	8f 91       	pop	r24
     77c:	0f 90       	pop	r0
     77e:	0f be       	out	0x3f, r0	; 63
     780:	0f 90       	pop	r0
     782:	1f 90       	pop	r1
     784:	18 95       	reti

00000786 <angle_rotate>:
     786:	cf 92       	push	r12
     788:	df 92       	push	r13
     78a:	ef 92       	push	r14
     78c:	ff 92       	push	r15
     78e:	0f 93       	push	r16
     790:	1f 93       	push	r17
     792:	bc 01       	movw	r22, r24
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__floatunsisf>
     79c:	28 e4       	ldi	r18, 0x48	; 72
     79e:	31 ee       	ldi	r19, 0xE1	; 225
     7a0:	42 e8       	ldi	r20, 0x82	; 130
     7a2:	50 e4       	ldi	r21, 0x40	; 64
     7a4:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <__divsf3>
     7a8:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fixunssfsi>
     7ac:	ab 01       	movw	r20, r22
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	10 92 20 1d 	sts	0x1D20, r1	; 0x801d20 <ShaftCountRight>
     7b6:	10 92 21 1d 	sts	0x1D21, r1	; 0x801d21 <ShaftCountRight+0x1>
     7ba:	10 92 22 1d 	sts	0x1D22, r1	; 0x801d22 <ShaftCountRight+0x2>
     7be:	10 92 23 1d 	sts	0x1D23, r1	; 0x801d23 <ShaftCountRight+0x3>
     7c2:	10 92 1c 1d 	sts	0x1D1C, r1	; 0x801d1c <ShaftCountLeft>
     7c6:	10 92 1d 1d 	sts	0x1D1D, r1	; 0x801d1d <ShaftCountLeft+0x1>
     7ca:	10 92 1e 1d 	sts	0x1D1E, r1	; 0x801d1e <ShaftCountLeft+0x2>
     7ce:	10 92 1f 1d 	sts	0x1D1F, r1	; 0x801d1f <ShaftCountLeft+0x3>
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	e0 e0       	ldi	r30, 0x00	; 0
     7d6:	c0 90 20 1d 	lds	r12, 0x1D20	; 0x801d20 <ShaftCountRight>
     7da:	d0 90 21 1d 	lds	r13, 0x1D21	; 0x801d21 <ShaftCountRight+0x1>
     7de:	e0 90 22 1d 	lds	r14, 0x1D22	; 0x801d22 <ShaftCountRight+0x2>
     7e2:	f0 90 23 1d 	lds	r15, 0x1D23	; 0x801d23 <ShaftCountRight+0x3>
     7e6:	00 91 1c 1d 	lds	r16, 0x1D1C	; 0x801d1c <ShaftCountLeft>
     7ea:	10 91 1d 1d 	lds	r17, 0x1D1D	; 0x801d1d <ShaftCountLeft+0x1>
     7ee:	20 91 1e 1d 	lds	r18, 0x1D1E	; 0x801d1e <ShaftCountLeft+0x2>
     7f2:	30 91 1f 1d 	lds	r19, 0x1D1F	; 0x801d1f <ShaftCountLeft+0x3>
     7f6:	89 2f       	mov	r24, r25
     7f8:	04 17       	cp	r16, r20
     7fa:	15 07       	cpc	r17, r21
     7fc:	26 07       	cpc	r18, r22
     7fe:	37 07       	cpc	r19, r23
     800:	08 f4       	brcc	.+2      	; 0x804 <angle_rotate+0x7e>
     802:	8e 2f       	mov	r24, r30
     804:	81 11       	cpse	r24, r1
     806:	09 c0       	rjmp	.+18     	; 0x81a <angle_rotate+0x94>
     808:	89 2f       	mov	r24, r25
     80a:	c4 16       	cp	r12, r20
     80c:	d5 06       	cpc	r13, r21
     80e:	e6 06       	cpc	r14, r22
     810:	f7 06       	cpc	r15, r23
     812:	08 f4       	brcc	.+2      	; 0x816 <angle_rotate+0x90>
     814:	8e 2f       	mov	r24, r30
     816:	88 23       	and	r24, r24
     818:	f1 f2       	breq	.-68     	; 0x7d6 <angle_rotate+0x50>
     81a:	48 df       	rcall	.-368    	; 0x6ac <stop>
     81c:	1f 91       	pop	r17
     81e:	0f 91       	pop	r16
     820:	ff 90       	pop	r15
     822:	ef 90       	pop	r14
     824:	df 90       	pop	r13
     826:	cf 90       	pop	r12
     828:	08 95       	ret

0000082a <buzzer_pin_config>:
     82a:	3b 9a       	sbi	0x07, 3	; 7
     82c:	43 98       	cbi	0x08, 3	; 8
     82e:	08 95       	ret

00000830 <port_init>:
     830:	d9 de       	rcall	.-590    	; 0x5e4 <adc_pin_config>
     832:	07 df       	rcall	.-498    	; 0x642 <motion_pin_config>
     834:	47 df       	rcall	.-370    	; 0x6c4 <left_encoder_pin_config>
     836:	49 df       	rcall	.-366    	; 0x6ca <right_encoder_pin_config>
     838:	f8 df       	rcall	.-16     	; 0x82a <buzzer_pin_config>
     83a:	cd de       	rcall	.-614    	; 0x5d6 <lcd_port_config>
     83c:	de dc       	rcall	.-1604   	; 0x1fa <right_servo1_pin_config>
     83e:	e0 dc       	rcall	.-1600   	; 0x200 <left_servo2_pin_config>
     840:	e2 cc       	rjmp	.-1596   	; 0x206 <striking_arm_servo3_pin_config>
     842:	08 95       	ret

00000844 <buzzer_on>:
     844:	86 b1       	in	r24, 0x06	; 6
     846:	88 60       	ori	r24, 0x08	; 8
     848:	88 b9       	out	0x08, r24	; 8
     84a:	08 95       	ret

0000084c <buzzer_off>:
     84c:	86 b1       	in	r24, 0x06	; 6
     84e:	87 7f       	andi	r24, 0xF7	; 247
     850:	88 b9       	out	0x08, r24	; 8
     852:	08 95       	ret

00000854 <linear_distance_mm>:
     854:	bc 01       	movw	r22, r24
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__floatunsisf>
     85e:	25 ee       	ldi	r18, 0xE5	; 229
     860:	30 ed       	ldi	r19, 0xD0	; 208
     862:	4a ea       	ldi	r20, 0xAA	; 170
     864:	50 e4       	ldi	r21, 0x40	; 64
     866:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <__divsf3>
     86a:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__fixunssfsi>
     86e:	ab 01       	movw	r20, r22
     870:	bc 01       	movw	r22, r24
     872:	10 92 20 1d 	sts	0x1D20, r1	; 0x801d20 <ShaftCountRight>
     876:	10 92 21 1d 	sts	0x1D21, r1	; 0x801d21 <ShaftCountRight+0x1>
     87a:	10 92 22 1d 	sts	0x1D22, r1	; 0x801d22 <ShaftCountRight+0x2>
     87e:	10 92 23 1d 	sts	0x1D23, r1	; 0x801d23 <ShaftCountRight+0x3>
     882:	80 91 20 1d 	lds	r24, 0x1D20	; 0x801d20 <ShaftCountRight>
     886:	90 91 21 1d 	lds	r25, 0x1D21	; 0x801d21 <ShaftCountRight+0x1>
     88a:	a0 91 22 1d 	lds	r26, 0x1D22	; 0x801d22 <ShaftCountRight+0x2>
     88e:	b0 91 23 1d 	lds	r27, 0x1D23	; 0x801d23 <ShaftCountRight+0x3>
     892:	48 17       	cp	r20, r24
     894:	59 07       	cpc	r21, r25
     896:	6a 07       	cpc	r22, r26
     898:	7b 07       	cpc	r23, r27
     89a:	98 f7       	brcc	.-26     	; 0x882 <linear_distance_mm+0x2e>
     89c:	07 cf       	rjmp	.-498    	; 0x6ac <stop>
     89e:	08 95       	ret

000008a0 <forward_mm>:
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	ec 01       	movw	r28, r24
     8a6:	ff de       	rcall	.-514    	; 0x6a6 <forward>
     8a8:	ce 01       	movw	r24, r28
     8aa:	d4 df       	rcall	.-88     	; 0x854 <linear_distance_mm>
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <follow>:
     8b2:	2f 92       	push	r2
     8b4:	3f 92       	push	r3
     8b6:	4f 92       	push	r4
     8b8:	5f 92       	push	r5
     8ba:	6f 92       	push	r6
     8bc:	7f 92       	push	r7
     8be:	8f 92       	push	r8
     8c0:	9f 92       	push	r9
     8c2:	af 92       	push	r10
     8c4:	bf 92       	push	r11
     8c6:	cf 92       	push	r12
     8c8:	df 92       	push	r13
     8ca:	ef 92       	push	r14
     8cc:	ff 92       	push	r15
     8ce:	0f 93       	push	r16
     8d0:	1f 93       	push	r17
     8d2:	cf 93       	push	r28
     8d4:	df 93       	push	r29
     8d6:	2f ef       	ldi	r18, 0xFF	; 255
     8d8:	8f e7       	ldi	r24, 0x7F	; 127
     8da:	96 e1       	ldi	r25, 0x16	; 22
     8dc:	21 50       	subi	r18, 0x01	; 1
     8de:	80 40       	sbci	r24, 0x00	; 0
     8e0:	90 40       	sbci	r25, 0x00	; 0
     8e2:	e1 f7       	brne	.-8      	; 0x8dc <follow+0x2a>
     8e4:	00 c0       	rjmp	.+0      	; 0x8e6 <follow+0x34>
     8e6:	00 00       	nop
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	d9 df       	rcall	.-78     	; 0x8a0 <forward_mm>
     8ee:	db de       	rcall	.-586    	; 0x6a6 <forward>
     8f0:	a1 2c       	mov	r10, r1
     8f2:	b1 2c       	mov	r11, r1
     8f4:	21 2c       	mov	r2, r1
     8f6:	31 2c       	mov	r3, r1
     8f8:	66 24       	eor	r6, r6
     8fa:	6a 94       	dec	r6
     8fc:	71 2c       	mov	r7, r1
     8fe:	82 e0       	ldi	r24, 0x02	; 2
     900:	85 de       	rcall	.-758    	; 0x60c <ADC_Conversion>
     902:	88 2e       	mov	r8, r24
     904:	83 e0       	ldi	r24, 0x03	; 3
     906:	82 de       	rcall	.-764    	; 0x60c <ADC_Conversion>
     908:	48 2e       	mov	r4, r24
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	7f de       	rcall	.-770    	; 0x60c <ADC_Conversion>
     90e:	58 2e       	mov	r5, r24
     910:	91 2c       	mov	r9, r1
     912:	e4 2c       	mov	r14, r4
     914:	f1 2c       	mov	r15, r1
     916:	64 01       	movw	r12, r8
     918:	ce 0c       	add	r12, r14
     91a:	df 1c       	adc	r13, r15
     91c:	c8 2f       	mov	r28, r24
     91e:	d0 e0       	ldi	r29, 0x00	; 0
     920:	86 01       	movw	r16, r12
     922:	0c 0f       	add	r16, r28
     924:	1d 1f       	adc	r17, r29
     926:	23 e0       	ldi	r18, 0x03	; 3
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	a8 01       	movw	r20, r16
     92c:	6d e0       	ldi	r22, 0x0D	; 13
     92e:	81 e0       	ldi	r24, 0x01	; 1
     930:	5a dd       	rcall	.-1356   	; 0x3e6 <lcd_print>
     932:	0c 38       	cpi	r16, 0x8C	; 140
     934:	11 05       	cpc	r17, r1
     936:	80 f0       	brcs	.+32     	; 0x958 <follow+0xa6>
     938:	b9 de       	rcall	.-654    	; 0x6ac <stop>
     93a:	ef ef       	ldi	r30, 0xFF	; 255
     93c:	ff e8       	ldi	r31, 0x8F	; 143
     93e:	31 97       	sbiw	r30, 0x01	; 1
     940:	f1 f7       	brne	.-4      	; 0x93e <follow+0x8c>
     942:	00 c0       	rjmp	.+0      	; 0x944 <follow+0x92>
     944:	00 00       	nop
     946:	af de       	rcall	.-674    	; 0x6a6 <forward>
     948:	8c ef       	ldi	r24, 0xFC	; 252
     94a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     94e:	8f ef       	ldi	r24, 0xFF	; 255
     950:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
     954:	ab de       	rcall	.-682    	; 0x6ac <stop>
     956:	d2 c0       	rjmp	.+420    	; 0xafc <follow+0x24a>
     958:	45 14       	cp	r4, r5
     95a:	08 f4       	brcc	.+2      	; 0x95e <follow+0xac>
     95c:	69 c0       	rjmp	.+210    	; 0xa30 <follow+0x17e>
     95e:	cc 0f       	add	r28, r28
     960:	dd 1f       	adc	r29, r29
     962:	8c 0e       	add	r8, r28
     964:	9d 1e       	adc	r9, r29
     966:	fa ef       	ldi	r31, 0xFA	; 250
     968:	f8 9d       	mul	r31, r8
     96a:	c0 01       	movw	r24, r0
     96c:	f9 9d       	mul	r31, r9
     96e:	90 0d       	add	r25, r0
     970:	11 24       	eor	r1, r1
     972:	b8 01       	movw	r22, r16
     974:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <__udivmodhi4>
     978:	eb 01       	movw	r28, r22
     97a:	ca 5f       	subi	r28, 0xFA	; 250
     97c:	d1 09       	sbc	r29, r1
     97e:	ac 0e       	add	r10, r28
     980:	bd 1e       	adc	r11, r29
     982:	be 01       	movw	r22, r28
     984:	0d 2e       	mov	r0, r29
     986:	00 0c       	add	r0, r0
     988:	88 0b       	sbc	r24, r24
     98a:	99 0b       	sbc	r25, r25
     98c:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     990:	26 e6       	ldi	r18, 0x66	; 102
     992:	36 e6       	ldi	r19, 0x66	; 102
     994:	46 ee       	ldi	r20, 0xE6	; 230
     996:	5f e3       	ldi	r21, 0x3F	; 63
     998:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     99c:	6b 01       	movw	r12, r22
     99e:	7c 01       	movw	r14, r24
     9a0:	b5 01       	movw	r22, r10
     9a2:	0b 2c       	mov	r0, r11
     9a4:	00 0c       	add	r0, r0
     9a6:	88 0b       	sbc	r24, r24
     9a8:	99 0b       	sbc	r25, r25
     9aa:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	a9 01       	movw	r20, r18
     9b4:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     9b8:	9b 01       	movw	r18, r22
     9ba:	ac 01       	movw	r20, r24
     9bc:	c7 01       	movw	r24, r14
     9be:	b6 01       	movw	r22, r12
     9c0:	a2 d7       	rcall	.+3908   	; 0x1906 <__addsf3>
     9c2:	6b 01       	movw	r12, r22
     9c4:	7c 01       	movw	r14, r24
     9c6:	ce 01       	movw	r24, r28
     9c8:	82 19       	sub	r24, r2
     9ca:	93 09       	sbc	r25, r3
     9cc:	bc 01       	movw	r22, r24
     9ce:	99 0f       	add	r25, r25
     9d0:	88 0b       	sbc	r24, r24
     9d2:	99 0b       	sbc	r25, r25
     9d4:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	48 e9       	ldi	r20, 0x98	; 152
     9de:	50 e4       	ldi	r21, 0x40	; 64
     9e0:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     9e4:	9b 01       	movw	r18, r22
     9e6:	ac 01       	movw	r20, r24
     9e8:	c7 01       	movw	r24, r14
     9ea:	b6 01       	movw	r22, r12
     9ec:	8c d7       	rcall	.+3864   	; 0x1906 <__addsf3>
     9ee:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fixsfsi>
     9f2:	61 30       	cpi	r22, 0x01	; 1
     9f4:	2f ef       	ldi	r18, 0xFF	; 255
     9f6:	72 07       	cpc	r23, r18
     9f8:	14 f4       	brge	.+4      	; 0x9fe <follow+0x14c>
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	7f ef       	ldi	r23, 0xFF	; 255
     9fe:	6f 3f       	cpi	r22, 0xFF	; 255
     a00:	71 05       	cpc	r23, r1
     a02:	11 f0       	breq	.+4      	; 0xa08 <follow+0x156>
     a04:	0c f0       	brlt	.+2      	; 0xa08 <follow+0x156>
     a06:	b3 01       	movw	r22, r6
     a08:	77 23       	and	r23, r23
     a0a:	2c f4       	brge	.+10     	; 0xa16 <follow+0x164>
     a0c:	8b 01       	movw	r16, r22
     a0e:	01 50       	subi	r16, 0x01	; 1
     a10:	1f 4f       	sbci	r17, 0xFF	; 255
     a12:	73 01       	movw	r14, r6
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <follow+0x16c>
     a16:	73 01       	movw	r14, r6
     a18:	e6 1a       	sub	r14, r22
     a1a:	f7 0a       	sbc	r15, r23
     a1c:	83 01       	movw	r16, r6
     a1e:	43 de       	rcall	.-890    	; 0x6a6 <forward>
     a20:	e8 e2       	ldi	r30, 0x28	; 40
     a22:	f1 e0       	ldi	r31, 0x01	; 1
     a24:	00 83       	st	Z, r16
     a26:	ea e2       	ldi	r30, 0x2A	; 42
     a28:	f1 e0       	ldi	r31, 0x01	; 1
     a2a:	e0 82       	st	Z, r14
     a2c:	1e 01       	movw	r2, r28
     a2e:	67 cf       	rjmp	.-306    	; 0x8fe <follow+0x4c>
     a30:	ec 0c       	add	r14, r12
     a32:	fd 1c       	adc	r15, r13
     a34:	fa ef       	ldi	r31, 0xFA	; 250
     a36:	fe 9d       	mul	r31, r14
     a38:	c0 01       	movw	r24, r0
     a3a:	ff 9d       	mul	r31, r15
     a3c:	90 0d       	add	r25, r0
     a3e:	11 24       	eor	r1, r1
     a40:	b8 01       	movw	r22, r16
     a42:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <__udivmodhi4>
     a46:	eb 01       	movw	r28, r22
     a48:	ca 5f       	subi	r28, 0xFA	; 250
     a4a:	d1 09       	sbc	r29, r1
     a4c:	ac 0e       	add	r10, r28
     a4e:	bd 1e       	adc	r11, r29
     a50:	be 01       	movw	r22, r28
     a52:	0d 2e       	mov	r0, r29
     a54:	00 0c       	add	r0, r0
     a56:	88 0b       	sbc	r24, r24
     a58:	99 0b       	sbc	r25, r25
     a5a:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     a5e:	26 e6       	ldi	r18, 0x66	; 102
     a60:	36 e6       	ldi	r19, 0x66	; 102
     a62:	46 ee       	ldi	r20, 0xE6	; 230
     a64:	5f e3       	ldi	r21, 0x3F	; 63
     a66:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     a6a:	6b 01       	movw	r12, r22
     a6c:	7c 01       	movw	r14, r24
     a6e:	b5 01       	movw	r22, r10
     a70:	0b 2c       	mov	r0, r11
     a72:	00 0c       	add	r0, r0
     a74:	88 0b       	sbc	r24, r24
     a76:	99 0b       	sbc	r25, r25
     a78:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	a9 01       	movw	r20, r18
     a82:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     a86:	9b 01       	movw	r18, r22
     a88:	ac 01       	movw	r20, r24
     a8a:	c7 01       	movw	r24, r14
     a8c:	b6 01       	movw	r22, r12
     a8e:	3b d7       	rcall	.+3702   	; 0x1906 <__addsf3>
     a90:	6b 01       	movw	r12, r22
     a92:	7c 01       	movw	r14, r24
     a94:	ce 01       	movw	r24, r28
     a96:	82 19       	sub	r24, r2
     a98:	93 09       	sbc	r25, r3
     a9a:	bc 01       	movw	r22, r24
     a9c:	99 0f       	add	r25, r25
     a9e:	88 0b       	sbc	r24, r24
     aa0:	99 0b       	sbc	r25, r25
     aa2:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <__floatsisf>
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	30 e0       	ldi	r19, 0x00	; 0
     aaa:	48 e9       	ldi	r20, 0x98	; 152
     aac:	50 e4       	ldi	r21, 0x40	; 64
     aae:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     ab2:	9b 01       	movw	r18, r22
     ab4:	ac 01       	movw	r20, r24
     ab6:	c7 01       	movw	r24, r14
     ab8:	b6 01       	movw	r22, r12
     aba:	25 d7       	rcall	.+3658   	; 0x1906 <__addsf3>
     abc:	f0 d7       	rcall	.+4064   	; 0x1a9e <__fixsfsi>
     abe:	61 30       	cpi	r22, 0x01	; 1
     ac0:	2f ef       	ldi	r18, 0xFF	; 255
     ac2:	72 07       	cpc	r23, r18
     ac4:	14 f4       	brge	.+4      	; 0xaca <follow+0x218>
     ac6:	61 e0       	ldi	r22, 0x01	; 1
     ac8:	7f ef       	ldi	r23, 0xFF	; 255
     aca:	6f 3f       	cpi	r22, 0xFF	; 255
     acc:	71 05       	cpc	r23, r1
     ace:	11 f0       	breq	.+4      	; 0xad4 <follow+0x222>
     ad0:	0c f0       	brlt	.+2      	; 0xad4 <follow+0x222>
     ad2:	b3 01       	movw	r22, r6
     ad4:	77 23       	and	r23, r23
     ad6:	2c f4       	brge	.+10     	; 0xae2 <follow+0x230>
     ad8:	8b 01       	movw	r16, r22
     ada:	01 50       	subi	r16, 0x01	; 1
     adc:	1f 4f       	sbci	r17, 0xFF	; 255
     ade:	73 01       	movw	r14, r6
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <follow+0x238>
     ae2:	73 01       	movw	r14, r6
     ae4:	e6 1a       	sub	r14, r22
     ae6:	f7 0a       	sbc	r15, r23
     ae8:	83 01       	movw	r16, r6
     aea:	dd dd       	rcall	.-1094   	; 0x6a6 <forward>
     aec:	e8 e2       	ldi	r30, 0x28	; 40
     aee:	f1 e0       	ldi	r31, 0x01	; 1
     af0:	e0 82       	st	Z, r14
     af2:	ea e2       	ldi	r30, 0x2A	; 42
     af4:	f1 e0       	ldi	r31, 0x01	; 1
     af6:	00 83       	st	Z, r16
     af8:	1e 01       	movw	r2, r28
     afa:	01 cf       	rjmp	.-510    	; 0x8fe <follow+0x4c>
     afc:	df 91       	pop	r29
     afe:	cf 91       	pop	r28
     b00:	1f 91       	pop	r17
     b02:	0f 91       	pop	r16
     b04:	ff 90       	pop	r15
     b06:	ef 90       	pop	r14
     b08:	df 90       	pop	r13
     b0a:	cf 90       	pop	r12
     b0c:	bf 90       	pop	r11
     b0e:	af 90       	pop	r10
     b10:	9f 90       	pop	r9
     b12:	8f 90       	pop	r8
     b14:	7f 90       	pop	r7
     b16:	6f 90       	pop	r6
     b18:	5f 90       	pop	r5
     b1a:	4f 90       	pop	r4
     b1c:	3f 90       	pop	r3
     b1e:	2f 90       	pop	r2
     b20:	08 95       	ret

00000b22 <left_degrees>:
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	ec 01       	movw	r28, r24
     b28:	8e e1       	ldi	r24, 0x1E	; 30
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	b9 de       	rcall	.-654    	; 0x8a0 <forward_mm>
     b2e:	c4 dd       	rcall	.-1144   	; 0x6b8 <left>
     b30:	ce 01       	movw	r24, r28
     b32:	29 de       	rcall	.-942    	; 0x786 <angle_rotate>
     b34:	df 91       	pop	r29
     b36:	cf 91       	pop	r28
     b38:	08 95       	ret

00000b3a <right_degrees>:
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	ec 01       	movw	r28, r24
     b40:	8e e1       	ldi	r24, 0x1E	; 30
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	ad de       	rcall	.-678    	; 0x8a0 <forward_mm>
     b46:	bb dd       	rcall	.-1162   	; 0x6be <right>
     b48:	ce 01       	movw	r24, r28
     b4a:	1d de       	rcall	.-966    	; 0x786 <angle_rotate>
     b4c:	df 91       	pop	r29
     b4e:	cf 91       	pop	r28
     b50:	08 95       	ret

00000b52 <back_mm>:
     b52:	cf 93       	push	r28
     b54:	df 93       	push	r29
     b56:	ec 01       	movw	r28, r24
     b58:	ac dd       	rcall	.-1192   	; 0x6b2 <back>
     b5a:	ce 01       	movw	r24, r28
     b5c:	7b de       	rcall	.-778    	; 0x854 <linear_distance_mm>
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	08 95       	ret

00000b64 <timer1_init>:
     b64:	e1 e8       	ldi	r30, 0x81	; 129
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	10 82       	st	Z, r1
     b6a:	8c ef       	ldi	r24, 0xFC	; 252
     b6c:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     b76:	93 e0       	ldi	r25, 0x03	; 3
     b78:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     b82:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
     b86:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
     b8a:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
     b8e:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
     b92:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     b96:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
     b9a:	8b ea       	ldi	r24, 0xAB	; 171
     b9c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
     ba0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x700082>
     ba4:	8c e0       	ldi	r24, 0x0C	; 12
     ba6:	80 83       	st	Z, r24
     ba8:	08 95       	ret

00000baa <init_devices>:
     baa:	f8 94       	cli
     bac:	41 de       	rcall	.-894    	; 0x830 <port_init>
     bae:	21 dd       	rcall	.-1470   	; 0x5f2 <adc_init>
     bb0:	d9 df       	rcall	.-78     	; 0xb64 <timer1_init>
     bb2:	58 dd       	rcall	.-1360   	; 0x664 <timer5_init>
     bb4:	8d dd       	rcall	.-1254   	; 0x6d0 <left_position_encoder_interrupt_init>
     bb6:	95 dd       	rcall	.-1238   	; 0x6e2 <right_position_encoder_interrupt_init>
     bb8:	78 94       	sei
     bba:	08 95       	ret

00000bbc <Sharp_GP2D12_estimation>:
     bbc:	68 2f       	mov	r22, r24
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	9d d7       	rcall	.+3898   	; 0x1b00 <__floatunsisf>
     bc6:	2f ee       	ldi	r18, 0xEF	; 239
     bc8:	39 ec       	ldi	r19, 0xC9	; 201
     bca:	43 e9       	ldi	r20, 0x93	; 147
     bcc:	5f e3       	ldi	r21, 0x3F	; 63
     bce:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <pow>
     bd2:	9b 01       	movw	r18, r22
     bd4:	ac 01       	movw	r20, r24
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	80 e8       	ldi	r24, 0x80	; 128
     bdc:	9f e3       	ldi	r25, 0x3F	; 63
     bde:	f7 d6       	rcall	.+3566   	; 0x19ce <__divsf3>
     be0:	2a e9       	ldi	r18, 0x9A	; 154
     be2:	39 ef       	ldi	r19, 0xF9	; 249
     be4:	4e e2       	ldi	r20, 0x2E	; 46
     be6:	55 e4       	ldi	r21, 0x45	; 69
     be8:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	40 e2       	ldi	r20, 0x20	; 32
     bf2:	51 e4       	ldi	r21, 0x41	; 65
     bf4:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <__mulsf3>
     bf8:	52 d7       	rcall	.+3748   	; 0x1a9e <__fixsfsi>
     bfa:	cb 01       	movw	r24, r22
     bfc:	61 32       	cpi	r22, 0x21	; 33
     bfe:	73 40       	sbci	r23, 0x03	; 3
     c00:	10 f0       	brcs	.+4      	; 0xc06 <Sharp_GP2D12_estimation+0x4a>
     c02:	80 e2       	ldi	r24, 0x20	; 32
     c04:	93 e0       	ldi	r25, 0x03	; 3
     c06:	08 95       	ret

00000c08 <find_path>:
     c08:	ff 92       	push	r15
     c0a:	0f 93       	push	r16
     c0c:	1f 93       	push	r17
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	fb 01       	movw	r30, r22
     c14:	10 92 ef 1d 	sts	0x1DEF, r1	; 0x801def <shortest_distance+0x1>
     c18:	10 92 ee 1d 	sts	0x1DEE, r1	; 0x801dee <shortest_distance>
     c1c:	68 17       	cp	r22, r24
     c1e:	79 07       	cpc	r23, r25
     c20:	b1 f1       	breq	.+108    	; 0xc8e <find_path+0x86>
     c22:	00 91 1a 1d 	lds	r16, 0x1D1A	; 0x801d1a <path_length>
     c26:	10 91 1b 1d 	lds	r17, 0x1D1B	; 0x801d1b <path_length+0x1>
     c2a:	c8 e8       	ldi	r28, 0x88	; 136
     c2c:	dd e1       	ldi	r29, 0x1D	; 29
     c2e:	40 e0       	ldi	r20, 0x00	; 0
     c30:	50 e0       	ldi	r21, 0x00	; 0
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	0f 2e       	mov	r0, r31
     c38:	f0 e3       	ldi	r31, 0x30	; 48
     c3a:	ff 2e       	mov	r15, r31
     c3c:	f0 2d       	mov	r31, r0
     c3e:	2f 5f       	subi	r18, 0xFF	; 255
     c40:	3f 4f       	sbci	r19, 0xFF	; 255
     c42:	e9 93       	st	Y+, r30
     c44:	f9 93       	st	Y+, r31
     c46:	df 01       	movw	r26, r30
     c48:	aa 0f       	add	r26, r26
     c4a:	bb 1f       	adc	r27, r27
     c4c:	ae 50       	subi	r26, 0x0E	; 14
     c4e:	b2 4e       	sbci	r27, 0xE2	; 226
     c50:	0d 90       	ld	r0, X+
     c52:	bc 91       	ld	r27, X
     c54:	a0 2d       	mov	r26, r0
     c56:	fa 9e       	mul	r15, r26
     c58:	b0 01       	movw	r22, r0
     c5a:	fb 9e       	mul	r15, r27
     c5c:	70 0d       	add	r23, r0
     c5e:	11 24       	eor	r1, r1
     c60:	e6 0f       	add	r30, r22
     c62:	f7 1f       	adc	r31, r23
     c64:	ee 5e       	subi	r30, 0xEE	; 238
     c66:	fb 4e       	sbci	r31, 0xEB	; 235
     c68:	60 81       	ld	r22, Z
     c6a:	46 0f       	add	r20, r22
     c6c:	51 1d       	adc	r21, r1
     c6e:	b9 01       	movw	r22, r18
     c70:	60 0f       	add	r22, r16
     c72:	71 1f       	adc	r23, r17
     c74:	fd 01       	movw	r30, r26
     c76:	8a 17       	cp	r24, r26
     c78:	9b 07       	cpc	r25, r27
     c7a:	09 f7       	brne	.-62     	; 0xc3e <find_path+0x36>
     c7c:	50 93 ef 1d 	sts	0x1DEF, r21	; 0x801def <shortest_distance+0x1>
     c80:	40 93 ee 1d 	sts	0x1DEE, r20	; 0x801dee <shortest_distance>
     c84:	70 93 1b 1d 	sts	0x1D1B, r23	; 0x801d1b <path_length+0x1>
     c88:	60 93 1a 1d 	sts	0x1D1A, r22	; 0x801d1a <path_length>
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <find_path+0x8a>
     c8e:	20 e0       	ldi	r18, 0x00	; 0
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	22 0f       	add	r18, r18
     c94:	33 1f       	adc	r19, r19
     c96:	f9 01       	movw	r30, r18
     c98:	e8 57       	subi	r30, 0x78	; 120
     c9a:	f2 4e       	sbci	r31, 0xE2	; 226
     c9c:	91 83       	std	Z+1, r25	; 0x01
     c9e:	80 83       	st	Z, r24
     ca0:	df 91       	pop	r29
     ca2:	cf 91       	pop	r28
     ca4:	1f 91       	pop	r17
     ca6:	0f 91       	pop	r16
     ca8:	ff 90       	pop	r15
     caa:	08 95       	ret

00000cac <min_tmp>:
     cac:	cf 93       	push	r28
     cae:	df 93       	push	r29
     cb0:	60 91 12 1d 	lds	r22, 0x1D12	; 0x801d12 <total_nodes>
     cb4:	70 91 13 1d 	lds	r23, 0x1D13	; 0x801d13 <total_nodes+0x1>
     cb8:	16 16       	cp	r1, r22
     cba:	17 06       	cpc	r1, r23
     cbc:	ec f4       	brge	.+58     	; 0xcf8 <min_tmp+0x4c>
     cbe:	a4 e2       	ldi	r26, 0x24	; 36
     cc0:	bd e1       	ldi	r27, 0x1D	; 29
     cc2:	e0 e7       	ldi	r30, 0x70	; 112
     cc4:	fe e1       	ldi	r31, 0x1E	; 30
     cc6:	8f ef       	ldi	r24, 0xFF	; 255
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	cf e0       	ldi	r28, 0x0F	; 15
     ccc:	d7 e2       	ldi	r29, 0x27	; 39
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	4d 91       	ld	r20, X+
     cd4:	5d 91       	ld	r21, X+
     cd6:	45 2b       	or	r20, r21
     cd8:	41 f4       	brne	.+16     	; 0xcea <min_tmp+0x3e>
     cda:	40 81       	ld	r20, Z
     cdc:	51 81       	ldd	r21, Z+1	; 0x01
     cde:	4c 17       	cp	r20, r28
     ce0:	5d 07       	cpc	r21, r29
     ce2:	1c f4       	brge	.+6      	; 0xcea <min_tmp+0x3e>
     ce4:	82 2f       	mov	r24, r18
     ce6:	93 2f       	mov	r25, r19
     ce8:	ea 01       	movw	r28, r20
     cea:	2f 5f       	subi	r18, 0xFF	; 255
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	32 96       	adiw	r30, 0x02	; 2
     cf0:	26 17       	cp	r18, r22
     cf2:	37 07       	cpc	r19, r23
     cf4:	71 f7       	brne	.-36     	; 0xcd2 <min_tmp+0x26>
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <min_tmp+0x50>
     cf8:	8f ef       	ldi	r24, 0xFF	; 255
     cfa:	9f ef       	ldi	r25, 0xFF	; 255
     cfc:	df 91       	pop	r29
     cfe:	cf 91       	pop	r28
     d00:	08 95       	ret

00000d02 <dijkstra>:
     d02:	4f 92       	push	r4
     d04:	5f 92       	push	r5
     d06:	7f 92       	push	r7
     d08:	8f 92       	push	r8
     d0a:	9f 92       	push	r9
     d0c:	af 92       	push	r10
     d0e:	bf 92       	push	r11
     d10:	cf 92       	push	r12
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	e0 90 12 1d 	lds	r14, 0x1D12	; 0x801d12 <total_nodes>
     d24:	f0 90 13 1d 	lds	r15, 0x1D13	; 0x801d13 <total_nodes+0x1>
     d28:	1e 14       	cp	r1, r14
     d2a:	1f 04       	cpc	r1, r15
     d2c:	bc f4       	brge	.+46     	; 0xd5c <dijkstra+0x5a>
     d2e:	c2 ef       	ldi	r28, 0xF2	; 242
     d30:	dd e1       	ldi	r29, 0x1D	; 29
     d32:	a0 e7       	ldi	r26, 0x70	; 112
     d34:	be e1       	ldi	r27, 0x1E	; 30
     d36:	e4 e2       	ldi	r30, 0x24	; 36
     d38:	fd e1       	ldi	r31, 0x1D	; 29
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	6f ef       	ldi	r22, 0xFF	; 255
     d40:	7f ef       	ldi	r23, 0xFF	; 255
     d42:	4f e0       	ldi	r20, 0x0F	; 15
     d44:	57 e2       	ldi	r21, 0x27	; 39
     d46:	69 93       	st	Y+, r22
     d48:	79 93       	st	Y+, r23
     d4a:	4d 93       	st	X+, r20
     d4c:	5d 93       	st	X+, r21
     d4e:	11 92       	st	Z+, r1
     d50:	11 92       	st	Z+, r1
     d52:	2f 5f       	subi	r18, 0xFF	; 255
     d54:	3f 4f       	sbci	r19, 0xFF	; 255
     d56:	2e 15       	cp	r18, r14
     d58:	3f 05       	cpc	r19, r15
     d5a:	ac f3       	brlt	.-22     	; 0xd46 <dijkstra+0x44>
     d5c:	fc 01       	movw	r30, r24
     d5e:	ee 0f       	add	r30, r30
     d60:	ff 1f       	adc	r31, r31
     d62:	e0 59       	subi	r30, 0x90	; 144
     d64:	f1 4e       	sbci	r31, 0xE1	; 225
     d66:	11 82       	std	Z+1, r1	; 0x01
     d68:	10 82       	st	Z, r1
     d6a:	e7 01       	movw	r28, r14
     d6c:	cc 0f       	add	r28, r28
     d6e:	dd 1f       	adc	r29, r29
     d70:	be 01       	movw	r22, r28
     d72:	60 59       	subi	r22, 0x90	; 144
     d74:	71 4e       	sbci	r23, 0xE1	; 225
     d76:	2b 01       	movw	r4, r22
     d78:	01 e0       	ldi	r16, 0x01	; 1
     d7a:	10 e0       	ldi	r17, 0x00	; 0
     d7c:	0f 2e       	mov	r0, r31
     d7e:	f0 e3       	ldi	r31, 0x30	; 48
     d80:	bf 2e       	mov	r11, r31
     d82:	f0 2d       	mov	r31, r0
     d84:	0f 2e       	mov	r0, r31
     d86:	f0 e7       	ldi	r31, 0x70	; 112
     d88:	8f 2e       	mov	r8, r31
     d8a:	fe e1       	ldi	r31, 0x1E	; 30
     d8c:	9f 2e       	mov	r9, r31
     d8e:	f0 2d       	mov	r31, r0
     d90:	a1 2c       	mov	r10, r1
     d92:	71 2c       	mov	r7, r1
     d94:	8b df       	rcall	.-234    	; 0xcac <min_tmp>
     d96:	8f 3f       	cpi	r24, 0xFF	; 255
     d98:	7f ef       	ldi	r23, 0xFF	; 255
     d9a:	97 07       	cpc	r25, r23
     d9c:	09 f4       	brne	.+2      	; 0xda0 <dijkstra+0x9e>
     d9e:	3f c0       	rjmp	.+126    	; 0xe1e <dijkstra+0x11c>
     da0:	fc 01       	movw	r30, r24
     da2:	ee 0f       	add	r30, r30
     da4:	ff 1f       	adc	r31, r31
     da6:	ec 5d       	subi	r30, 0xDC	; 220
     da8:	f2 4e       	sbci	r31, 0xE2	; 226
     daa:	11 83       	std	Z+1, r17	; 0x01
     dac:	00 83       	st	Z, r16
     dae:	1e 14       	cp	r1, r14
     db0:	1f 04       	cpc	r1, r15
     db2:	84 f7       	brge	.-32     	; 0xd94 <dijkstra+0x92>
     db4:	b8 9e       	mul	r11, r24
     db6:	d0 01       	movw	r26, r0
     db8:	b9 9e       	mul	r11, r25
     dba:	b0 0d       	add	r27, r0
     dbc:	11 24       	eor	r1, r1
     dbe:	ae 5e       	subi	r26, 0xEE	; 238
     dc0:	bb 4e       	sbci	r27, 0xEB	; 235
     dc2:	f4 01       	movw	r30, r8
     dc4:	2a 2d       	mov	r18, r10
     dc6:	37 2d       	mov	r19, r7
     dc8:	ac 01       	movw	r20, r24
     dca:	44 0f       	add	r20, r20
     dcc:	55 1f       	adc	r21, r21
     dce:	ea 01       	movw	r28, r20
     dd0:	c0 59       	subi	r28, 0x90	; 144
     dd2:	d1 4e       	sbci	r29, 0xE1	; 225
     dd4:	6e 01       	movw	r12, r28
     dd6:	6d 91       	ld	r22, X+
     dd8:	60 33       	cpi	r22, 0x30	; 48
     dda:	d1 f0       	breq	.+52     	; 0xe10 <dijkstra+0x10e>
     ddc:	a9 01       	movw	r20, r18
     dde:	4c 5d       	subi	r20, 0xDC	; 220
     de0:	52 4e       	sbci	r21, 0xE2	; 226
     de2:	ea 01       	movw	r28, r20
     de4:	48 81       	ld	r20, Y
     de6:	59 81       	ldd	r21, Y+1	; 0x01
     de8:	45 2b       	or	r20, r21
     dea:	91 f4       	brne	.+36     	; 0xe10 <dijkstra+0x10e>
     dec:	e6 01       	movw	r28, r12
     dee:	48 81       	ld	r20, Y
     df0:	59 81       	ldd	r21, Y+1	; 0x01
     df2:	46 0f       	add	r20, r22
     df4:	51 1d       	adc	r21, r1
     df6:	60 81       	ld	r22, Z
     df8:	71 81       	ldd	r23, Z+1	; 0x01
     dfa:	46 17       	cp	r20, r22
     dfc:	57 07       	cpc	r21, r23
     dfe:	44 f4       	brge	.+16     	; 0xe10 <dijkstra+0x10e>
     e00:	b9 01       	movw	r22, r18
     e02:	6e 50       	subi	r22, 0x0E	; 14
     e04:	72 4e       	sbci	r23, 0xE2	; 226
     e06:	eb 01       	movw	r28, r22
     e08:	99 83       	std	Y+1, r25	; 0x01
     e0a:	88 83       	st	Y, r24
     e0c:	51 83       	std	Z+1, r21	; 0x01
     e0e:	40 83       	st	Z, r20
     e10:	2e 5f       	subi	r18, 0xFE	; 254
     e12:	3f 4f       	sbci	r19, 0xFF	; 255
     e14:	32 96       	adiw	r30, 0x02	; 2
     e16:	e4 15       	cp	r30, r4
     e18:	f5 05       	cpc	r31, r5
     e1a:	e9 f6       	brne	.-70     	; 0xdd6 <dijkstra+0xd4>
     e1c:	bb cf       	rjmp	.-138    	; 0xd94 <dijkstra+0x92>
     e1e:	df 91       	pop	r29
     e20:	cf 91       	pop	r28
     e22:	1f 91       	pop	r17
     e24:	0f 91       	pop	r16
     e26:	ff 90       	pop	r15
     e28:	ef 90       	pop	r14
     e2a:	df 90       	pop	r13
     e2c:	cf 90       	pop	r12
     e2e:	bf 90       	pop	r11
     e30:	af 90       	pop	r10
     e32:	9f 90       	pop	r9
     e34:	8f 90       	pop	r8
     e36:	7f 90       	pop	r7
     e38:	5f 90       	pop	r5
     e3a:	4f 90       	pop	r4
     e3c:	08 95       	ret

00000e3e <find_shortest_path>:
     e3e:	e8 e8       	ldi	r30, 0x88	; 136
     e40:	fd e1       	ldi	r31, 0x1D	; 29
     e42:	8c ee       	ldi	r24, 0xEC	; 236
     e44:	9d e1       	ldi	r25, 0x1D	; 29
     e46:	11 92       	st	Z+, r1
     e48:	11 92       	st	Z+, r1
     e4a:	e8 17       	cp	r30, r24
     e4c:	f9 07       	cpc	r31, r25
     e4e:	d9 f7       	brne	.-10     	; 0xe46 <find_shortest_path+0x8>
     e50:	10 92 1b 1d 	sts	0x1D1B, r1	; 0x801d1b <path_length+0x1>
     e54:	10 92 1a 1d 	sts	0x1D1A, r1	; 0x801d1a <path_length>
     e58:	80 91 d8 1e 	lds	r24, 0x1ED8	; 0x801ed8 <source_node>
     e5c:	90 91 d9 1e 	lds	r25, 0x1ED9	; 0x801ed9 <source_node+0x1>
     e60:	50 df       	rcall	.-352    	; 0xd02 <dijkstra>
     e62:	60 91 ec 1d 	lds	r22, 0x1DEC	; 0x801dec <destination_node>
     e66:	70 91 ed 1d 	lds	r23, 0x1DED	; 0x801ded <destination_node+0x1>
     e6a:	80 91 d8 1e 	lds	r24, 0x1ED8	; 0x801ed8 <source_node>
     e6e:	90 91 d9 1e 	lds	r25, 0x1ED9	; 0x801ed9 <source_node+0x1>
     e72:	ca ce       	rjmp	.-620    	; 0xc08 <find_path>
     e74:	08 95       	ret

00000e76 <check_path>:
     e76:	af 92       	push	r10
     e78:	bf 92       	push	r11
     e7a:	cf 92       	push	r12
     e7c:	df 92       	push	r13
     e7e:	ef 92       	push	r14
     e80:	ff 92       	push	r15
     e82:	0f 93       	push	r16
     e84:	1f 93       	push	r17
     e86:	cf 93       	push	r28
     e88:	df 93       	push	r29
     e8a:	7c 01       	movw	r14, r24
     e8c:	6b 01       	movw	r12, r22
     e8e:	5a 01       	movw	r10, r20
     e90:	c5 e0       	ldi	r28, 0x05	; 5
     e92:	d0 e0       	ldi	r29, 0x00	; 0
     e94:	00 e0       	ldi	r16, 0x00	; 0
     e96:	10 e0       	ldi	r17, 0x00	; 0
     e98:	8b e0       	ldi	r24, 0x0B	; 11
     e9a:	b8 db       	rcall	.-2192   	; 0x60c <ADC_Conversion>
     e9c:	8f de       	rcall	.-738    	; 0xbbc <Sharp_GP2D12_estimation>
     e9e:	08 0f       	add	r16, r24
     ea0:	19 1f       	adc	r17, r25
     ea2:	2f ef       	ldi	r18, 0xFF	; 255
     ea4:	8f e3       	ldi	r24, 0x3F	; 63
     ea6:	92 e0       	ldi	r25, 0x02	; 2
     ea8:	21 50       	subi	r18, 0x01	; 1
     eaa:	80 40       	sbci	r24, 0x00	; 0
     eac:	90 40       	sbci	r25, 0x00	; 0
     eae:	e1 f7       	brne	.-8      	; 0xea8 <check_path+0x32>
     eb0:	00 c0       	rjmp	.+0      	; 0xeb2 <check_path+0x3c>
     eb2:	00 00       	nop
     eb4:	21 97       	sbiw	r28, 0x01	; 1
     eb6:	81 f7       	brne	.-32     	; 0xe98 <check_path+0x22>
     eb8:	98 01       	movw	r18, r16
     eba:	ad ec       	ldi	r26, 0xCD	; 205
     ebc:	bc ec       	ldi	r27, 0xCC	; 204
     ebe:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__umulhisi3>
     ec2:	96 95       	lsr	r25
     ec4:	87 95       	ror	r24
     ec6:	96 95       	lsr	r25
     ec8:	87 95       	ror	r24
     eca:	25 e2       	ldi	r18, 0x25	; 37
     ecc:	e2 16       	cp	r14, r18
     ece:	f1 04       	cpc	r15, r1
     ed0:	a1 f0       	breq	.+40     	; 0xefa <check_path+0x84>
     ed2:	28 e2       	ldi	r18, 0x28	; 40
     ed4:	e2 16       	cp	r14, r18
     ed6:	f1 04       	cpc	r15, r1
     ed8:	81 f0       	breq	.+32     	; 0xefa <check_path+0x84>
     eda:	29 e1       	ldi	r18, 0x19	; 25
     edc:	e2 16       	cp	r14, r18
     ede:	f1 04       	cpc	r15, r1
     ee0:	61 f0       	breq	.+24     	; 0xefa <check_path+0x84>
     ee2:	2c e1       	ldi	r18, 0x1C	; 28
     ee4:	e2 16       	cp	r14, r18
     ee6:	f1 04       	cpc	r15, r1
     ee8:	41 f0       	breq	.+16     	; 0xefa <check_path+0x84>
     eea:	2f e1       	ldi	r18, 0x1F	; 31
     eec:	e2 16       	cp	r14, r18
     eee:	f1 04       	cpc	r15, r1
     ef0:	21 f0       	breq	.+8      	; 0xefa <check_path+0x84>
     ef2:	22 e2       	ldi	r18, 0x22	; 34
     ef4:	e2 16       	cp	r14, r18
     ef6:	f1 04       	cpc	r15, r1
     ef8:	d9 f4       	brne	.+54     	; 0xf30 <check_path+0xba>
     efa:	25 e2       	ldi	r18, 0x25	; 37
     efc:	c2 16       	cp	r12, r18
     efe:	d1 04       	cpc	r13, r1
     f00:	d1 f0       	breq	.+52     	; 0xf36 <check_path+0xc0>
     f02:	28 e2       	ldi	r18, 0x28	; 40
     f04:	c2 16       	cp	r12, r18
     f06:	d1 04       	cpc	r13, r1
     f08:	c9 f0       	breq	.+50     	; 0xf3c <check_path+0xc6>
     f0a:	29 e1       	ldi	r18, 0x19	; 25
     f0c:	c2 16       	cp	r12, r18
     f0e:	d1 04       	cpc	r13, r1
     f10:	c1 f0       	breq	.+48     	; 0xf42 <check_path+0xcc>
     f12:	2c e1       	ldi	r18, 0x1C	; 28
     f14:	c2 16       	cp	r12, r18
     f16:	d1 04       	cpc	r13, r1
     f18:	b9 f0       	breq	.+46     	; 0xf48 <check_path+0xd2>
     f1a:	2f e1       	ldi	r18, 0x1F	; 31
     f1c:	c2 16       	cp	r12, r18
     f1e:	d1 04       	cpc	r13, r1
     f20:	b1 f0       	breq	.+44     	; 0xf4e <check_path+0xd8>
     f22:	22 e2       	ldi	r18, 0x22	; 34
     f24:	c2 16       	cp	r12, r18
     f26:	d1 04       	cpc	r13, r1
     f28:	a9 f4       	brne	.+42     	; 0xf54 <check_path+0xde>
     f2a:	28 e5       	ldi	r18, 0x58	; 88
     f2c:	32 e0       	ldi	r19, 0x02	; 2
     f2e:	14 c0       	rjmp	.+40     	; 0xf58 <check_path+0xe2>
     f30:	24 e6       	ldi	r18, 0x64	; 100
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	11 c0       	rjmp	.+34     	; 0xf58 <check_path+0xe2>
     f36:	28 e5       	ldi	r18, 0x58	; 88
     f38:	32 e0       	ldi	r19, 0x02	; 2
     f3a:	0e c0       	rjmp	.+28     	; 0xf58 <check_path+0xe2>
     f3c:	28 e5       	ldi	r18, 0x58	; 88
     f3e:	32 e0       	ldi	r19, 0x02	; 2
     f40:	0b c0       	rjmp	.+22     	; 0xf58 <check_path+0xe2>
     f42:	28 e5       	ldi	r18, 0x58	; 88
     f44:	32 e0       	ldi	r19, 0x02	; 2
     f46:	08 c0       	rjmp	.+16     	; 0xf58 <check_path+0xe2>
     f48:	28 e5       	ldi	r18, 0x58	; 88
     f4a:	32 e0       	ldi	r19, 0x02	; 2
     f4c:	05 c0       	rjmp	.+10     	; 0xf58 <check_path+0xe2>
     f4e:	28 e5       	ldi	r18, 0x58	; 88
     f50:	32 e0       	ldi	r19, 0x02	; 2
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <check_path+0xe2>
     f54:	24 e6       	ldi	r18, 0x64	; 100
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	28 17       	cp	r18, r24
     f5a:	39 07       	cpc	r19, r25
     f5c:	90 f1       	brcs	.+100    	; 0xfc2 <check_path+0x14c>
     f5e:	94 e6       	ldi	r25, 0x64	; 100
     f60:	90 93 57 1e 	sts	0x1E57, r25	; 0x801e57 <flag>
     f64:	e6 ec       	ldi	r30, 0xC6	; 198
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	90 83       	st	Z, r25
     f6a:	80 e3       	ldi	r24, 0x30	; 48
     f6c:	8e 9d       	mul	r24, r14
     f6e:	d0 01       	movw	r26, r0
     f70:	8f 9d       	mul	r24, r15
     f72:	b0 0d       	add	r27, r0
     f74:	11 24       	eor	r1, r1
     f76:	ac 0d       	add	r26, r12
     f78:	bd 1d       	adc	r27, r13
     f7a:	ae 5e       	subi	r26, 0xEE	; 238
     f7c:	bb 4e       	sbci	r27, 0xEB	; 235
     f7e:	8c 93       	st	X, r24
     f80:	8c 9d       	mul	r24, r12
     f82:	d0 01       	movw	r26, r0
     f84:	8d 9d       	mul	r24, r13
     f86:	b0 0d       	add	r27, r0
     f88:	11 24       	eor	r1, r1
     f8a:	ae 0d       	add	r26, r14
     f8c:	bf 1d       	adc	r27, r15
     f8e:	ae 5e       	subi	r26, 0xEE	; 238
     f90:	bb 4e       	sbci	r27, 0xEB	; 235
     f92:	8c 93       	st	X, r24
     f94:	90 83       	st	Z, r25
     f96:	e0 82       	st	Z, r14
     f98:	88 ec       	ldi	r24, 0xC8	; 200
     f9a:	80 83       	st	Z, r24
     f9c:	c0 82       	st	Z, r12
     f9e:	f5 01       	movw	r30, r10
     fa0:	ee 0f       	add	r30, r30
     fa2:	ff 1f       	adc	r31, r31
     fa4:	e8 57       	subi	r30, 0x78	; 120
     fa6:	f2 4e       	sbci	r31, 0xE2	; 226
     fa8:	80 81       	ld	r24, Z
     faa:	91 81       	ldd	r25, Z+1	; 0x01
     fac:	90 93 d9 1e 	sts	0x1ED9, r25	; 0x801ed9 <source_node+0x1>
     fb0:	80 93 d8 1e 	sts	0x1ED8, r24	; 0x801ed8 <source_node>
     fb4:	44 df       	rcall	.-376    	; 0xe3e <find_shortest_path>
     fb6:	8e e1       	ldi	r24, 0x1E	; 30
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	cb dd       	rcall	.-1130   	; 0xb52 <back_mm>
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <check_path+0x150>
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	df 91       	pop	r29
     fc8:	cf 91       	pop	r28
     fca:	1f 91       	pop	r17
     fcc:	0f 91       	pop	r16
     fce:	ff 90       	pop	r15
     fd0:	ef 90       	pop	r14
     fd2:	df 90       	pop	r13
     fd4:	cf 90       	pop	r12
     fd6:	bf 90       	pop	r11
     fd8:	af 90       	pop	r10
     fda:	08 95       	ret

00000fdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>:
     fdc:	8f 92       	push	r8
     fde:	9f 92       	push	r9
     fe0:	af 92       	push	r10
     fe2:	bf 92       	push	r11
     fe4:	cf 92       	push	r12
     fe6:	df 92       	push	r13
     fe8:	ef 92       	push	r14
     fea:	ff 92       	push	r15
     fec:	0f 93       	push	r16
     fee:	1f 93       	push	r17
     ff0:	cf 93       	push	r28
     ff2:	df 93       	push	r29
     ff4:	5c 01       	movw	r10, r24
     ff6:	7b 01       	movw	r14, r22
     ff8:	fc 01       	movw	r30, r24
     ffa:	80 81       	ld	r24, Z
     ffc:	91 81       	ldd	r25, Z+1	; 0x01
     ffe:	90 93 ed 1d 	sts	0x1DED, r25	; 0x801ded <destination_node+0x1>
    1002:	80 93 ec 1d 	sts	0x1DEC, r24	; 0x801dec <destination_node>
    1006:	1b df       	rcall	.-458    	; 0xe3e <find_shortest_path>
    1008:	00 91 1a 1d 	lds	r16, 0x1D1A	; 0x801d1a <path_length>
    100c:	10 91 1b 1d 	lds	r17, 0x1D1B	; 0x801d1b <path_length+0x1>
    1010:	f2 e0       	ldi	r31, 0x02	; 2
    1012:	ef 16       	cp	r14, r31
    1014:	f1 04       	cpc	r15, r1
    1016:	f4 f0       	brlt	.+60     	; 0x1054 <find_optimal_path_for_MNP_with_several_neighbor_nodes+0x78>
    1018:	e5 01       	movw	r28, r10
    101a:	22 96       	adiw	r28, 0x02	; 2
    101c:	88 24       	eor	r8, r8
    101e:	83 94       	inc	r8
    1020:	91 2c       	mov	r9, r1
    1022:	c1 2c       	mov	r12, r1
    1024:	d1 2c       	mov	r13, r1
    1026:	89 91       	ld	r24, Y+
    1028:	99 91       	ld	r25, Y+
    102a:	90 93 ed 1d 	sts	0x1DED, r25	; 0x801ded <destination_node+0x1>
    102e:	80 93 ec 1d 	sts	0x1DEC, r24	; 0x801dec <destination_node>
    1032:	05 df       	rcall	.-502    	; 0xe3e <find_shortest_path>
    1034:	80 91 1a 1d 	lds	r24, 0x1D1A	; 0x801d1a <path_length>
    1038:	90 91 1b 1d 	lds	r25, 0x1D1B	; 0x801d1b <path_length+0x1>
    103c:	80 17       	cp	r24, r16
    103e:	91 07       	cpc	r25, r17
    1040:	14 f4       	brge	.+4      	; 0x1046 <find_optimal_path_for_MNP_with_several_neighbor_nodes+0x6a>
    1042:	8c 01       	movw	r16, r24
    1044:	64 01       	movw	r12, r8
    1046:	8f ef       	ldi	r24, 0xFF	; 255
    1048:	88 1a       	sub	r8, r24
    104a:	98 0a       	sbc	r9, r24
    104c:	8e 14       	cp	r8, r14
    104e:	9f 04       	cpc	r9, r15
    1050:	51 f7       	brne	.-44     	; 0x1026 <find_optimal_path_for_MNP_with_several_neighbor_nodes+0x4a>
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <find_optimal_path_for_MNP_with_several_neighbor_nodes+0x7c>
    1054:	c1 2c       	mov	r12, r1
    1056:	d1 2c       	mov	r13, r1
    1058:	cc 0c       	add	r12, r12
    105a:	dd 1c       	adc	r13, r13
    105c:	f5 01       	movw	r30, r10
    105e:	ec 0d       	add	r30, r12
    1060:	fd 1d       	adc	r31, r13
    1062:	80 81       	ld	r24, Z
    1064:	91 81       	ldd	r25, Z+1	; 0x01
    1066:	90 93 ed 1d 	sts	0x1DED, r25	; 0x801ded <destination_node+0x1>
    106a:	80 93 ec 1d 	sts	0x1DEC, r24	; 0x801dec <destination_node>
    106e:	e7 de       	rcall	.-562    	; 0xe3e <find_shortest_path>
    1070:	df 91       	pop	r29
    1072:	cf 91       	pop	r28
    1074:	1f 91       	pop	r17
    1076:	0f 91       	pop	r16
    1078:	ff 90       	pop	r15
    107a:	ef 90       	pop	r14
    107c:	df 90       	pop	r13
    107e:	cf 90       	pop	r12
    1080:	bf 90       	pop	r11
    1082:	af 90       	pop	r10
    1084:	9f 90       	pop	r9
    1086:	8f 90       	pop	r8
    1088:	08 95       	ret

0000108a <identify_neighbors_of_MNP>:
    108a:	cf 93       	push	r28
    108c:	df 93       	push	r29
    108e:	cd b7       	in	r28, 0x3d	; 61
    1090:	de b7       	in	r29, 0x3e	; 62
    1092:	2c 97       	sbiw	r28, 0x0c	; 12
    1094:	0f b6       	in	r0, 0x3f	; 63
    1096:	f8 94       	cli
    1098:	de bf       	out	0x3e, r29	; 62
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	cd bf       	out	0x3d, r28	; 61
    109e:	9c 01       	movw	r18, r24
    10a0:	21 50       	subi	r18, 0x01	; 1
    10a2:	31 09       	sbc	r19, r1
    10a4:	28 31       	cpi	r18, 0x18	; 24
    10a6:	31 05       	cpc	r19, r1
    10a8:	30 f4       	brcc	.+12     	; 0x10b6 <identify_neighbors_of_MNP+0x2c>
    10aa:	30 93 ed 1d 	sts	0x1DED, r19	; 0x801ded <destination_node+0x1>
    10ae:	20 93 ec 1d 	sts	0x1DEC, r18	; 0x801dec <destination_node>
    10b2:	c5 de       	rcall	.-630    	; 0xe3e <find_shortest_path>
    10b4:	e6 c0       	rjmp	.+460    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    10b6:	fc 01       	movw	r30, r24
    10b8:	79 97       	sbiw	r30, 0x19	; 25
    10ba:	e9 30       	cpi	r30, 0x09	; 9
    10bc:	f1 05       	cpc	r31, r1
    10be:	08 f0       	brcs	.+2      	; 0x10c2 <identify_neighbors_of_MNP+0x38>
    10c0:	e0 c0       	rjmp	.+448    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    10c2:	88 27       	eor	r24, r24
    10c4:	ee 58       	subi	r30, 0x8E	; 142
    10c6:	ff 4f       	sbci	r31, 0xFF	; 255
    10c8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ca:	84 c7       	rjmp	.+3848   	; 0x1fd4 <__tablejump2__>
    10cc:	1a 82       	std	Y+2, r1	; 0x02
    10ce:	19 82       	std	Y+1, r1	; 0x01
    10d0:	87 e2       	ldi	r24, 0x27	; 39
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	9c 83       	std	Y+4, r25	; 0x04
    10d6:	8b 83       	std	Y+3, r24	; 0x03
    10d8:	88 e2       	ldi	r24, 0x28	; 40
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	9e 83       	std	Y+6, r25	; 0x06
    10de:	8d 83       	std	Y+5, r24	; 0x05
    10e0:	89 e2       	ldi	r24, 0x29	; 41
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	98 87       	std	Y+8, r25	; 0x08
    10e6:	8f 83       	std	Y+7, r24	; 0x07
    10e8:	64 e0       	ldi	r22, 0x04	; 4
    10ea:	70 e0       	ldi	r23, 0x00	; 0
    10ec:	ce 01       	movw	r24, r28
    10ee:	01 96       	adiw	r24, 0x01	; 1
    10f0:	75 df       	rcall	.-278    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    10f2:	c7 c0       	rjmp	.+398    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    10f4:	88 e1       	ldi	r24, 0x18	; 24
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	9a 83       	std	Y+2, r25	; 0x02
    10fa:	89 83       	std	Y+1, r24	; 0x01
    10fc:	89 e1       	ldi	r24, 0x19	; 25
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	9c 83       	std	Y+4, r25	; 0x04
    1102:	8b 83       	std	Y+3, r24	; 0x03
    1104:	88 e2       	ldi	r24, 0x28	; 40
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	9e 83       	std	Y+6, r25	; 0x06
    110a:	8d 83       	std	Y+5, r24	; 0x05
    110c:	89 e2       	ldi	r24, 0x29	; 41
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	98 87       	std	Y+8, r25	; 0x08
    1112:	8f 83       	std	Y+7, r24	; 0x07
    1114:	8a e2       	ldi	r24, 0x2A	; 42
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	9a 87       	std	Y+10, r25	; 0x0a
    111a:	89 87       	std	Y+9, r24	; 0x09
    111c:	8b e2       	ldi	r24, 0x2B	; 43
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	9c 87       	std	Y+12, r25	; 0x0c
    1122:	8b 87       	std	Y+11, r24	; 0x0b
    1124:	66 e0       	ldi	r22, 0x06	; 6
    1126:	70 e0       	ldi	r23, 0x00	; 0
    1128:	ce 01       	movw	r24, r28
    112a:	01 96       	adiw	r24, 0x01	; 1
    112c:	57 df       	rcall	.-338    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    112e:	a9 c0       	rjmp	.+338    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    1130:	84 e0       	ldi	r24, 0x04	; 4
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	9a 83       	std	Y+2, r25	; 0x02
    1136:	89 83       	std	Y+1, r24	; 0x01
    1138:	88 e1       	ldi	r24, 0x18	; 24
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	9c 83       	std	Y+4, r25	; 0x04
    113e:	8b 83       	std	Y+3, r24	; 0x03
    1140:	89 e1       	ldi	r24, 0x19	; 25
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	9e 83       	std	Y+6, r25	; 0x06
    1146:	8d 83       	std	Y+5, r24	; 0x05
    1148:	8a e1       	ldi	r24, 0x1A	; 26
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	98 87       	std	Y+8, r25	; 0x08
    114e:	8f 83       	std	Y+7, r24	; 0x07
    1150:	64 e0       	ldi	r22, 0x04	; 4
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	ce 01       	movw	r24, r28
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	41 df       	rcall	.-382    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    115a:	93 c0       	rjmp	.+294    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    115c:	88 e0       	ldi	r24, 0x08	; 8
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	9a 83       	std	Y+2, r25	; 0x02
    1162:	89 83       	std	Y+1, r24	; 0x01
    1164:	8b e1       	ldi	r24, 0x1B	; 27
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	9c 83       	std	Y+4, r25	; 0x04
    116a:	8b 83       	std	Y+3, r24	; 0x03
    116c:	8c e1       	ldi	r24, 0x1C	; 28
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	9e 83       	std	Y+6, r25	; 0x06
    1172:	8d 83       	std	Y+5, r24	; 0x05
    1174:	8d e1       	ldi	r24, 0x1D	; 29
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	98 87       	std	Y+8, r25	; 0x08
    117a:	8f 83       	std	Y+7, r24	; 0x07
    117c:	64 e0       	ldi	r22, 0x04	; 4
    117e:	70 e0       	ldi	r23, 0x00	; 0
    1180:	ce 01       	movw	r24, r28
    1182:	01 96       	adiw	r24, 0x01	; 1
    1184:	2b df       	rcall	.-426    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    1186:	7d c0       	rjmp	.+250    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    1188:	8c e1       	ldi	r24, 0x1C	; 28
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	9a 83       	std	Y+2, r25	; 0x02
    118e:	89 83       	std	Y+1, r24	; 0x01
    1190:	8d e1       	ldi	r24, 0x1D	; 29
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	9c 83       	std	Y+4, r25	; 0x04
    1196:	8b 83       	std	Y+3, r24	; 0x03
    1198:	8e e1       	ldi	r24, 0x1E	; 30
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	9e 83       	std	Y+6, r25	; 0x06
    119e:	8d 83       	std	Y+5, r24	; 0x05
    11a0:	8f e1       	ldi	r24, 0x1F	; 31
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	98 87       	std	Y+8, r25	; 0x08
    11a6:	8f 83       	std	Y+7, r24	; 0x07
    11a8:	8c e2       	ldi	r24, 0x2C	; 44
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	9a 87       	std	Y+10, r25	; 0x0a
    11ae:	89 87       	std	Y+9, r24	; 0x09
    11b0:	8d e2       	ldi	r24, 0x2D	; 45
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	9c 87       	std	Y+12, r25	; 0x0c
    11b6:	8b 87       	std	Y+11, r24	; 0x0b
    11b8:	66 e0       	ldi	r22, 0x06	; 6
    11ba:	70 e0       	ldi	r23, 0x00	; 0
    11bc:	ce 01       	movw	r24, r28
    11be:	01 96       	adiw	r24, 0x01	; 1
    11c0:	0d df       	rcall	.-486    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    11c2:	5f c0       	rjmp	.+190    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    11c4:	8c e0       	ldi	r24, 0x0C	; 12
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	9a 83       	std	Y+2, r25	; 0x02
    11ca:	89 83       	std	Y+1, r24	; 0x01
    11cc:	8e e1       	ldi	r24, 0x1E	; 30
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	9c 83       	std	Y+4, r25	; 0x04
    11d2:	8b 83       	std	Y+3, r24	; 0x03
    11d4:	8f e1       	ldi	r24, 0x1F	; 31
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	9e 83       	std	Y+6, r25	; 0x06
    11da:	8d 83       	std	Y+5, r24	; 0x05
    11dc:	80 e2       	ldi	r24, 0x20	; 32
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	98 87       	std	Y+8, r25	; 0x08
    11e2:	8f 83       	std	Y+7, r24	; 0x07
    11e4:	64 e0       	ldi	r22, 0x04	; 4
    11e6:	70 e0       	ldi	r23, 0x00	; 0
    11e8:	ce 01       	movw	r24, r28
    11ea:	01 96       	adiw	r24, 0x01	; 1
    11ec:	f7 de       	rcall	.-530    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    11ee:	49 c0       	rjmp	.+146    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    11f0:	80 e1       	ldi	r24, 0x10	; 16
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	9a 83       	std	Y+2, r25	; 0x02
    11f6:	89 83       	std	Y+1, r24	; 0x01
    11f8:	81 e2       	ldi	r24, 0x21	; 33
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	9c 83       	std	Y+4, r25	; 0x04
    11fe:	8b 83       	std	Y+3, r24	; 0x03
    1200:	82 e2       	ldi	r24, 0x22	; 34
    1202:	90 e0       	ldi	r25, 0x00	; 0
    1204:	9e 83       	std	Y+6, r25	; 0x06
    1206:	8d 83       	std	Y+5, r24	; 0x05
    1208:	83 e2       	ldi	r24, 0x23	; 35
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	98 87       	std	Y+8, r25	; 0x08
    120e:	8f 83       	std	Y+7, r24	; 0x07
    1210:	64 e0       	ldi	r22, 0x04	; 4
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	ce 01       	movw	r24, r28
    1216:	01 96       	adiw	r24, 0x01	; 1
    1218:	e1 de       	rcall	.-574    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    121a:	33 c0       	rjmp	.+102    	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    121c:	82 e2       	ldi	r24, 0x22	; 34
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	9a 83       	std	Y+2, r25	; 0x02
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	83 e2       	ldi	r24, 0x23	; 35
    1226:	90 e0       	ldi	r25, 0x00	; 0
    1228:	9c 83       	std	Y+4, r25	; 0x04
    122a:	8b 83       	std	Y+3, r24	; 0x03
    122c:	84 e2       	ldi	r24, 0x24	; 36
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	9e 83       	std	Y+6, r25	; 0x06
    1232:	8d 83       	std	Y+5, r24	; 0x05
    1234:	85 e2       	ldi	r24, 0x25	; 37
    1236:	90 e0       	ldi	r25, 0x00	; 0
    1238:	98 87       	std	Y+8, r25	; 0x08
    123a:	8f 83       	std	Y+7, r24	; 0x07
    123c:	8e e2       	ldi	r24, 0x2E	; 46
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	9a 87       	std	Y+10, r25	; 0x0a
    1242:	89 87       	std	Y+9, r24	; 0x09
    1244:	8f e2       	ldi	r24, 0x2F	; 47
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	9c 87       	std	Y+12, r25	; 0x0c
    124a:	8b 87       	std	Y+11, r24	; 0x0b
    124c:	66 e0       	ldi	r22, 0x06	; 6
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	ce 01       	movw	r24, r28
    1252:	01 96       	adiw	r24, 0x01	; 1
    1254:	c3 de       	rcall	.-634    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    1256:	15 c0       	rjmp	.+42     	; 0x1282 <identify_neighbors_of_MNP+0x1f8>
    1258:	84 e1       	ldi	r24, 0x14	; 20
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	9a 83       	std	Y+2, r25	; 0x02
    125e:	89 83       	std	Y+1, r24	; 0x01
    1260:	84 e2       	ldi	r24, 0x24	; 36
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	9c 83       	std	Y+4, r25	; 0x04
    1266:	8b 83       	std	Y+3, r24	; 0x03
    1268:	85 e2       	ldi	r24, 0x25	; 37
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	9e 83       	std	Y+6, r25	; 0x06
    126e:	8d 83       	std	Y+5, r24	; 0x05
    1270:	86 e2       	ldi	r24, 0x26	; 38
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	98 87       	std	Y+8, r25	; 0x08
    1276:	8f 83       	std	Y+7, r24	; 0x07
    1278:	64 e0       	ldi	r22, 0x04	; 4
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	ce 01       	movw	r24, r28
    127e:	01 96       	adiw	r24, 0x01	; 1
    1280:	ad de       	rcall	.-678    	; 0xfdc <find_optimal_path_for_MNP_with_several_neighbor_nodes>
    1282:	2c 96       	adiw	r28, 0x0c	; 12
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	f8 94       	cli
    1288:	de bf       	out	0x3e, r29	; 62
    128a:	0f be       	out	0x3f, r0	; 63
    128c:	cd bf       	out	0x3d, r28	; 61
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	08 95       	ret

00001294 <turn_left>:
*				  3) If the center white line is not present on the black line then rotate robot left until center white line
*				     comes on the black line
* Example Call:	  turn_left()
*
*/
void turn_left(unsigned int degrees) {
    1294:	cf 93       	push	r28
    1296:	df 93       	push	r29
    1298:	ec 01       	movw	r28, r24
	forward_mm(35);
    129a:	83 e2       	ldi	r24, 0x23	; 35
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	00 db       	rcall	.-2560   	; 0x8a0 <forward_mm>
    TCCR5B = 0x0B;    //WGM12=1; CS12=0, CS11=1, CS10=1 (Prescaler=64)
}

//Function for velocity control
void velocity(unsigned char left_motor, unsigned char right_motor) {
    OCR5AL = (unsigned char) left_motor;
    12a0:	96 ee       	ldi	r25, 0xE6	; 230
    12a2:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
    OCR5BL = (unsigned char) right_motor;
    12a6:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
	unsigned char center = 0;
	velocity(230, 230);
	left_degrees(degrees); // rotate left by degree specified
    12aa:	ce 01       	movw	r24, r28
    12ac:	3a dc       	rcall	.-1932   	; 0xb22 <left_degrees>
	center = ADC_Conversion(2); // read of white line sensor
    12ae:	82 e0       	ldi	r24, 0x02	; 2
    12b0:	ad d9       	rcall	.-3238   	; 0x60c <ADC_Conversion>
	if (center < 30) //check if center white line sensor is on black line or not
    12b2:	8e 31       	cpi	r24, 0x1E	; 30
    12b4:	48 f4       	brcc	.+18     	; 0x12c8 <turn_left+0x34>
	{
		left(); //if center white line is not on black line then rotate left
    12b6:	00 da       	rcall	.-3072   	; 0x6b8 <left>
		center = ADC_Conversion(2); //read values white line sensor
    12b8:	82 e0       	ldi	r24, 0x02	; 2
    12ba:	a8 d9       	rcall	.-3248   	; 0x60c <ADC_Conversion>
		while (center < 30) // keep turning left while center white line does not come on black line
    12bc:	8e 31       	cpi	r24, 0x1E	; 30
    12be:	20 f4       	brcc	.+8      	; 0x12c8 <turn_left+0x34>
		{
			center = ADC_Conversion(2); // while turning keep checking the white line sensor value
    12c0:	82 e0       	ldi	r24, 0x02	; 2
    12c2:	a4 d9       	rcall	.-3256   	; 0x60c <ADC_Conversion>
	center = ADC_Conversion(2); // read of white line sensor
	if (center < 30) //check if center white line sensor is on black line or not
	{
		left(); //if center white line is not on black line then rotate left
		center = ADC_Conversion(2); //read values white line sensor
		while (center < 30) // keep turning left while center white line does not come on black line
    12c4:	8e 31       	cpi	r24, 0x1E	; 30
    12c6:	e0 f3       	brcs	.-8      	; 0x12c0 <turn_left+0x2c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    12c8:	29 e9       	ldi	r18, 0x99	; 153
    12ca:	89 e9       	ldi	r24, 0x99	; 153
    12cc:	93 e0       	ldi	r25, 0x03	; 3
    12ce:	21 50       	subi	r18, 0x01	; 1
    12d0:	80 40       	sbci	r24, 0x00	; 0
    12d2:	90 40       	sbci	r25, 0x00	; 0
    12d4:	e1 f7       	brne	.-8      	; 0x12ce <turn_left+0x3a>
    12d6:	00 00       	nop
		{
			center = ADC_Conversion(2); // while turning keep checking the white line sensor value
		}
	}
	_delay_ms(80);
	right_degrees(5);
    12d8:	85 e0       	ldi	r24, 0x05	; 5
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	2e dc       	rcall	.-1956   	; 0xb3a <right_degrees>
	stop(); //stop after turning left
    12de:	e6 d9       	rcall	.-3124   	; 0x6ac <stop>
    12e0:	2f ef       	ldi	r18, 0xFF	; 255
    12e2:	8f e7       	ldi	r24, 0x7F	; 127
    12e4:	96 e1       	ldi	r25, 0x16	; 22
    12e6:	21 50       	subi	r18, 0x01	; 1
    12e8:	80 40       	sbci	r24, 0x00	; 0
    12ea:	90 40       	sbci	r25, 0x00	; 0
    12ec:	e1 f7       	brne	.-8      	; 0x12e6 <turn_left+0x52>
    12ee:	00 c0       	rjmp	.+0      	; 0x12f0 <turn_left+0x5c>
    12f0:	00 00       	nop
	_delay_ms(500);
}
    12f2:	df 91       	pop	r29
    12f4:	cf 91       	pop	r28
    12f6:	08 95       	ret

000012f8 <turn_right>:
*				  3) If the center white line is not present on the black line then rotate robot left until center white line
*				     comes on the black line
* Example Call:	  turn_right()
*
*/
void turn_right(unsigned int degrees) {
    12f8:	cf 93       	push	r28
    12fa:	df 93       	push	r29
    12fc:	ec 01       	movw	r28, r24
	forward_mm(35);
    12fe:	83 e2       	ldi	r24, 0x23	; 35
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	ce da       	rcall	.-2660   	; 0x8a0 <forward_mm>
    TCCR5B = 0x0B;    //WGM12=1; CS12=0, CS11=1, CS10=1 (Prescaler=64)
}

//Function for velocity control
void velocity(unsigned char left_motor, unsigned char right_motor) {
    OCR5AL = (unsigned char) left_motor;
    1304:	96 ee       	ldi	r25, 0xE6	; 230
    1306:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
    OCR5BL = (unsigned char) right_motor;
    130a:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
	unsigned char center = 0;
	velocity(230, 230);
	right_degrees(degrees); // rotate right by degree specified
    130e:	ce 01       	movw	r24, r28
    1310:	14 dc       	rcall	.-2008   	; 0xb3a <right_degrees>
	center = ADC_Conversion(2); // read of white line sensor
    1312:	82 e0       	ldi	r24, 0x02	; 2
    1314:	7b d9       	rcall	.-3338   	; 0x60c <ADC_Conversion>
	if (center < 30) //check if center white line sensor is on black line or not
    1316:	8e 31       	cpi	r24, 0x1E	; 30
    1318:	48 f4       	brcc	.+18     	; 0x132c <turn_right+0x34>
	{
		left(); //if center white line is not on black line then rotate right
    131a:	ce d9       	rcall	.-3172   	; 0x6b8 <left>
		center = ADC_Conversion(2); //read values white line sensor
    131c:	82 e0       	ldi	r24, 0x02	; 2
    131e:	76 d9       	rcall	.-3348   	; 0x60c <ADC_Conversion>
		while (center < 30) // keep turning right while center white line does not come on black line
    1320:	8e 31       	cpi	r24, 0x1E	; 30
    1322:	20 f4       	brcc	.+8      	; 0x132c <turn_right+0x34>
		{
			center = ADC_Conversion(2); // while turning keep checking the white line sensor value
    1324:	82 e0       	ldi	r24, 0x02	; 2
    1326:	72 d9       	rcall	.-3356   	; 0x60c <ADC_Conversion>
	center = ADC_Conversion(2); // read of white line sensor
	if (center < 30) //check if center white line sensor is on black line or not
	{
		left(); //if center white line is not on black line then rotate right
		center = ADC_Conversion(2); //read values white line sensor
		while (center < 30) // keep turning right while center white line does not come on black line
    1328:	8e 31       	cpi	r24, 0x1E	; 30
    132a:	e0 f3       	brcs	.-8      	; 0x1324 <turn_right+0x2c>
    132c:	29 e9       	ldi	r18, 0x99	; 153
    132e:	89 e9       	ldi	r24, 0x99	; 153
    1330:	93 e0       	ldi	r25, 0x03	; 3
    1332:	21 50       	subi	r18, 0x01	; 1
    1334:	80 40       	sbci	r24, 0x00	; 0
    1336:	90 40       	sbci	r25, 0x00	; 0
    1338:	e1 f7       	brne	.-8      	; 0x1332 <turn_right+0x3a>
    133a:	00 00       	nop
		{
			center = ADC_Conversion(2); // while turning keep checking the white line sensor value
		}
	}
	_delay_ms(80);
	left_degrees(5);
    133c:	85 e0       	ldi	r24, 0x05	; 5
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	f0 db       	rcall	.-2080   	; 0xb22 <left_degrees>
	stop(); //stop after turning left
    1342:	b4 d9       	rcall	.-3224   	; 0x6ac <stop>
    1344:	2f ef       	ldi	r18, 0xFF	; 255
    1346:	8f e7       	ldi	r24, 0x7F	; 127
    1348:	96 e1       	ldi	r25, 0x16	; 22
    134a:	21 50       	subi	r18, 0x01	; 1
    134c:	80 40       	sbci	r24, 0x00	; 0
    134e:	90 40       	sbci	r25, 0x00	; 0
    1350:	e1 f7       	brne	.-8      	; 0x134a <turn_right+0x52>
    1352:	00 c0       	rjmp	.+0      	; 0x1354 <turn_right+0x5c>
    1354:	00 00       	nop
	_delay_ms(500);
}
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	08 95       	ret

0000135c <bot_traversal>:
*					5) Traverse to the next node
*
* Example Call:	bot_traversal()
*
*/
void bot_traversal() {
    135c:	9f 92       	push	r9
    135e:	af 92       	push	r10
    1360:	bf 92       	push	r11
    1362:	cf 92       	push	r12
    1364:	df 92       	push	r13
    1366:	ef 92       	push	r14
    1368:	ff 92       	push	r15
    136a:	0f 93       	push	r16
    136c:	1f 93       	push	r17
    136e:	cf 93       	push	r28
    1370:	df 93       	push	r29
	HERE:
	for (int k = 0, j = path_length; k < path_length; k++, j--) {
    1372:	a1 2c       	mov	r10, r1
    1374:	91 2c       	mov	r9, r1
		path_angle = rotation_angles[path[j]][path[j - 1]]; // Read the angle of the path from rotation_angles matrix
    1376:	0f 2e       	mov	r0, r31
    1378:	f0 e3       	ldi	r31, 0x30	; 48
    137a:	bf 2e       	mov	r11, r31
    137c:	f0 2d       	mov	r31, r0
* Example Call:	bot_traversal()
*
*/
void bot_traversal() {
	HERE:
	for (int k = 0, j = path_length; k < path_length; k++, j--) {
    137e:	00 91 1a 1d 	lds	r16, 0x1D1A	; 0x801d1a <path_length>
    1382:	10 91 1b 1d 	lds	r17, 0x1D1B	; 0x801d1b <path_length+0x1>
    1386:	10 16       	cp	r1, r16
    1388:	11 06       	cpc	r1, r17
    138a:	0c f0       	brlt	.+2      	; 0x138e <bot_traversal+0x32>
    138c:	61 c0       	rjmp	.+194    	; 0x1450 <bot_traversal+0xf4>
    138e:	78 01       	movw	r14, r16
    1390:	00 0f       	add	r16, r16
    1392:	11 1f       	adc	r17, r17
    1394:	08 57       	subi	r16, 0x78	; 120
    1396:	12 4e       	sbci	r17, 0xE2	; 226
    1398:	ca 2d       	mov	r28, r10
    139a:	d9 2d       	mov	r29, r9
    139c:	a7 01       	movw	r20, r14
    139e:	4c 1b       	sub	r20, r28
    13a0:	5d 0b       	sbc	r21, r29
		path_angle = rotation_angles[path[j]][path[j - 1]]; // Read the angle of the path from rotation_angles matrix
    13a2:	f8 01       	movw	r30, r16
    13a4:	80 81       	ld	r24, Z
    13a6:	91 81       	ldd	r25, Z+1	; 0x01
    13a8:	72 91       	ld	r23, -Z
    13aa:	62 91       	ld	r22, -Z
    13ac:	8f 01       	movw	r16, r30
    13ae:	b8 9e       	mul	r11, r24
    13b0:	f0 01       	movw	r30, r0
    13b2:	b9 9e       	mul	r11, r25
    13b4:	f0 0d       	add	r31, r0
    13b6:	11 24       	eor	r1, r1
    13b8:	e6 0f       	add	r30, r22
    13ba:	f7 1f       	adc	r31, r23
    13bc:	ee 0f       	add	r30, r30
    13be:	ff 1f       	adc	r31, r31
    13c0:	e0 50       	subi	r30, 0x00	; 0
    13c2:	fe 4f       	sbci	r31, 0xFE	; 254
    13c4:	20 81       	ld	r18, Z
    13c6:	31 81       	ldd	r19, Z+1	; 0x01
    13c8:	30 93 15 1d 	sts	0x1D15, r19	; 0x801d15 <__data_end+0x1>
    13cc:	20 93 14 1d 	sts	0x1D14, r18	; 0x801d14 <__data_end>
		int bot_rotate_angle = abs(path_angle - current_bot_angle); // calculate the rotation angle
    13d0:	a0 91 16 1d 	lds	r26, 0x1D16	; 0x801d16 <current_bot_angle>
    13d4:	b0 91 17 1d 	lds	r27, 0x1D17	; 0x801d17 <current_bot_angle+0x1>
    13d8:	69 01       	movw	r12, r18
    13da:	ca 1a       	sub	r12, r26
    13dc:	db 0a       	sbc	r13, r27
    13de:	f6 01       	movw	r30, r12
    13e0:	ff 23       	and	r31, r31
    13e2:	24 f4       	brge	.+8      	; 0x13ec <bot_traversal+0x90>
    13e4:	ee 27       	eor	r30, r30
    13e6:	ff 27       	eor	r31, r31
    13e8:	ec 19       	sub	r30, r12
    13ea:	fd 09       	sbc	r31, r13
    13ec:	6f 01       	movw	r12, r30
		if (bot_rotate_angle > 15) // if angle is not greater than 15 degrees then don't rotate
    13ee:	f0 e1       	ldi	r31, 0x10	; 16
    13f0:	cf 16       	cp	r12, r31
    13f2:	d1 04       	cpc	r13, r1
    13f4:	94 f0       	brlt	.+36     	; 0x141a <bot_traversal+0xbe>
		{
			if (current_bot_angle > path_angle)
    13f6:	2a 17       	cp	r18, r26
    13f8:	3b 07       	cpc	r19, r27
    13fa:	44 f4       	brge	.+16     	; 0x140c <bot_traversal+0xb0>
			{
				// rotate sharp sensor left
				if (check_path(path[j], path[j - 1], j)) // check for obstacle between the current and next nodes
    13fc:	3c dd       	rcall	.-1416   	; 0xe76 <check_path>
    13fe:	89 2b       	or	r24, r25
    1400:	09 f0       	breq	.+2      	; 0x1404 <bot_traversal+0xa8>
    1402:	bd cf       	rjmp	.-134    	; 0x137e <bot_traversal+0x22>
				{
					goto HERE;
				}
				turn_left(bot_rotate_angle - 30);
    1404:	c6 01       	movw	r24, r12
    1406:	4e 97       	sbiw	r24, 0x1e	; 30
    1408:	45 df       	rcall	.-374    	; 0x1294 <turn_left>
    140a:	07 c0       	rjmp	.+14     	; 0x141a <bot_traversal+0xbe>
			}
			else
			{
				// rotate sharp sensor right
				if (check_path(path[j], path[j - 1], j)) // check for obstacle between the current and next nodes
    140c:	34 dd       	rcall	.-1432   	; 0xe76 <check_path>
    140e:	89 2b       	or	r24, r25
    1410:	09 f0       	breq	.+2      	; 0x1414 <bot_traversal+0xb8>
    1412:	b5 cf       	rjmp	.-150    	; 0x137e <bot_traversal+0x22>
				{
					goto HERE;
				}
				turn_right(bot_rotate_angle - 30);
    1414:	c6 01       	movw	r24, r12
    1416:	4e 97       	sbiw	r24, 0x1e	; 30
    1418:	6f df       	rcall	.-290    	; 0x12f8 <turn_right>
			}
		}
		current_bot_angle = path_angle; // set the current angle of robot to the path angle
    141a:	80 91 14 1d 	lds	r24, 0x1D14	; 0x801d14 <__data_end>
    141e:	90 91 15 1d 	lds	r25, 0x1D15	; 0x801d15 <__data_end+0x1>
    1422:	90 93 17 1d 	sts	0x1D17, r25	; 0x801d17 <current_bot_angle+0x1>
    1426:	80 93 16 1d 	sts	0x1D16, r24	; 0x801d16 <current_bot_angle>
		follow(); // traverse to the next node
    142a:	43 da       	rcall	.-2938   	; 0x8b2 <follow>
    142c:	2f ef       	ldi	r18, 0xFF	; 255
    142e:	8f e7       	ldi	r24, 0x7F	; 127
    1430:	96 e1       	ldi	r25, 0x16	; 22
    1432:	21 50       	subi	r18, 0x01	; 1
    1434:	80 40       	sbci	r24, 0x00	; 0
    1436:	90 40       	sbci	r25, 0x00	; 0
    1438:	e1 f7       	brne	.-8      	; 0x1432 <bot_traversal+0xd6>
    143a:	00 c0       	rjmp	.+0      	; 0x143c <bot_traversal+0xe0>
    143c:	00 00       	nop
* Example Call:	bot_traversal()
*
*/
void bot_traversal() {
	HERE:
	for (int k = 0, j = path_length; k < path_length; k++, j--) {
    143e:	21 96       	adiw	r28, 0x01	; 1
    1440:	80 91 1a 1d 	lds	r24, 0x1D1A	; 0x801d1a <path_length>
    1444:	90 91 1b 1d 	lds	r25, 0x1D1B	; 0x801d1b <path_length+0x1>
    1448:	c8 17       	cp	r28, r24
    144a:	d9 07       	cpc	r29, r25
    144c:	0c f4       	brge	.+2      	; 0x1450 <bot_traversal+0xf4>
    144e:	a6 cf       	rjmp	.-180    	; 0x139c <bot_traversal+0x40>
		current_bot_angle = path_angle; // set the current angle of robot to the path angle
		follow(); // traverse to the next node
		_delay_ms(500);
	}

	source_node = path[0];
    1450:	80 91 88 1d 	lds	r24, 0x1D88	; 0x801d88 <path>
    1454:	90 91 89 1d 	lds	r25, 0x1D89	; 0x801d89 <path+0x1>
    1458:	90 93 d9 1e 	sts	0x1ED9, r25	; 0x801ed9 <source_node+0x1>
    145c:	80 93 d8 1e 	sts	0x1ED8, r24	; 0x801ed8 <source_node>

	return;
}
    1460:	df 91       	pop	r29
    1462:	cf 91       	pop	r28
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	ff 90       	pop	r15
    146a:	ef 90       	pop	r14
    146c:	df 90       	pop	r13
    146e:	cf 90       	pop	r12
    1470:	bf 90       	pop	r11
    1472:	af 90       	pop	r10
    1474:	9f 90       	pop	r9
    1476:	08 95       	ret

00001478 <cal_striking_angle>:
}


int cal_striking_angle(int mnp, int node)
{
	switch (mnp)
    1478:	03 97       	sbiw	r24, 0x03	; 3
    147a:	8f 31       	cpi	r24, 0x1F	; 31
    147c:	91 05       	cpc	r25, r1
    147e:	08 f0       	brcs	.+2      	; 0x1482 <cal_striking_angle+0xa>
    1480:	f8 c0       	rjmp	.+496    	; 0x1672 <cal_striking_angle+0x1fa>
    1482:	fc 01       	movw	r30, r24
    1484:	88 27       	eor	r24, r24
    1486:	e5 58       	subi	r30, 0x85	; 133
    1488:	ff 4f       	sbci	r31, 0xFF	; 255
    148a:	8f 4f       	sbci	r24, 0xFF	; 255
    148c:	a3 c5       	rjmp	.+2886   	; 0x1fd4 <__tablejump2__>
		
		case 11:
		return 60;
		
		case 15:
		return 120;
    148e:	88 e7       	ldi	r24, 0x78	; 120
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	08 95       	ret
int cal_striking_angle(int mnp, int node)
{
	switch (mnp)
	{
		case 25:
		switch(node)
    1494:	67 32       	cpi	r22, 0x27	; 39
    1496:	71 05       	cpc	r23, r1
    1498:	69 f0       	breq	.+26     	; 0x14b4 <cal_striking_angle+0x3c>
    149a:	2c f4       	brge	.+10     	; 0x14a6 <cal_striking_angle+0x2e>
    149c:	61 15       	cp	r22, r1
    149e:	71 05       	cpc	r23, r1
    14a0:	09 f4       	brne	.+2      	; 0x14a4 <cal_striking_angle+0x2c>
    14a2:	ed c0       	rjmp	.+474    	; 0x167e <cal_striking_angle+0x206>
    14a4:	10 c0       	rjmp	.+32     	; 0x14c6 <cal_striking_angle+0x4e>
    14a6:	68 32       	cpi	r22, 0x28	; 40
    14a8:	71 05       	cpc	r23, r1
    14aa:	39 f0       	breq	.+14     	; 0x14ba <cal_striking_angle+0x42>
    14ac:	69 32       	cpi	r22, 0x29	; 41
    14ae:	71 05       	cpc	r23, r1
    14b0:	39 f0       	breq	.+14     	; 0x14c0 <cal_striking_angle+0x48>
    14b2:	09 c0       	rjmp	.+18     	; 0x14c6 <cal_striking_angle+0x4e>
		{
			case 0: return 90;
			case 39:return 330;
    14b4:	8a e4       	ldi	r24, 0x4A	; 74
    14b6:	91 e0       	ldi	r25, 0x01	; 1
    14b8:	08 95       	ret
			case 40:return 270;
    14ba:	8e e0       	ldi	r24, 0x0E	; 14
    14bc:	91 e0       	ldi	r25, 0x01	; 1
    14be:	08 95       	ret
			case 41:return 210;
    14c0:	82 ed       	ldi	r24, 0xD2	; 210
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	08 95       	ret
		}
		case 26:
		switch(node)
    14c6:	69 31       	cpi	r22, 0x19	; 25
    14c8:	71 05       	cpc	r23, r1
    14ca:	69 f0       	breq	.+26     	; 0x14e6 <cal_striking_angle+0x6e>
    14cc:	2c f4       	brge	.+10     	; 0x14d8 <cal_striking_angle+0x60>
    14ce:	68 31       	cpi	r22, 0x18	; 24
    14d0:	71 05       	cpc	r23, r1
    14d2:	09 f4       	brne	.+2      	; 0x14d6 <cal_striking_angle+0x5e>
    14d4:	d7 c0       	rjmp	.+430    	; 0x1684 <cal_striking_angle+0x20c>
    14d6:	10 c0       	rjmp	.+32     	; 0x14f8 <cal_striking_angle+0x80>
    14d8:	68 32       	cpi	r22, 0x28	; 40
    14da:	71 05       	cpc	r23, r1
    14dc:	39 f0       	breq	.+14     	; 0x14ec <cal_striking_angle+0x74>
    14de:	69 32       	cpi	r22, 0x29	; 41
    14e0:	71 05       	cpc	r23, r1
    14e2:	39 f0       	breq	.+14     	; 0x14f2 <cal_striking_angle+0x7a>
    14e4:	09 c0       	rjmp	.+18     	; 0x14f8 <cal_striking_angle+0x80>
		{
			case 24:return 150;
			case 25:return 210;
    14e6:	82 ed       	ldi	r24, 0xD2	; 210
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	08 95       	ret
			case 40:return 30;
    14ec:	8e e1       	ldi	r24, 0x1E	; 30
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	08 95       	ret
			case 41:return 90;
    14f2:	8a e5       	ldi	r24, 0x5A	; 90
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	08 95       	ret
		}
		case 27:
		switch(node)
    14f8:	68 31       	cpi	r22, 0x18	; 24
    14fa:	71 05       	cpc	r23, r1
    14fc:	69 f0       	breq	.+26     	; 0x1518 <cal_striking_angle+0xa0>
    14fe:	2c f4       	brge	.+10     	; 0x150a <cal_striking_angle+0x92>
    1500:	64 30       	cpi	r22, 0x04	; 4
    1502:	71 05       	cpc	r23, r1
    1504:	09 f4       	brne	.+2      	; 0x1508 <cal_striking_angle+0x90>
    1506:	c1 c0       	rjmp	.+386    	; 0x168a <cal_striking_angle+0x212>
    1508:	10 c0       	rjmp	.+32     	; 0x152a <cal_striking_angle+0xb2>
    150a:	69 31       	cpi	r22, 0x19	; 25
    150c:	71 05       	cpc	r23, r1
    150e:	39 f0       	breq	.+14     	; 0x151e <cal_striking_angle+0xa6>
    1510:	6a 31       	cpi	r22, 0x1A	; 26
    1512:	71 05       	cpc	r23, r1
    1514:	39 f0       	breq	.+14     	; 0x1524 <cal_striking_angle+0xac>
    1516:	09 c0       	rjmp	.+18     	; 0x152a <cal_striking_angle+0xb2>
		{
			case 4:return 150;
			case 24:return 30;
    1518:	8e e1       	ldi	r24, 0x1E	; 30
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	08 95       	ret
			case 25:return 330;
    151e:	8a e4       	ldi	r24, 0x4A	; 74
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	08 95       	ret
			case 26:return 270;
    1524:	8e e0       	ldi	r24, 0x0E	; 14
    1526:	91 e0       	ldi	r25, 0x01	; 1
    1528:	08 95       	ret
		}
		case 28:
		switch(node)
    152a:	6b 31       	cpi	r22, 0x1B	; 27
    152c:	71 05       	cpc	r23, r1
    152e:	69 f0       	breq	.+26     	; 0x154a <cal_striking_angle+0xd2>
    1530:	2c f4       	brge	.+10     	; 0x153c <cal_striking_angle+0xc4>
    1532:	68 30       	cpi	r22, 0x08	; 8
    1534:	71 05       	cpc	r23, r1
    1536:	09 f4       	brne	.+2      	; 0x153a <cal_striking_angle+0xc2>
    1538:	ab c0       	rjmp	.+342    	; 0x1690 <cal_striking_angle+0x218>
    153a:	10 c0       	rjmp	.+32     	; 0x155c <cal_striking_angle+0xe4>
    153c:	6c 31       	cpi	r22, 0x1C	; 28
    153e:	71 05       	cpc	r23, r1
    1540:	39 f0       	breq	.+14     	; 0x1550 <cal_striking_angle+0xd8>
    1542:	6d 31       	cpi	r22, 0x1D	; 29
    1544:	71 05       	cpc	r23, r1
    1546:	39 f0       	breq	.+14     	; 0x1556 <cal_striking_angle+0xde>
    1548:	09 c0       	rjmp	.+18     	; 0x155c <cal_striking_angle+0xe4>
		{
			case 8:return 210;
			case 27:return 90;
    154a:	8a e5       	ldi	r24, 0x5A	; 90
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	08 95       	ret
			case 28:return 30;
    1550:	8e e1       	ldi	r24, 0x1E	; 30
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	08 95       	ret
			case 29:return 330;
    1556:	8a e4       	ldi	r24, 0x4A	; 74
    1558:	91 e0       	ldi	r25, 0x01	; 1
    155a:	08 95       	ret
		}
		case 29:
		switch(node)
    155c:	6d 31       	cpi	r22, 0x1D	; 29
    155e:	71 05       	cpc	r23, r1
    1560:	69 f0       	breq	.+26     	; 0x157c <cal_striking_angle+0x104>
    1562:	2c f4       	brge	.+10     	; 0x156e <cal_striking_angle+0xf6>
    1564:	6c 31       	cpi	r22, 0x1C	; 28
    1566:	71 05       	cpc	r23, r1
    1568:	09 f4       	brne	.+2      	; 0x156c <cal_striking_angle+0xf4>
    156a:	95 c0       	rjmp	.+298    	; 0x1696 <cal_striking_angle+0x21e>
    156c:	10 c0       	rjmp	.+32     	; 0x158e <cal_striking_angle+0x116>
    156e:	6e 31       	cpi	r22, 0x1E	; 30
    1570:	71 05       	cpc	r23, r1
    1572:	39 f0       	breq	.+14     	; 0x1582 <cal_striking_angle+0x10a>
    1574:	6f 31       	cpi	r22, 0x1F	; 31
    1576:	71 05       	cpc	r23, r1
    1578:	39 f0       	breq	.+14     	; 0x1588 <cal_striking_angle+0x110>
    157a:	09 c0       	rjmp	.+18     	; 0x158e <cal_striking_angle+0x116>
		{
			case 28:return 150;
			case 29:return 210;
    157c:	82 ed       	ldi	r24, 0xD2	; 210
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	08 95       	ret
			case 30:return 270;
    1582:	8e e0       	ldi	r24, 0x0E	; 14
    1584:	91 e0       	ldi	r25, 0x01	; 1
    1586:	08 95       	ret
			case 31:return 330;
    1588:	8a e4       	ldi	r24, 0x4A	; 74
    158a:	91 e0       	ldi	r25, 0x01	; 1
    158c:	08 95       	ret
		}
		
		case 30:
		switch(node)
    158e:	6e 31       	cpi	r22, 0x1E	; 30
    1590:	71 05       	cpc	r23, r1
    1592:	69 f0       	breq	.+26     	; 0x15ae <cal_striking_angle+0x136>
    1594:	2c f4       	brge	.+10     	; 0x15a0 <cal_striking_angle+0x128>
    1596:	6c 30       	cpi	r22, 0x0C	; 12
    1598:	71 05       	cpc	r23, r1
    159a:	09 f4       	brne	.+2      	; 0x159e <cal_striking_angle+0x126>
    159c:	7f c0       	rjmp	.+254    	; 0x169c <cal_striking_angle+0x224>
    159e:	10 c0       	rjmp	.+32     	; 0x15c0 <cal_striking_angle+0x148>
    15a0:	6f 31       	cpi	r22, 0x1F	; 31
    15a2:	71 05       	cpc	r23, r1
    15a4:	39 f0       	breq	.+14     	; 0x15b4 <cal_striking_angle+0x13c>
    15a6:	60 32       	cpi	r22, 0x20	; 32
    15a8:	71 05       	cpc	r23, r1
    15aa:	39 f0       	breq	.+14     	; 0x15ba <cal_striking_angle+0x142>
    15ac:	09 c0       	rjmp	.+18     	; 0x15c0 <cal_striking_angle+0x148>
		{
			case 12:return 270;
			case 30:return 150;
    15ae:	86 e9       	ldi	r24, 0x96	; 150
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	08 95       	ret
			case 31:return 90;
    15b4:	8a e5       	ldi	r24, 0x5A	; 90
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	08 95       	ret
			case 32:return 30;
    15ba:	8e e1       	ldi	r24, 0x1E	; 30
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	08 95       	ret
		}

		case 31:
		switch(node)
    15c0:	61 32       	cpi	r22, 0x21	; 33
    15c2:	71 05       	cpc	r23, r1
    15c4:	69 f0       	breq	.+26     	; 0x15e0 <cal_striking_angle+0x168>
    15c6:	2c f4       	brge	.+10     	; 0x15d2 <cal_striking_angle+0x15a>
    15c8:	60 31       	cpi	r22, 0x10	; 16
    15ca:	71 05       	cpc	r23, r1
    15cc:	09 f4       	brne	.+2      	; 0x15d0 <cal_striking_angle+0x158>
    15ce:	69 c0       	rjmp	.+210    	; 0x16a2 <cal_striking_angle+0x22a>
    15d0:	10 c0       	rjmp	.+32     	; 0x15f2 <cal_striking_angle+0x17a>
    15d2:	62 32       	cpi	r22, 0x22	; 34
    15d4:	71 05       	cpc	r23, r1
    15d6:	39 f0       	breq	.+14     	; 0x15e6 <cal_striking_angle+0x16e>
    15d8:	63 32       	cpi	r22, 0x23	; 35
    15da:	71 05       	cpc	r23, r1
    15dc:	39 f0       	breq	.+14     	; 0x15ec <cal_striking_angle+0x174>
    15de:	09 c0       	rjmp	.+18     	; 0x15f2 <cal_striking_angle+0x17a>
		{
			case 16:return 330;
			case 33:return 210;
    15e0:	82 ed       	ldi	r24, 0xD2	; 210
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	08 95       	ret
			case 34:return 150;
    15e6:	86 e9       	ldi	r24, 0x96	; 150
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	08 95       	ret
			case 35:return 90;
    15ec:	8a e5       	ldi	r24, 0x5A	; 90
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	08 95       	ret
		}
		
		case 32:
		switch(node)
    15f2:	63 32       	cpi	r22, 0x23	; 35
    15f4:	71 05       	cpc	r23, r1
    15f6:	69 f0       	breq	.+26     	; 0x1612 <cal_striking_angle+0x19a>
    15f8:	2c f4       	brge	.+10     	; 0x1604 <cal_striking_angle+0x18c>
    15fa:	62 32       	cpi	r22, 0x22	; 34
    15fc:	71 05       	cpc	r23, r1
    15fe:	09 f4       	brne	.+2      	; 0x1602 <cal_striking_angle+0x18a>
    1600:	53 c0       	rjmp	.+166    	; 0x16a8 <cal_striking_angle+0x230>
    1602:	10 c0       	rjmp	.+32     	; 0x1624 <cal_striking_angle+0x1ac>
    1604:	64 32       	cpi	r22, 0x24	; 36
    1606:	71 05       	cpc	r23, r1
    1608:	39 f0       	breq	.+14     	; 0x1618 <cal_striking_angle+0x1a0>
    160a:	65 32       	cpi	r22, 0x25	; 37
    160c:	71 05       	cpc	r23, r1
    160e:	39 f0       	breq	.+14     	; 0x161e <cal_striking_angle+0x1a6>
    1610:	09 c0       	rjmp	.+18     	; 0x1624 <cal_striking_angle+0x1ac>
		{
			case 34:return 270;
			case 35:return 330;
    1612:	8a e4       	ldi	r24, 0x4A	; 74
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	08 95       	ret
			case 36:return 30;
    1618:	8e e1       	ldi	r24, 0x1E	; 30
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	08 95       	ret
			case 37:return 90;
    161e:	8a e5       	ldi	r24, 0x5A	; 90
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	08 95       	ret
		}
		
		case 33:
		switch(node)
    1624:	64 32       	cpi	r22, 0x24	; 36
    1626:	71 05       	cpc	r23, r1
    1628:	61 f0       	breq	.+24     	; 0x1642 <cal_striking_angle+0x1ca>
    162a:	24 f4       	brge	.+8      	; 0x1634 <cal_striking_angle+0x1bc>
    162c:	64 31       	cpi	r22, 0x14	; 20
    162e:	71 05       	cpc	r23, r1
    1630:	f1 f1       	breq	.+124    	; 0x16ae <cal_striking_angle+0x236>
    1632:	0a c0       	rjmp	.+20     	; 0x1648 <cal_striking_angle+0x1d0>
    1634:	65 32       	cpi	r22, 0x25	; 37
    1636:	71 05       	cpc	r23, r1
    1638:	51 f0       	breq	.+20     	; 0x164e <cal_striking_angle+0x1d6>
    163a:	66 32       	cpi	r22, 0x26	; 38
    163c:	71 05       	cpc	r23, r1
    163e:	51 f0       	breq	.+20     	; 0x1654 <cal_striking_angle+0x1dc>
    1640:	03 c0       	rjmp	.+6      	; 0x1648 <cal_striking_angle+0x1d0>
		{
			case 20:return 30;
			break;
			case 36:return 270;
    1642:	8e e0       	ldi	r24, 0x0E	; 14
    1644:	91 e0       	ldi	r25, 0x01	; 1
    1646:	08 95       	ret
			case 38:return 150;
			break;
		}
		
		case 7:
		return 0;
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	08 95       	ret
		{
			case 20:return 30;
			break;
			case 36:return 270;
			break;
			case 37:return 210;
    164e:	82 ed       	ldi	r24, 0xD2	; 210
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	08 95       	ret
			break;
			case 38:return 150;
    1654:	86 e9       	ldi	r24, 0x96	; 150
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	08 95       	ret
			break;
		}
		
		case 7:
		return 0;
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	08 95       	ret
		
		case 15:
		return 120;

		case 19:
		return 180;
    1660:	84 eb       	ldi	r24, 0xB4	; 180
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	08 95       	ret

		case 23:
		return 240;
    1666:	80 ef       	ldi	r24, 0xF0	; 240
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	08 95       	ret
		
		case 3:
		return 300;
    166c:	8c e2       	ldi	r24, 0x2C	; 44
    166e:	91 e0       	ldi	r25, 0x01	; 1
    1670:	08 95       	ret
		
		default: return 90;  //TO DO
    1672:	8a e5       	ldi	r24, 0x5A	; 90
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	08 95       	ret
		
		case 7:
		return 0;
		
		case 11:
		return 60;
    1678:	8c e3       	ldi	r24, 0x3C	; 60
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	08 95       	ret
	switch (mnp)
	{
		case 25:
		switch(node)
		{
			case 0: return 90;
    167e:	8a e5       	ldi	r24, 0x5A	; 90
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	08 95       	ret
			case 41:return 210;
		}
		case 26:
		switch(node)
		{
			case 24:return 150;
    1684:	86 e9       	ldi	r24, 0x96	; 150
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	08 95       	ret
			case 41:return 90;
		}
		case 27:
		switch(node)
		{
			case 4:return 150;
    168a:	86 e9       	ldi	r24, 0x96	; 150
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	08 95       	ret
			case 26:return 270;
		}
		case 28:
		switch(node)
		{
			case 8:return 210;
    1690:	82 ed       	ldi	r24, 0xD2	; 210
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	08 95       	ret
			case 29:return 330;
		}
		case 29:
		switch(node)
		{
			case 28:return 150;
    1696:	86 e9       	ldi	r24, 0x96	; 150
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	08 95       	ret
		}
		
		case 30:
		switch(node)
		{
			case 12:return 270;
    169c:	8e e0       	ldi	r24, 0x0E	; 14
    169e:	91 e0       	ldi	r25, 0x01	; 1
    16a0:	08 95       	ret
		}

		case 31:
		switch(node)
		{
			case 16:return 330;
    16a2:	8a e4       	ldi	r24, 0x4A	; 74
    16a4:	91 e0       	ldi	r25, 0x01	; 1
    16a6:	08 95       	ret
		}
		
		case 32:
		switch(node)
		{
			case 34:return 270;
    16a8:	8e e0       	ldi	r24, 0x0E	; 14
    16aa:	91 e0       	ldi	r25, 0x01	; 1
    16ac:	08 95       	ret
		}
		
		case 33:
		switch(node)
		{
			case 20:return 30;
    16ae:	8e e1       	ldi	r24, 0x1E	; 30
    16b0:	90 e0       	ldi	r25, 0x00	; 0
		return 300;
		
		default: return 90;  //TO DO
		
	}
}
    16b2:	08 95       	ret

000016b4 <play_note>:

void play_note(int mnp)
{
    16b4:	0f 93       	push	r16
    16b6:	1f 93       	push	r17
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
	int rotation_angle = cal_striking_angle(mnp, source_node);
    16bc:	60 91 d8 1e 	lds	r22, 0x1ED8	; 0x801ed8 <source_node>
    16c0:	70 91 d9 1e 	lds	r23, 0x1ED9	; 0x801ed9 <source_node+0x1>
    16c4:	d9 de       	rcall	.-590    	; 0x1478 <cal_striking_angle>
	int sharp_threshold = 150;
	unsigned char sharp;
	unsigned int distance_mm;
	int servo1_moved = 0, servo2_moved = 0;
	rotation_angle = abs(rotation_angle - current_bot_angle); // calculate the rotation angle
    16c6:	20 91 16 1d 	lds	r18, 0x1D16	; 0x801d16 <current_bot_angle>
    16ca:	30 91 17 1d 	lds	r19, 0x1D17	; 0x801d17 <current_bot_angle+0x1>
    16ce:	82 1b       	sub	r24, r18
    16d0:	93 0b       	sbc	r25, r19
    16d2:	ec 01       	movw	r28, r24
    16d4:	22 f4       	brpl	.+8      	; 0x16de <play_note+0x2a>
    16d6:	cc 27       	eor	r28, r28
    16d8:	dd 27       	eor	r29, r29
    16da:	c8 1b       	sub	r28, r24
    16dc:	d9 0b       	sbc	r29, r25
    16de:	8e 01       	movw	r16, r28
	if (current_bot_angle > rotation_angle)
    16e0:	c2 17       	cp	r28, r18
    16e2:	d3 07       	cpc	r29, r19
    16e4:	64 f4       	brge	.+24     	; 0x16fe <play_note+0x4a>
	{
		// rotate servo motor left by rotation_angle
		left_servo_2(rotation_angle);
    16e6:	8c 2f       	mov	r24, r28
    16e8:	0e 94 1f 01 	call	0x23e	; 0x23e <left_servo_2>
	{
		// rotate servo motor right by rotation_angle
		right_servo_1(rotation_angle);
		servo1_moved = 1;
	}
	sharp = ADC_Conversion(11);
    16ec:	8b e0       	ldi	r24, 0x0B	; 11
    16ee:	0e 94 06 03 	call	0x60c	; 0x60c <ADC_Conversion>
	distance_mm = Sharp_GP2D12_estimation(sharp);
    16f2:	64 da       	rcall	.-2872   	; 0xbbc <Sharp_GP2D12_estimation>
	if(distance_mm <= sharp_threshold)
    16f4:	87 39       	cpi	r24, 0x97	; 151
    16f6:	91 05       	cpc	r25, r1
    16f8:	08 f0       	brcs	.+2      	; 0x16fc <play_note+0x48>
    16fa:	41 c0       	rjmp	.+130    	; 0x177e <play_note+0xca>
    16fc:	0a c0       	rjmp	.+20     	; 0x1712 <play_note+0x5e>
		servo2_moved = 1;
	}
	else
	{
		// rotate servo motor right by rotation_angle
		right_servo_1(rotation_angle);
    16fe:	8c 2f       	mov	r24, r28
    1700:	0e 94 06 01 	call	0x20c	; 0x20c <right_servo_1>
		servo1_moved = 1;
	}
	sharp = ADC_Conversion(11);
    1704:	8b e0       	ldi	r24, 0x0B	; 11
    1706:	0e 94 06 03 	call	0x60c	; 0x60c <ADC_Conversion>
	distance_mm = Sharp_GP2D12_estimation(sharp);
    170a:	58 da       	rcall	.-2896   	; 0xbbc <Sharp_GP2D12_estimation>
	if(distance_mm <= sharp_threshold)
    170c:	87 39       	cpi	r24, 0x97	; 151
    170e:	91 05       	cpc	r25, r1
    1710:	30 f4       	brcc	.+12     	; 0x171e <play_note+0x6a>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1712:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    1716:	88 e2       	ldi	r24, 0x28	; 40
    1718:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    171c:	2a c0       	rjmp	.+84     	; 0x1772 <play_note+0xbe>
	else
	{
		//rotate 10 degree to right
		if(servo1_moved)
		{
			right_servo_1(rotation_angle + 5); //rotate 5 degree to right
    171e:	8c 2f       	mov	r24, r28
    1720:	8b 5f       	subi	r24, 0xFB	; 251
    1722:	0e 94 06 01 	call	0x20c	; 0x20c <right_servo_1>
			sharp = ADC_Conversion(11);
    1726:	8b e0       	ldi	r24, 0x0B	; 11
    1728:	0e 94 06 03 	call	0x60c	; 0x60c <ADC_Conversion>
			distance_mm = Sharp_GP2D12_estimation(sharp);
    172c:	47 da       	rcall	.-2930   	; 0xbbc <Sharp_GP2D12_estimation>

			if(sharp_threshold < distance_mm)
    172e:	87 39       	cpi	r24, 0x97	; 151
    1730:	91 05       	cpc	r25, r1
    1732:	30 f0       	brcs	.+12     	; 0x1740 <play_note+0x8c>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1734:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    1738:	88 e2       	ldi	r24, 0x28	; 40
    173a:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    173e:	19 c0       	rjmp	.+50     	; 0x1772 <play_note+0xbe>
			striking_arm_servo_3(10);// hit
			else
			{
				right_servo_1(rotation_angle - 5);// rotate 10 degree to left
    1740:	8b ef       	ldi	r24, 0xFB	; 251
    1742:	8c 0f       	add	r24, r28
    1744:	0e 94 06 01 	call	0x20c	; 0x20c <right_servo_1>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1748:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    174c:	88 e2       	ldi	r24, 0x28	; 40
    174e:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    1752:	0f c0       	rjmp	.+30     	; 0x1772 <play_note+0xbe>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1754:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    1758:	88 e2       	ldi	r24, 0x28	; 40
    175a:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    175e:	09 c0       	rjmp	.+18     	; 0x1772 <play_note+0xbe>

			if(sharp_threshold < distance_mm)
			striking_arm_servo_3(10);// hit
			else
			{
				left_servo_2(rotation_angle - 5);// rotate 10 degree to left
    1760:	8b ef       	ldi	r24, 0xFB	; 251
    1762:	80 0f       	add	r24, r16
    1764:	0e 94 1f 01 	call	0x23e	; 0x23e <left_servo_2>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1768:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    176c:	88 e2       	ldi	r24, 0x28	; 40
    176e:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    1772:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    1776:	88 e5       	ldi	r24, 0x58	; 88
    1778:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    177c:	0c c0       	rjmp	.+24     	; 0x1796 <play_note+0xe2>
			}
		}
		
		if(servo2_moved)
		{
			left_servo_2(rotation_angle + 5); //rotate 5 degree to right
    177e:	85 e0       	ldi	r24, 0x05	; 5
    1780:	8c 0f       	add	r24, r28
    1782:	0e 94 1f 01 	call	0x23e	; 0x23e <left_servo_2>
			sharp = ADC_Conversion(11);
    1786:	8b e0       	ldi	r24, 0x0B	; 11
    1788:	0e 94 06 03 	call	0x60c	; 0x60c <ADC_Conversion>
			distance_mm = Sharp_GP2D12_estimation(sharp);
    178c:	17 da       	rcall	.-3026   	; 0xbbc <Sharp_GP2D12_estimation>

			if(sharp_threshold < distance_mm)
    178e:	87 39       	cpi	r24, 0x97	; 151
    1790:	91 05       	cpc	r25, r1
    1792:	30 f3       	brcs	.-52     	; 0x1760 <play_note+0xac>
    1794:	df cf       	rjmp	.-66     	; 0x1754 <play_note+0xa0>
			}
		}
		
	}
	striking_arm_servo_3(100); // move servo motor 3 to initial position
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	1f 91       	pop	r17
    179c:	0f 91       	pop	r16
    179e:	08 95       	ret

000017a0 <master_com>:
}
}
}
*/

void master_com() {
    17a0:	9f 92       	push	r9
    17a2:	af 92       	push	r10
    17a4:	bf 92       	push	r11
    17a6:	cf 92       	push	r12
    17a8:	df 92       	push	r13
    17aa:	ef 92       	push	r14
    17ac:	ff 92       	push	r15
    17ae:	0f 93       	push	r16
    17b0:	1f 93       	push	r17
    17b2:	cf 93       	push	r28
    17b4:	df 93       	push	r29
	_delay_ms(100);
	}
	*/
	int i = 0;
	int master_index = 0;
	int track_current_mnp = master_mnp_list[i];
    17b6:	a0 90 de 1e 	lds	r10, 0x1EDE	; 0x801ede <master_mnp_list>
    17ba:	b0 90 df 1e 	lds	r11, 0x1EDF	; 0x801edf <master_mnp_list+0x1>
	// go to master_mnp_list[j]
	//master_mnp_list_length = MNP_list_length; // REMOVE THIS LATER DURING FINAL RUN
	for (master_index = 0; master_index < master_mnp_list_length; master_index++) {
    17be:	80 91 18 1d 	lds	r24, 0x1D18	; 0x801d18 <master_mnp_list_length>
    17c2:	90 91 19 1d 	lds	r25, 0x1D19	; 0x801d19 <master_mnp_list_length+0x1>
    17c6:	18 16       	cp	r1, r24
    17c8:	19 06       	cpc	r1, r25
    17ca:	0c f0       	brlt	.+2      	; 0x17ce <master_com+0x2e>
    17cc:	44 c0       	rjmp	.+136    	; 0x1856 <master_com+0xb6>
    17ce:	0f 2e       	mov	r0, r31
    17d0:	fe ed       	ldi	r31, 0xDE	; 222
    17d2:	ef 2e       	mov	r14, r31
    17d4:	fe e1       	ldi	r31, 0x1E	; 30
    17d6:	ff 2e       	mov	r15, r31
    17d8:	f0 2d       	mov	r31, r0
    17da:	00 e0       	ldi	r16, 0x00	; 0
    17dc:	10 e0       	ldi	r17, 0x00	; 0
    17de:	c0 e0       	ldi	r28, 0x00	; 0
    17e0:	d0 e0       	ldi	r29, 0x00	; 0
		bot_traversal();
		while (1) {
			if (master_mnp_list[master_index] == track_current_mnp) {
				play_note(track_current_mnp);//TO Do		
				track_current_mnp = master_mnp_list[++i]; // now select next mnp from MNP_list
				flag = 'c';
    17e2:	0f 2e       	mov	r0, r31
    17e4:	f3 e6       	ldi	r31, 0x63	; 99
    17e6:	9f 2e       	mov	r9, r31
    17e8:	f0 2d       	mov	r31, r0
				UDR0 = flag;
    17ea:	0f 2e       	mov	r0, r31
    17ec:	f6 ec       	ldi	r31, 0xC6	; 198
    17ee:	cf 2e       	mov	r12, r31
    17f0:	d1 2c       	mov	r13, r1
    17f2:	f0 2d       	mov	r31, r0
	int master_index = 0;
	int track_current_mnp = master_mnp_list[i];
	// go to master_mnp_list[j]
	//master_mnp_list_length = MNP_list_length; // REMOVE THIS LATER DURING FINAL RUN
	for (master_index = 0; master_index < master_mnp_list_length; master_index++) {
		identify_neighbors_of_MNP(master_mnp_list[master_index]);
    17f4:	f7 01       	movw	r30, r14
    17f6:	80 81       	ld	r24, Z
    17f8:	91 81       	ldd	r25, Z+1	; 0x01
    17fa:	47 dc       	rcall	.-1906   	; 0x108a <identify_neighbors_of_MNP>
		bot_traversal();
    17fc:	af dd       	rcall	.-1186   	; 0x135c <bot_traversal>
		while (1) {
			if (master_mnp_list[master_index] == track_current_mnp) {
    17fe:	f7 01       	movw	r30, r14
    1800:	81 91       	ld	r24, Z+
    1802:	91 91       	ld	r25, Z+
    1804:	7f 01       	movw	r14, r30
    1806:	8a 15       	cp	r24, r10
    1808:	9b 05       	cpc	r25, r11
    180a:	c9 f4       	brne	.+50     	; 0x183e <master_com+0x9e>
    180c:	c5 01       	movw	r24, r10
				play_note(track_current_mnp);//TO Do		
    180e:	52 df       	rcall	.-348    	; 0x16b4 <play_note>
				track_current_mnp = master_mnp_list[++i]; // now select next mnp from MNP_list
    1810:	21 96       	adiw	r28, 0x01	; 1
    1812:	fe 01       	movw	r30, r28
    1814:	ee 0f       	add	r30, r30
    1816:	ff 1f       	adc	r31, r31
    1818:	e2 52       	subi	r30, 0x22	; 34
    181a:	f1 4e       	sbci	r31, 0xE1	; 225
    181c:	a0 80       	ld	r10, Z
    181e:	b1 80       	ldd	r11, Z+1	; 0x01
				flag = 'c';
    1820:	90 92 57 1e 	sts	0x1E57, r9	; 0x801e57 <flag>
				UDR0 = flag;
    1824:	f6 01       	movw	r30, r12
    1826:	90 82       	st	Z, r9
				UDR0 = track_current_mnp; // send current mnp to slave robot
    1828:	a0 82       	st	Z, r10
	int i = 0;
	int master_index = 0;
	int track_current_mnp = master_mnp_list[i];
	// go to master_mnp_list[j]
	//master_mnp_list_length = MNP_list_length; // REMOVE THIS LATER DURING FINAL RUN
	for (master_index = 0; master_index < master_mnp_list_length; master_index++) {
    182a:	0f 5f       	subi	r16, 0xFF	; 255
    182c:	1f 4f       	sbci	r17, 0xFF	; 255
    182e:	80 91 18 1d 	lds	r24, 0x1D18	; 0x801d18 <master_mnp_list_length>
    1832:	90 91 19 1d 	lds	r25, 0x1D19	; 0x801d19 <master_mnp_list_length+0x1>
    1836:	08 17       	cp	r16, r24
    1838:	19 07       	cpc	r17, r25
    183a:	e4 f2       	brlt	.-72     	; 0x17f4 <master_com+0x54>
    183c:	0c c0       	rjmp	.+24     	; 0x1856 <master_com+0xb6>
    183e:	fe 01       	movw	r30, r28
    1840:	ee 0f       	add	r30, r30
    1842:	ff 1f       	adc	r31, r31
    1844:	ee 5f       	subi	r30, 0xFE	; 254
    1846:	fb 4e       	sbci	r31, 0xEB	; 235
				flag = 'c';
				UDR0 = flag;
				UDR0 = track_current_mnp; // send current mnp to slave robot
				break;
			} else
			track_current_mnp = MNP_list[++i];
    1848:	21 96       	adiw	r28, 0x01	; 1
    184a:	21 91       	ld	r18, Z+
    184c:	31 91       	ld	r19, Z+
	//master_mnp_list_length = MNP_list_length; // REMOVE THIS LATER DURING FINAL RUN
	for (master_index = 0; master_index < master_mnp_list_length; master_index++) {
		identify_neighbors_of_MNP(master_mnp_list[master_index]);
		bot_traversal();
		while (1) {
			if (master_mnp_list[master_index] == track_current_mnp) {
    184e:	28 17       	cp	r18, r24
    1850:	39 07       	cpc	r19, r25
    1852:	d1 f7       	brne	.-12     	; 0x1848 <master_com+0xa8>
    1854:	dc cf       	rjmp	.-72     	; 0x180e <master_com+0x6e>
			track_current_mnp = MNP_list[++i];
		}
	}


}
    1856:	df 91       	pop	r29
    1858:	cf 91       	pop	r28
    185a:	1f 91       	pop	r17
    185c:	0f 91       	pop	r16
    185e:	ff 90       	pop	r15
    1860:	ef 90       	pop	r14
    1862:	df 90       	pop	r13
    1864:	cf 90       	pop	r12
    1866:	bf 90       	pop	r11
    1868:	af 90       	pop	r10
    186a:	9f 90       	pop	r9
    186c:	08 95       	ret

0000186e <main>:
* Example Call:	automatically called by the micro-controller
*
*/
int main(void)
{
	init_devices();
    186e:	9d d9       	rcall	.-3270   	; 0xbaa <init_devices>
	lcd_set_4bit();
    1870:	0e 94 38 01 	call	0x270	; 0x270 <lcd_set_4bit>
	lcd_init();
    1874:	0e 94 a0 01 	call	0x340	; 0x340 <lcd_init>
	}
	*/
	// start the robot when boot key is pressed by akshdeep
	while (1)
	{
		if((PINE & 0x80) != 0x80) //switch is pressed
    1878:	67 99       	sbic	0x0c, 7	; 12
    187a:	fe cf       	rjmp	.-4      	; 0x1878 <main+0xa>
		{
			buzzer_on();
    187c:	0e 94 22 04 	call	0x844	; 0x844 <buzzer_on>
    1880:	2f ef       	ldi	r18, 0xFF	; 255
    1882:	8f e7       	ldi	r24, 0x7F	; 127
    1884:	96 e1       	ldi	r25, 0x16	; 22
    1886:	21 50       	subi	r18, 0x01	; 1
    1888:	80 40       	sbci	r24, 0x00	; 0
    188a:	90 40       	sbci	r25, 0x00	; 0
    188c:	e1 f7       	brne	.-8      	; 0x1886 <main+0x18>
    188e:	00 c0       	rjmp	.+0      	; 0x1890 <main+0x22>
    1890:	00 00       	nop
			_delay_ms(500);
			buzzer_off();
    1892:	0e 94 26 04 	call	0x84c	; 0x84c <buzzer_off>
    1896:	2f ef       	ldi	r18, 0xFF	; 255
    1898:	8f ef       	ldi	r24, 0xFF	; 255
    189a:	9c e2       	ldi	r25, 0x2C	; 44
    189c:	21 50       	subi	r18, 0x01	; 1
    189e:	80 40       	sbci	r24, 0x00	; 0
    18a0:	90 40       	sbci	r25, 0x00	; 0
    18a2:	e1 f7       	brne	.-8      	; 0x189c <main+0x2e>
    18a4:	00 c0       	rjmp	.+0      	; 0x18a6 <main+0x38>
    18a6:	00 00       	nop
	}

	_delay_ms(1000); // don't start abruptly, you will injure akshdeep

	// initialize servo positions
	right_servo_1(5);
    18a8:	85 e0       	ldi	r24, 0x05	; 5
    18aa:	0e 94 06 01 	call	0x20c	; 0x20c <right_servo_1>
    18ae:	2f ef       	ldi	r18, 0xFF	; 255
    18b0:	8f ef       	ldi	r24, 0xFF	; 255
    18b2:	99 e5       	ldi	r25, 0x59	; 89
    18b4:	21 50       	subi	r18, 0x01	; 1
    18b6:	80 40       	sbci	r24, 0x00	; 0
    18b8:	90 40       	sbci	r25, 0x00	; 0
    18ba:	e1 f7       	brne	.-8      	; 0x18b4 <main+0x46>
    18bc:	00 c0       	rjmp	.+0      	; 0x18be <main+0x50>
    18be:	00 00       	nop
	_delay_ms(2000);
	
	left_servo_2(185);
    18c0:	89 eb       	ldi	r24, 0xB9	; 185
    18c2:	0e 94 1f 01 	call	0x23e	; 0x23e <left_servo_2>
    18c6:	2f ef       	ldi	r18, 0xFF	; 255
    18c8:	8f ef       	ldi	r24, 0xFF	; 255
    18ca:	99 e5       	ldi	r25, 0x59	; 89
    18cc:	21 50       	subi	r18, 0x01	; 1
    18ce:	80 40       	sbci	r24, 0x00	; 0
    18d0:	90 40       	sbci	r25, 0x00	; 0
    18d2:	e1 f7       	brne	.-8      	; 0x18cc <main+0x5e>
    18d4:	00 c0       	rjmp	.+0      	; 0x18d6 <main+0x68>
    18d6:	00 00       	nop
//Function to rotate Servo 3 by a specified angle in the multiples of 1.86 degrees
void striking_arm_servo_3(unsigned char degrees)
{
	float PositionServo = 0;
	PositionServo = ((float)degrees / 1.86) + 35.0;
	OCR1CH = 0x00;
    18d8:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
	OCR1CL = (unsigned char) PositionServo;
    18dc:	88 e5       	ldi	r24, 0x58	; 88
    18de:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
    18e2:	2f ef       	ldi	r18, 0xFF	; 255
    18e4:	8f ef       	ldi	r24, 0xFF	; 255
    18e6:	99 e5       	ldi	r25, 0x59	; 89
    18e8:	21 50       	subi	r18, 0x01	; 1
    18ea:	80 40       	sbci	r24, 0x00	; 0
    18ec:	90 40       	sbci	r25, 0x00	; 0
    18ee:	e1 f7       	brne	.-8      	; 0x18e8 <main+0x7a>
    18f0:	00 c0       	rjmp	.+0      	; 0x18f2 <main+0x84>
    18f2:	00 00       	nop

	striking_arm_servo_3(100);
	_delay_ms(2000);


	source_node = 0; // The bot initially starts from Start 1(i.e. node 0)
    18f4:	10 92 d9 1e 	sts	0x1ED9, r1	; 0x801ed9 <source_node+0x1>
    18f8:	10 92 d8 1e 	sts	0x1ED8, r1	; 0x801ed8 <source_node>
	master_com();
    18fc:	51 df       	rcall	.-350    	; 0x17a0 <master_com>
	return 0;

}
    18fe:	80 e0       	ldi	r24, 0x00	; 0
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	08 95       	ret

00001904 <__subsf3>:
    1904:	50 58       	subi	r21, 0x80	; 128

00001906 <__addsf3>:
    1906:	bb 27       	eor	r27, r27
    1908:	aa 27       	eor	r26, r26
    190a:	0e d0       	rcall	.+28     	; 0x1928 <__addsf3x>
    190c:	4d c1       	rjmp	.+666    	; 0x1ba8 <__fp_round>
    190e:	3e d1       	rcall	.+636    	; 0x1b8c <__fp_pscA>
    1910:	30 f0       	brcs	.+12     	; 0x191e <__addsf3+0x18>
    1912:	43 d1       	rcall	.+646    	; 0x1b9a <__fp_pscB>
    1914:	20 f0       	brcs	.+8      	; 0x191e <__addsf3+0x18>
    1916:	31 f4       	brne	.+12     	; 0x1924 <__addsf3+0x1e>
    1918:	9f 3f       	cpi	r25, 0xFF	; 255
    191a:	11 f4       	brne	.+4      	; 0x1920 <__addsf3+0x1a>
    191c:	1e f4       	brtc	.+6      	; 0x1924 <__addsf3+0x1e>
    191e:	33 c1       	rjmp	.+614    	; 0x1b86 <__fp_nan>
    1920:	0e f4       	brtc	.+2      	; 0x1924 <__addsf3+0x1e>
    1922:	e0 95       	com	r30
    1924:	e7 fb       	bst	r30, 7
    1926:	29 c1       	rjmp	.+594    	; 0x1b7a <__fp_inf>

00001928 <__addsf3x>:
    1928:	e9 2f       	mov	r30, r25
    192a:	4f d1       	rcall	.+670    	; 0x1bca <__fp_split3>
    192c:	80 f3       	brcs	.-32     	; 0x190e <__addsf3+0x8>
    192e:	ba 17       	cp	r27, r26
    1930:	62 07       	cpc	r22, r18
    1932:	73 07       	cpc	r23, r19
    1934:	84 07       	cpc	r24, r20
    1936:	95 07       	cpc	r25, r21
    1938:	18 f0       	brcs	.+6      	; 0x1940 <__addsf3x+0x18>
    193a:	71 f4       	brne	.+28     	; 0x1958 <__addsf3x+0x30>
    193c:	9e f5       	brtc	.+102    	; 0x19a4 <__addsf3x+0x7c>
    193e:	67 c1       	rjmp	.+718    	; 0x1c0e <__fp_zero>
    1940:	0e f4       	brtc	.+2      	; 0x1944 <__addsf3x+0x1c>
    1942:	e0 95       	com	r30
    1944:	0b 2e       	mov	r0, r27
    1946:	ba 2f       	mov	r27, r26
    1948:	a0 2d       	mov	r26, r0
    194a:	0b 01       	movw	r0, r22
    194c:	b9 01       	movw	r22, r18
    194e:	90 01       	movw	r18, r0
    1950:	0c 01       	movw	r0, r24
    1952:	ca 01       	movw	r24, r20
    1954:	a0 01       	movw	r20, r0
    1956:	11 24       	eor	r1, r1
    1958:	ff 27       	eor	r31, r31
    195a:	59 1b       	sub	r21, r25
    195c:	99 f0       	breq	.+38     	; 0x1984 <__addsf3x+0x5c>
    195e:	59 3f       	cpi	r21, 0xF9	; 249
    1960:	50 f4       	brcc	.+20     	; 0x1976 <__addsf3x+0x4e>
    1962:	50 3e       	cpi	r21, 0xE0	; 224
    1964:	68 f1       	brcs	.+90     	; 0x19c0 <__addsf3x+0x98>
    1966:	1a 16       	cp	r1, r26
    1968:	f0 40       	sbci	r31, 0x00	; 0
    196a:	a2 2f       	mov	r26, r18
    196c:	23 2f       	mov	r18, r19
    196e:	34 2f       	mov	r19, r20
    1970:	44 27       	eor	r20, r20
    1972:	58 5f       	subi	r21, 0xF8	; 248
    1974:	f3 cf       	rjmp	.-26     	; 0x195c <__addsf3x+0x34>
    1976:	46 95       	lsr	r20
    1978:	37 95       	ror	r19
    197a:	27 95       	ror	r18
    197c:	a7 95       	ror	r26
    197e:	f0 40       	sbci	r31, 0x00	; 0
    1980:	53 95       	inc	r21
    1982:	c9 f7       	brne	.-14     	; 0x1976 <__addsf3x+0x4e>
    1984:	7e f4       	brtc	.+30     	; 0x19a4 <__addsf3x+0x7c>
    1986:	1f 16       	cp	r1, r31
    1988:	ba 0b       	sbc	r27, r26
    198a:	62 0b       	sbc	r22, r18
    198c:	73 0b       	sbc	r23, r19
    198e:	84 0b       	sbc	r24, r20
    1990:	ba f0       	brmi	.+46     	; 0x19c0 <__addsf3x+0x98>
    1992:	91 50       	subi	r25, 0x01	; 1
    1994:	a1 f0       	breq	.+40     	; 0x19be <__addsf3x+0x96>
    1996:	ff 0f       	add	r31, r31
    1998:	bb 1f       	adc	r27, r27
    199a:	66 1f       	adc	r22, r22
    199c:	77 1f       	adc	r23, r23
    199e:	88 1f       	adc	r24, r24
    19a0:	c2 f7       	brpl	.-16     	; 0x1992 <__addsf3x+0x6a>
    19a2:	0e c0       	rjmp	.+28     	; 0x19c0 <__addsf3x+0x98>
    19a4:	ba 0f       	add	r27, r26
    19a6:	62 1f       	adc	r22, r18
    19a8:	73 1f       	adc	r23, r19
    19aa:	84 1f       	adc	r24, r20
    19ac:	48 f4       	brcc	.+18     	; 0x19c0 <__addsf3x+0x98>
    19ae:	87 95       	ror	r24
    19b0:	77 95       	ror	r23
    19b2:	67 95       	ror	r22
    19b4:	b7 95       	ror	r27
    19b6:	f7 95       	ror	r31
    19b8:	9e 3f       	cpi	r25, 0xFE	; 254
    19ba:	08 f0       	brcs	.+2      	; 0x19be <__addsf3x+0x96>
    19bc:	b3 cf       	rjmp	.-154    	; 0x1924 <__addsf3+0x1e>
    19be:	93 95       	inc	r25
    19c0:	88 0f       	add	r24, r24
    19c2:	08 f0       	brcs	.+2      	; 0x19c6 <__addsf3x+0x9e>
    19c4:	99 27       	eor	r25, r25
    19c6:	ee 0f       	add	r30, r30
    19c8:	97 95       	ror	r25
    19ca:	87 95       	ror	r24
    19cc:	08 95       	ret

000019ce <__divsf3>:
    19ce:	0c d0       	rcall	.+24     	; 0x19e8 <__divsf3x>
    19d0:	eb c0       	rjmp	.+470    	; 0x1ba8 <__fp_round>
    19d2:	e3 d0       	rcall	.+454    	; 0x1b9a <__fp_pscB>
    19d4:	40 f0       	brcs	.+16     	; 0x19e6 <__divsf3+0x18>
    19d6:	da d0       	rcall	.+436    	; 0x1b8c <__fp_pscA>
    19d8:	30 f0       	brcs	.+12     	; 0x19e6 <__divsf3+0x18>
    19da:	21 f4       	brne	.+8      	; 0x19e4 <__divsf3+0x16>
    19dc:	5f 3f       	cpi	r21, 0xFF	; 255
    19de:	19 f0       	breq	.+6      	; 0x19e6 <__divsf3+0x18>
    19e0:	cc c0       	rjmp	.+408    	; 0x1b7a <__fp_inf>
    19e2:	51 11       	cpse	r21, r1
    19e4:	15 c1       	rjmp	.+554    	; 0x1c10 <__fp_szero>
    19e6:	cf c0       	rjmp	.+414    	; 0x1b86 <__fp_nan>

000019e8 <__divsf3x>:
    19e8:	f0 d0       	rcall	.+480    	; 0x1bca <__fp_split3>
    19ea:	98 f3       	brcs	.-26     	; 0x19d2 <__divsf3+0x4>

000019ec <__divsf3_pse>:
    19ec:	99 23       	and	r25, r25
    19ee:	c9 f3       	breq	.-14     	; 0x19e2 <__divsf3+0x14>
    19f0:	55 23       	and	r21, r21
    19f2:	b1 f3       	breq	.-20     	; 0x19e0 <__divsf3+0x12>
    19f4:	95 1b       	sub	r25, r21
    19f6:	55 0b       	sbc	r21, r21
    19f8:	bb 27       	eor	r27, r27
    19fa:	aa 27       	eor	r26, r26
    19fc:	62 17       	cp	r22, r18
    19fe:	73 07       	cpc	r23, r19
    1a00:	84 07       	cpc	r24, r20
    1a02:	38 f0       	brcs	.+14     	; 0x1a12 <__divsf3_pse+0x26>
    1a04:	9f 5f       	subi	r25, 0xFF	; 255
    1a06:	5f 4f       	sbci	r21, 0xFF	; 255
    1a08:	22 0f       	add	r18, r18
    1a0a:	33 1f       	adc	r19, r19
    1a0c:	44 1f       	adc	r20, r20
    1a0e:	aa 1f       	adc	r26, r26
    1a10:	a9 f3       	breq	.-22     	; 0x19fc <__divsf3_pse+0x10>
    1a12:	33 d0       	rcall	.+102    	; 0x1a7a <__divsf3_pse+0x8e>
    1a14:	0e 2e       	mov	r0, r30
    1a16:	3a f0       	brmi	.+14     	; 0x1a26 <__divsf3_pse+0x3a>
    1a18:	e0 e8       	ldi	r30, 0x80	; 128
    1a1a:	30 d0       	rcall	.+96     	; 0x1a7c <__divsf3_pse+0x90>
    1a1c:	91 50       	subi	r25, 0x01	; 1
    1a1e:	50 40       	sbci	r21, 0x00	; 0
    1a20:	e6 95       	lsr	r30
    1a22:	00 1c       	adc	r0, r0
    1a24:	ca f7       	brpl	.-14     	; 0x1a18 <__divsf3_pse+0x2c>
    1a26:	29 d0       	rcall	.+82     	; 0x1a7a <__divsf3_pse+0x8e>
    1a28:	fe 2f       	mov	r31, r30
    1a2a:	27 d0       	rcall	.+78     	; 0x1a7a <__divsf3_pse+0x8e>
    1a2c:	66 0f       	add	r22, r22
    1a2e:	77 1f       	adc	r23, r23
    1a30:	88 1f       	adc	r24, r24
    1a32:	bb 1f       	adc	r27, r27
    1a34:	26 17       	cp	r18, r22
    1a36:	37 07       	cpc	r19, r23
    1a38:	48 07       	cpc	r20, r24
    1a3a:	ab 07       	cpc	r26, r27
    1a3c:	b0 e8       	ldi	r27, 0x80	; 128
    1a3e:	09 f0       	breq	.+2      	; 0x1a42 <__divsf3_pse+0x56>
    1a40:	bb 0b       	sbc	r27, r27
    1a42:	80 2d       	mov	r24, r0
    1a44:	bf 01       	movw	r22, r30
    1a46:	ff 27       	eor	r31, r31
    1a48:	93 58       	subi	r25, 0x83	; 131
    1a4a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a4c:	2a f0       	brmi	.+10     	; 0x1a58 <__divsf3_pse+0x6c>
    1a4e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a50:	51 05       	cpc	r21, r1
    1a52:	68 f0       	brcs	.+26     	; 0x1a6e <__divsf3_pse+0x82>
    1a54:	92 c0       	rjmp	.+292    	; 0x1b7a <__fp_inf>
    1a56:	dc c0       	rjmp	.+440    	; 0x1c10 <__fp_szero>
    1a58:	5f 3f       	cpi	r21, 0xFF	; 255
    1a5a:	ec f3       	brlt	.-6      	; 0x1a56 <__divsf3_pse+0x6a>
    1a5c:	98 3e       	cpi	r25, 0xE8	; 232
    1a5e:	dc f3       	brlt	.-10     	; 0x1a56 <__divsf3_pse+0x6a>
    1a60:	86 95       	lsr	r24
    1a62:	77 95       	ror	r23
    1a64:	67 95       	ror	r22
    1a66:	b7 95       	ror	r27
    1a68:	f7 95       	ror	r31
    1a6a:	9f 5f       	subi	r25, 0xFF	; 255
    1a6c:	c9 f7       	brne	.-14     	; 0x1a60 <__divsf3_pse+0x74>
    1a6e:	88 0f       	add	r24, r24
    1a70:	91 1d       	adc	r25, r1
    1a72:	96 95       	lsr	r25
    1a74:	87 95       	ror	r24
    1a76:	97 f9       	bld	r25, 7
    1a78:	08 95       	ret
    1a7a:	e1 e0       	ldi	r30, 0x01	; 1
    1a7c:	66 0f       	add	r22, r22
    1a7e:	77 1f       	adc	r23, r23
    1a80:	88 1f       	adc	r24, r24
    1a82:	bb 1f       	adc	r27, r27
    1a84:	62 17       	cp	r22, r18
    1a86:	73 07       	cpc	r23, r19
    1a88:	84 07       	cpc	r24, r20
    1a8a:	ba 07       	cpc	r27, r26
    1a8c:	20 f0       	brcs	.+8      	; 0x1a96 <__divsf3_pse+0xaa>
    1a8e:	62 1b       	sub	r22, r18
    1a90:	73 0b       	sbc	r23, r19
    1a92:	84 0b       	sbc	r24, r20
    1a94:	ba 0b       	sbc	r27, r26
    1a96:	ee 1f       	adc	r30, r30
    1a98:	88 f7       	brcc	.-30     	; 0x1a7c <__divsf3_pse+0x90>
    1a9a:	e0 95       	com	r30
    1a9c:	08 95       	ret

00001a9e <__fixsfsi>:
    1a9e:	04 d0       	rcall	.+8      	; 0x1aa8 <__fixunssfsi>
    1aa0:	68 94       	set
    1aa2:	b1 11       	cpse	r27, r1
    1aa4:	b5 c0       	rjmp	.+362    	; 0x1c10 <__fp_szero>
    1aa6:	08 95       	ret

00001aa8 <__fixunssfsi>:
    1aa8:	98 d0       	rcall	.+304    	; 0x1bda <__fp_splitA>
    1aaa:	88 f0       	brcs	.+34     	; 0x1ace <__fixunssfsi+0x26>
    1aac:	9f 57       	subi	r25, 0x7F	; 127
    1aae:	90 f0       	brcs	.+36     	; 0x1ad4 <__fixunssfsi+0x2c>
    1ab0:	b9 2f       	mov	r27, r25
    1ab2:	99 27       	eor	r25, r25
    1ab4:	b7 51       	subi	r27, 0x17	; 23
    1ab6:	a0 f0       	brcs	.+40     	; 0x1ae0 <__fixunssfsi+0x38>
    1ab8:	d1 f0       	breq	.+52     	; 0x1aee <__fixunssfsi+0x46>
    1aba:	66 0f       	add	r22, r22
    1abc:	77 1f       	adc	r23, r23
    1abe:	88 1f       	adc	r24, r24
    1ac0:	99 1f       	adc	r25, r25
    1ac2:	1a f0       	brmi	.+6      	; 0x1aca <__fixunssfsi+0x22>
    1ac4:	ba 95       	dec	r27
    1ac6:	c9 f7       	brne	.-14     	; 0x1aba <__fixunssfsi+0x12>
    1ac8:	12 c0       	rjmp	.+36     	; 0x1aee <__fixunssfsi+0x46>
    1aca:	b1 30       	cpi	r27, 0x01	; 1
    1acc:	81 f0       	breq	.+32     	; 0x1aee <__fixunssfsi+0x46>
    1ace:	9f d0       	rcall	.+318    	; 0x1c0e <__fp_zero>
    1ad0:	b1 e0       	ldi	r27, 0x01	; 1
    1ad2:	08 95       	ret
    1ad4:	9c c0       	rjmp	.+312    	; 0x1c0e <__fp_zero>
    1ad6:	67 2f       	mov	r22, r23
    1ad8:	78 2f       	mov	r23, r24
    1ada:	88 27       	eor	r24, r24
    1adc:	b8 5f       	subi	r27, 0xF8	; 248
    1ade:	39 f0       	breq	.+14     	; 0x1aee <__fixunssfsi+0x46>
    1ae0:	b9 3f       	cpi	r27, 0xF9	; 249
    1ae2:	cc f3       	brlt	.-14     	; 0x1ad6 <__fixunssfsi+0x2e>
    1ae4:	86 95       	lsr	r24
    1ae6:	77 95       	ror	r23
    1ae8:	67 95       	ror	r22
    1aea:	b3 95       	inc	r27
    1aec:	d9 f7       	brne	.-10     	; 0x1ae4 <__fixunssfsi+0x3c>
    1aee:	3e f4       	brtc	.+14     	; 0x1afe <__fixunssfsi+0x56>
    1af0:	90 95       	com	r25
    1af2:	80 95       	com	r24
    1af4:	70 95       	com	r23
    1af6:	61 95       	neg	r22
    1af8:	7f 4f       	sbci	r23, 0xFF	; 255
    1afa:	8f 4f       	sbci	r24, 0xFF	; 255
    1afc:	9f 4f       	sbci	r25, 0xFF	; 255
    1afe:	08 95       	ret

00001b00 <__floatunsisf>:
    1b00:	e8 94       	clt
    1b02:	09 c0       	rjmp	.+18     	; 0x1b16 <__floatsisf+0x12>

00001b04 <__floatsisf>:
    1b04:	97 fb       	bst	r25, 7
    1b06:	3e f4       	brtc	.+14     	; 0x1b16 <__floatsisf+0x12>
    1b08:	90 95       	com	r25
    1b0a:	80 95       	com	r24
    1b0c:	70 95       	com	r23
    1b0e:	61 95       	neg	r22
    1b10:	7f 4f       	sbci	r23, 0xFF	; 255
    1b12:	8f 4f       	sbci	r24, 0xFF	; 255
    1b14:	9f 4f       	sbci	r25, 0xFF	; 255
    1b16:	99 23       	and	r25, r25
    1b18:	a9 f0       	breq	.+42     	; 0x1b44 <__floatsisf+0x40>
    1b1a:	f9 2f       	mov	r31, r25
    1b1c:	96 e9       	ldi	r25, 0x96	; 150
    1b1e:	bb 27       	eor	r27, r27
    1b20:	93 95       	inc	r25
    1b22:	f6 95       	lsr	r31
    1b24:	87 95       	ror	r24
    1b26:	77 95       	ror	r23
    1b28:	67 95       	ror	r22
    1b2a:	b7 95       	ror	r27
    1b2c:	f1 11       	cpse	r31, r1
    1b2e:	f8 cf       	rjmp	.-16     	; 0x1b20 <__floatsisf+0x1c>
    1b30:	fa f4       	brpl	.+62     	; 0x1b70 <__floatsisf+0x6c>
    1b32:	bb 0f       	add	r27, r27
    1b34:	11 f4       	brne	.+4      	; 0x1b3a <__floatsisf+0x36>
    1b36:	60 ff       	sbrs	r22, 0
    1b38:	1b c0       	rjmp	.+54     	; 0x1b70 <__floatsisf+0x6c>
    1b3a:	6f 5f       	subi	r22, 0xFF	; 255
    1b3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b40:	9f 4f       	sbci	r25, 0xFF	; 255
    1b42:	16 c0       	rjmp	.+44     	; 0x1b70 <__floatsisf+0x6c>
    1b44:	88 23       	and	r24, r24
    1b46:	11 f0       	breq	.+4      	; 0x1b4c <__floatsisf+0x48>
    1b48:	96 e9       	ldi	r25, 0x96	; 150
    1b4a:	11 c0       	rjmp	.+34     	; 0x1b6e <__floatsisf+0x6a>
    1b4c:	77 23       	and	r23, r23
    1b4e:	21 f0       	breq	.+8      	; 0x1b58 <__floatsisf+0x54>
    1b50:	9e e8       	ldi	r25, 0x8E	; 142
    1b52:	87 2f       	mov	r24, r23
    1b54:	76 2f       	mov	r23, r22
    1b56:	05 c0       	rjmp	.+10     	; 0x1b62 <__floatsisf+0x5e>
    1b58:	66 23       	and	r22, r22
    1b5a:	71 f0       	breq	.+28     	; 0x1b78 <__floatsisf+0x74>
    1b5c:	96 e8       	ldi	r25, 0x86	; 134
    1b5e:	86 2f       	mov	r24, r22
    1b60:	70 e0       	ldi	r23, 0x00	; 0
    1b62:	60 e0       	ldi	r22, 0x00	; 0
    1b64:	2a f0       	brmi	.+10     	; 0x1b70 <__floatsisf+0x6c>
    1b66:	9a 95       	dec	r25
    1b68:	66 0f       	add	r22, r22
    1b6a:	77 1f       	adc	r23, r23
    1b6c:	88 1f       	adc	r24, r24
    1b6e:	da f7       	brpl	.-10     	; 0x1b66 <__floatsisf+0x62>
    1b70:	88 0f       	add	r24, r24
    1b72:	96 95       	lsr	r25
    1b74:	87 95       	ror	r24
    1b76:	97 f9       	bld	r25, 7
    1b78:	08 95       	ret

00001b7a <__fp_inf>:
    1b7a:	97 f9       	bld	r25, 7
    1b7c:	9f 67       	ori	r25, 0x7F	; 127
    1b7e:	80 e8       	ldi	r24, 0x80	; 128
    1b80:	70 e0       	ldi	r23, 0x00	; 0
    1b82:	60 e0       	ldi	r22, 0x00	; 0
    1b84:	08 95       	ret

00001b86 <__fp_nan>:
    1b86:	9f ef       	ldi	r25, 0xFF	; 255
    1b88:	80 ec       	ldi	r24, 0xC0	; 192
    1b8a:	08 95       	ret

00001b8c <__fp_pscA>:
    1b8c:	00 24       	eor	r0, r0
    1b8e:	0a 94       	dec	r0
    1b90:	16 16       	cp	r1, r22
    1b92:	17 06       	cpc	r1, r23
    1b94:	18 06       	cpc	r1, r24
    1b96:	09 06       	cpc	r0, r25
    1b98:	08 95       	ret

00001b9a <__fp_pscB>:
    1b9a:	00 24       	eor	r0, r0
    1b9c:	0a 94       	dec	r0
    1b9e:	12 16       	cp	r1, r18
    1ba0:	13 06       	cpc	r1, r19
    1ba2:	14 06       	cpc	r1, r20
    1ba4:	05 06       	cpc	r0, r21
    1ba6:	08 95       	ret

00001ba8 <__fp_round>:
    1ba8:	09 2e       	mov	r0, r25
    1baa:	03 94       	inc	r0
    1bac:	00 0c       	add	r0, r0
    1bae:	11 f4       	brne	.+4      	; 0x1bb4 <__fp_round+0xc>
    1bb0:	88 23       	and	r24, r24
    1bb2:	52 f0       	brmi	.+20     	; 0x1bc8 <__fp_round+0x20>
    1bb4:	bb 0f       	add	r27, r27
    1bb6:	40 f4       	brcc	.+16     	; 0x1bc8 <__fp_round+0x20>
    1bb8:	bf 2b       	or	r27, r31
    1bba:	11 f4       	brne	.+4      	; 0x1bc0 <__fp_round+0x18>
    1bbc:	60 ff       	sbrs	r22, 0
    1bbe:	04 c0       	rjmp	.+8      	; 0x1bc8 <__fp_round+0x20>
    1bc0:	6f 5f       	subi	r22, 0xFF	; 255
    1bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc4:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc8:	08 95       	ret

00001bca <__fp_split3>:
    1bca:	57 fd       	sbrc	r21, 7
    1bcc:	90 58       	subi	r25, 0x80	; 128
    1bce:	44 0f       	add	r20, r20
    1bd0:	55 1f       	adc	r21, r21
    1bd2:	59 f0       	breq	.+22     	; 0x1bea <__fp_splitA+0x10>
    1bd4:	5f 3f       	cpi	r21, 0xFF	; 255
    1bd6:	71 f0       	breq	.+28     	; 0x1bf4 <__fp_splitA+0x1a>
    1bd8:	47 95       	ror	r20

00001bda <__fp_splitA>:
    1bda:	88 0f       	add	r24, r24
    1bdc:	97 fb       	bst	r25, 7
    1bde:	99 1f       	adc	r25, r25
    1be0:	61 f0       	breq	.+24     	; 0x1bfa <__fp_splitA+0x20>
    1be2:	9f 3f       	cpi	r25, 0xFF	; 255
    1be4:	79 f0       	breq	.+30     	; 0x1c04 <__fp_splitA+0x2a>
    1be6:	87 95       	ror	r24
    1be8:	08 95       	ret
    1bea:	12 16       	cp	r1, r18
    1bec:	13 06       	cpc	r1, r19
    1bee:	14 06       	cpc	r1, r20
    1bf0:	55 1f       	adc	r21, r21
    1bf2:	f2 cf       	rjmp	.-28     	; 0x1bd8 <__fp_split3+0xe>
    1bf4:	46 95       	lsr	r20
    1bf6:	f1 df       	rcall	.-30     	; 0x1bda <__fp_splitA>
    1bf8:	08 c0       	rjmp	.+16     	; 0x1c0a <__fp_splitA+0x30>
    1bfa:	16 16       	cp	r1, r22
    1bfc:	17 06       	cpc	r1, r23
    1bfe:	18 06       	cpc	r1, r24
    1c00:	99 1f       	adc	r25, r25
    1c02:	f1 cf       	rjmp	.-30     	; 0x1be6 <__fp_splitA+0xc>
    1c04:	86 95       	lsr	r24
    1c06:	71 05       	cpc	r23, r1
    1c08:	61 05       	cpc	r22, r1
    1c0a:	08 94       	sec
    1c0c:	08 95       	ret

00001c0e <__fp_zero>:
    1c0e:	e8 94       	clt

00001c10 <__fp_szero>:
    1c10:	bb 27       	eor	r27, r27
    1c12:	66 27       	eor	r22, r22
    1c14:	77 27       	eor	r23, r23
    1c16:	cb 01       	movw	r24, r22
    1c18:	97 f9       	bld	r25, 7
    1c1a:	08 95       	ret

00001c1c <__mulsf3>:
    1c1c:	0b d0       	rcall	.+22     	; 0x1c34 <__mulsf3x>
    1c1e:	c4 cf       	rjmp	.-120    	; 0x1ba8 <__fp_round>
    1c20:	b5 df       	rcall	.-150    	; 0x1b8c <__fp_pscA>
    1c22:	28 f0       	brcs	.+10     	; 0x1c2e <__mulsf3+0x12>
    1c24:	ba df       	rcall	.-140    	; 0x1b9a <__fp_pscB>
    1c26:	18 f0       	brcs	.+6      	; 0x1c2e <__mulsf3+0x12>
    1c28:	95 23       	and	r25, r21
    1c2a:	09 f0       	breq	.+2      	; 0x1c2e <__mulsf3+0x12>
    1c2c:	a6 cf       	rjmp	.-180    	; 0x1b7a <__fp_inf>
    1c2e:	ab cf       	rjmp	.-170    	; 0x1b86 <__fp_nan>
    1c30:	11 24       	eor	r1, r1
    1c32:	ee cf       	rjmp	.-36     	; 0x1c10 <__fp_szero>

00001c34 <__mulsf3x>:
    1c34:	ca df       	rcall	.-108    	; 0x1bca <__fp_split3>
    1c36:	a0 f3       	brcs	.-24     	; 0x1c20 <__mulsf3+0x4>

00001c38 <__mulsf3_pse>:
    1c38:	95 9f       	mul	r25, r21
    1c3a:	d1 f3       	breq	.-12     	; 0x1c30 <__mulsf3+0x14>
    1c3c:	95 0f       	add	r25, r21
    1c3e:	50 e0       	ldi	r21, 0x00	; 0
    1c40:	55 1f       	adc	r21, r21
    1c42:	62 9f       	mul	r22, r18
    1c44:	f0 01       	movw	r30, r0
    1c46:	72 9f       	mul	r23, r18
    1c48:	bb 27       	eor	r27, r27
    1c4a:	f0 0d       	add	r31, r0
    1c4c:	b1 1d       	adc	r27, r1
    1c4e:	63 9f       	mul	r22, r19
    1c50:	aa 27       	eor	r26, r26
    1c52:	f0 0d       	add	r31, r0
    1c54:	b1 1d       	adc	r27, r1
    1c56:	aa 1f       	adc	r26, r26
    1c58:	64 9f       	mul	r22, r20
    1c5a:	66 27       	eor	r22, r22
    1c5c:	b0 0d       	add	r27, r0
    1c5e:	a1 1d       	adc	r26, r1
    1c60:	66 1f       	adc	r22, r22
    1c62:	82 9f       	mul	r24, r18
    1c64:	22 27       	eor	r18, r18
    1c66:	b0 0d       	add	r27, r0
    1c68:	a1 1d       	adc	r26, r1
    1c6a:	62 1f       	adc	r22, r18
    1c6c:	73 9f       	mul	r23, r19
    1c6e:	b0 0d       	add	r27, r0
    1c70:	a1 1d       	adc	r26, r1
    1c72:	62 1f       	adc	r22, r18
    1c74:	83 9f       	mul	r24, r19
    1c76:	a0 0d       	add	r26, r0
    1c78:	61 1d       	adc	r22, r1
    1c7a:	22 1f       	adc	r18, r18
    1c7c:	74 9f       	mul	r23, r20
    1c7e:	33 27       	eor	r19, r19
    1c80:	a0 0d       	add	r26, r0
    1c82:	61 1d       	adc	r22, r1
    1c84:	23 1f       	adc	r18, r19
    1c86:	84 9f       	mul	r24, r20
    1c88:	60 0d       	add	r22, r0
    1c8a:	21 1d       	adc	r18, r1
    1c8c:	82 2f       	mov	r24, r18
    1c8e:	76 2f       	mov	r23, r22
    1c90:	6a 2f       	mov	r22, r26
    1c92:	11 24       	eor	r1, r1
    1c94:	9f 57       	subi	r25, 0x7F	; 127
    1c96:	50 40       	sbci	r21, 0x00	; 0
    1c98:	8a f0       	brmi	.+34     	; 0x1cbc <__mulsf3_pse+0x84>
    1c9a:	e1 f0       	breq	.+56     	; 0x1cd4 <__mulsf3_pse+0x9c>
    1c9c:	88 23       	and	r24, r24
    1c9e:	4a f0       	brmi	.+18     	; 0x1cb2 <__mulsf3_pse+0x7a>
    1ca0:	ee 0f       	add	r30, r30
    1ca2:	ff 1f       	adc	r31, r31
    1ca4:	bb 1f       	adc	r27, r27
    1ca6:	66 1f       	adc	r22, r22
    1ca8:	77 1f       	adc	r23, r23
    1caa:	88 1f       	adc	r24, r24
    1cac:	91 50       	subi	r25, 0x01	; 1
    1cae:	50 40       	sbci	r21, 0x00	; 0
    1cb0:	a9 f7       	brne	.-22     	; 0x1c9c <__mulsf3_pse+0x64>
    1cb2:	9e 3f       	cpi	r25, 0xFE	; 254
    1cb4:	51 05       	cpc	r21, r1
    1cb6:	70 f0       	brcs	.+28     	; 0x1cd4 <__mulsf3_pse+0x9c>
    1cb8:	60 cf       	rjmp	.-320    	; 0x1b7a <__fp_inf>
    1cba:	aa cf       	rjmp	.-172    	; 0x1c10 <__fp_szero>
    1cbc:	5f 3f       	cpi	r21, 0xFF	; 255
    1cbe:	ec f3       	brlt	.-6      	; 0x1cba <__mulsf3_pse+0x82>
    1cc0:	98 3e       	cpi	r25, 0xE8	; 232
    1cc2:	dc f3       	brlt	.-10     	; 0x1cba <__mulsf3_pse+0x82>
    1cc4:	86 95       	lsr	r24
    1cc6:	77 95       	ror	r23
    1cc8:	67 95       	ror	r22
    1cca:	b7 95       	ror	r27
    1ccc:	f7 95       	ror	r31
    1cce:	e7 95       	ror	r30
    1cd0:	9f 5f       	subi	r25, 0xFF	; 255
    1cd2:	c1 f7       	brne	.-16     	; 0x1cc4 <__mulsf3_pse+0x8c>
    1cd4:	fe 2b       	or	r31, r30
    1cd6:	88 0f       	add	r24, r24
    1cd8:	91 1d       	adc	r25, r1
    1cda:	96 95       	lsr	r25
    1cdc:	87 95       	ror	r24
    1cde:	97 f9       	bld	r25, 7
    1ce0:	08 95       	ret

00001ce2 <pow>:
    1ce2:	fa 01       	movw	r30, r20
    1ce4:	ee 0f       	add	r30, r30
    1ce6:	ff 1f       	adc	r31, r31
    1ce8:	30 96       	adiw	r30, 0x00	; 0
    1cea:	21 05       	cpc	r18, r1
    1cec:	31 05       	cpc	r19, r1
    1cee:	99 f1       	breq	.+102    	; 0x1d56 <pow+0x74>
    1cf0:	61 15       	cp	r22, r1
    1cf2:	71 05       	cpc	r23, r1
    1cf4:	61 f4       	brne	.+24     	; 0x1d0e <pow+0x2c>
    1cf6:	80 38       	cpi	r24, 0x80	; 128
    1cf8:	bf e3       	ldi	r27, 0x3F	; 63
    1cfa:	9b 07       	cpc	r25, r27
    1cfc:	49 f1       	breq	.+82     	; 0x1d50 <pow+0x6e>
    1cfe:	68 94       	set
    1d00:	90 38       	cpi	r25, 0x80	; 128
    1d02:	81 05       	cpc	r24, r1
    1d04:	61 f0       	breq	.+24     	; 0x1d1e <pow+0x3c>
    1d06:	80 38       	cpi	r24, 0x80	; 128
    1d08:	bf ef       	ldi	r27, 0xFF	; 255
    1d0a:	9b 07       	cpc	r25, r27
    1d0c:	41 f0       	breq	.+16     	; 0x1d1e <pow+0x3c>
    1d0e:	99 23       	and	r25, r25
    1d10:	42 f5       	brpl	.+80     	; 0x1d62 <pow+0x80>
    1d12:	ff 3f       	cpi	r31, 0xFF	; 255
    1d14:	e1 05       	cpc	r30, r1
    1d16:	31 05       	cpc	r19, r1
    1d18:	21 05       	cpc	r18, r1
    1d1a:	11 f1       	breq	.+68     	; 0x1d60 <pow+0x7e>
    1d1c:	e8 94       	clt
    1d1e:	08 94       	sec
    1d20:	e7 95       	ror	r30
    1d22:	d9 01       	movw	r26, r18
    1d24:	aa 23       	and	r26, r26
    1d26:	29 f4       	brne	.+10     	; 0x1d32 <pow+0x50>
    1d28:	ab 2f       	mov	r26, r27
    1d2a:	be 2f       	mov	r27, r30
    1d2c:	f8 5f       	subi	r31, 0xF8	; 248
    1d2e:	d0 f3       	brcs	.-12     	; 0x1d24 <pow+0x42>
    1d30:	10 c0       	rjmp	.+32     	; 0x1d52 <pow+0x70>
    1d32:	ff 5f       	subi	r31, 0xFF	; 255
    1d34:	70 f4       	brcc	.+28     	; 0x1d52 <pow+0x70>
    1d36:	a6 95       	lsr	r26
    1d38:	e0 f7       	brcc	.-8      	; 0x1d32 <pow+0x50>
    1d3a:	f7 39       	cpi	r31, 0x97	; 151
    1d3c:	50 f0       	brcs	.+20     	; 0x1d52 <pow+0x70>
    1d3e:	19 f0       	breq	.+6      	; 0x1d46 <pow+0x64>
    1d40:	ff 3a       	cpi	r31, 0xAF	; 175
    1d42:	38 f4       	brcc	.+14     	; 0x1d52 <pow+0x70>
    1d44:	9f 77       	andi	r25, 0x7F	; 127
    1d46:	9f 93       	push	r25
    1d48:	0c d0       	rcall	.+24     	; 0x1d62 <pow+0x80>
    1d4a:	0f 90       	pop	r0
    1d4c:	07 fc       	sbrc	r0, 7
    1d4e:	90 58       	subi	r25, 0x80	; 128
    1d50:	08 95       	ret
    1d52:	3e f0       	brts	.+14     	; 0x1d62 <pow+0x80>
    1d54:	18 cf       	rjmp	.-464    	; 0x1b86 <__fp_nan>
    1d56:	60 e0       	ldi	r22, 0x00	; 0
    1d58:	70 e0       	ldi	r23, 0x00	; 0
    1d5a:	80 e8       	ldi	r24, 0x80	; 128
    1d5c:	9f e3       	ldi	r25, 0x3F	; 63
    1d5e:	08 95       	ret
    1d60:	4f e7       	ldi	r20, 0x7F	; 127
    1d62:	9f 77       	andi	r25, 0x7F	; 127
    1d64:	5f 93       	push	r21
    1d66:	4f 93       	push	r20
    1d68:	3f 93       	push	r19
    1d6a:	2f 93       	push	r18
    1d6c:	9e d0       	rcall	.+316    	; 0x1eaa <log>
    1d6e:	2f 91       	pop	r18
    1d70:	3f 91       	pop	r19
    1d72:	4f 91       	pop	r20
    1d74:	5f 91       	pop	r21
    1d76:	52 df       	rcall	.-348    	; 0x1c1c <__mulsf3>
    1d78:	05 c0       	rjmp	.+10     	; 0x1d84 <exp>
    1d7a:	19 f4       	brne	.+6      	; 0x1d82 <pow+0xa0>
    1d7c:	0e f0       	brts	.+2      	; 0x1d80 <pow+0x9e>
    1d7e:	fd ce       	rjmp	.-518    	; 0x1b7a <__fp_inf>
    1d80:	46 cf       	rjmp	.-372    	; 0x1c0e <__fp_zero>
    1d82:	01 cf       	rjmp	.-510    	; 0x1b86 <__fp_nan>

00001d84 <exp>:
    1d84:	2a df       	rcall	.-428    	; 0x1bda <__fp_splitA>
    1d86:	c8 f3       	brcs	.-14     	; 0x1d7a <pow+0x98>
    1d88:	96 38       	cpi	r25, 0x86	; 134
    1d8a:	c0 f7       	brcc	.-16     	; 0x1d7c <pow+0x9a>
    1d8c:	07 f8       	bld	r0, 7
    1d8e:	0f 92       	push	r0
    1d90:	e8 94       	clt
    1d92:	2b e3       	ldi	r18, 0x3B	; 59
    1d94:	3a ea       	ldi	r19, 0xAA	; 170
    1d96:	48 eb       	ldi	r20, 0xB8	; 184
    1d98:	5f e7       	ldi	r21, 0x7F	; 127
    1d9a:	4e df       	rcall	.-356    	; 0x1c38 <__mulsf3_pse>
    1d9c:	0f 92       	push	r0
    1d9e:	0f 92       	push	r0
    1da0:	0f 92       	push	r0
    1da2:	4d b7       	in	r20, 0x3d	; 61
    1da4:	5e b7       	in	r21, 0x3e	; 62
    1da6:	0f 92       	push	r0
    1da8:	c0 d0       	rcall	.+384    	; 0x1f2a <modf>
    1daa:	e4 e3       	ldi	r30, 0x34	; 52
    1dac:	f1 e0       	ldi	r31, 0x01	; 1
    1dae:	16 d0       	rcall	.+44     	; 0x1ddc <__fp_powser>
    1db0:	4f 91       	pop	r20
    1db2:	5f 91       	pop	r21
    1db4:	ef 91       	pop	r30
    1db6:	ff 91       	pop	r31
    1db8:	e5 95       	asr	r30
    1dba:	ee 1f       	adc	r30, r30
    1dbc:	ff 1f       	adc	r31, r31
    1dbe:	49 f0       	breq	.+18     	; 0x1dd2 <exp+0x4e>
    1dc0:	fe 57       	subi	r31, 0x7E	; 126
    1dc2:	e0 68       	ori	r30, 0x80	; 128
    1dc4:	44 27       	eor	r20, r20
    1dc6:	ee 0f       	add	r30, r30
    1dc8:	44 1f       	adc	r20, r20
    1dca:	fa 95       	dec	r31
    1dcc:	e1 f7       	brne	.-8      	; 0x1dc6 <exp+0x42>
    1dce:	41 95       	neg	r20
    1dd0:	55 0b       	sbc	r21, r21
    1dd2:	32 d0       	rcall	.+100    	; 0x1e38 <ldexp>
    1dd4:	0f 90       	pop	r0
    1dd6:	07 fe       	sbrs	r0, 7
    1dd8:	26 c0       	rjmp	.+76     	; 0x1e26 <inverse>
    1dda:	08 95       	ret

00001ddc <__fp_powser>:
    1ddc:	df 93       	push	r29
    1dde:	cf 93       	push	r28
    1de0:	1f 93       	push	r17
    1de2:	0f 93       	push	r16
    1de4:	ff 92       	push	r15
    1de6:	ef 92       	push	r14
    1de8:	df 92       	push	r13
    1dea:	7b 01       	movw	r14, r22
    1dec:	8c 01       	movw	r16, r24
    1dee:	68 94       	set
    1df0:	05 c0       	rjmp	.+10     	; 0x1dfc <__fp_powser+0x20>
    1df2:	da 2e       	mov	r13, r26
    1df4:	ef 01       	movw	r28, r30
    1df6:	1e df       	rcall	.-452    	; 0x1c34 <__mulsf3x>
    1df8:	fe 01       	movw	r30, r28
    1dfa:	e8 94       	clt
    1dfc:	a5 91       	lpm	r26, Z+
    1dfe:	25 91       	lpm	r18, Z+
    1e00:	35 91       	lpm	r19, Z+
    1e02:	45 91       	lpm	r20, Z+
    1e04:	55 91       	lpm	r21, Z+
    1e06:	ae f3       	brts	.-22     	; 0x1df2 <__fp_powser+0x16>
    1e08:	ef 01       	movw	r28, r30
    1e0a:	8e dd       	rcall	.-1252   	; 0x1928 <__addsf3x>
    1e0c:	fe 01       	movw	r30, r28
    1e0e:	97 01       	movw	r18, r14
    1e10:	a8 01       	movw	r20, r16
    1e12:	da 94       	dec	r13
    1e14:	79 f7       	brne	.-34     	; 0x1df4 <__fp_powser+0x18>
    1e16:	df 90       	pop	r13
    1e18:	ef 90       	pop	r14
    1e1a:	ff 90       	pop	r15
    1e1c:	0f 91       	pop	r16
    1e1e:	1f 91       	pop	r17
    1e20:	cf 91       	pop	r28
    1e22:	df 91       	pop	r29
    1e24:	08 95       	ret

00001e26 <inverse>:
    1e26:	9b 01       	movw	r18, r22
    1e28:	ac 01       	movw	r20, r24
    1e2a:	60 e0       	ldi	r22, 0x00	; 0
    1e2c:	70 e0       	ldi	r23, 0x00	; 0
    1e2e:	80 e8       	ldi	r24, 0x80	; 128
    1e30:	9f e3       	ldi	r25, 0x3F	; 63
    1e32:	cd cd       	rjmp	.-1126   	; 0x19ce <__divsf3>
    1e34:	a2 ce       	rjmp	.-700    	; 0x1b7a <__fp_inf>
    1e36:	ac c0       	rjmp	.+344    	; 0x1f90 <__fp_mpack>

00001e38 <ldexp>:
    1e38:	d0 de       	rcall	.-608    	; 0x1bda <__fp_splitA>
    1e3a:	e8 f3       	brcs	.-6      	; 0x1e36 <inverse+0x10>
    1e3c:	99 23       	and	r25, r25
    1e3e:	d9 f3       	breq	.-10     	; 0x1e36 <inverse+0x10>
    1e40:	94 0f       	add	r25, r20
    1e42:	51 1d       	adc	r21, r1
    1e44:	bb f3       	brvs	.-18     	; 0x1e34 <inverse+0xe>
    1e46:	91 50       	subi	r25, 0x01	; 1
    1e48:	50 40       	sbci	r21, 0x00	; 0
    1e4a:	94 f0       	brlt	.+36     	; 0x1e70 <ldexp+0x38>
    1e4c:	59 f0       	breq	.+22     	; 0x1e64 <ldexp+0x2c>
    1e4e:	88 23       	and	r24, r24
    1e50:	32 f0       	brmi	.+12     	; 0x1e5e <ldexp+0x26>
    1e52:	66 0f       	add	r22, r22
    1e54:	77 1f       	adc	r23, r23
    1e56:	88 1f       	adc	r24, r24
    1e58:	91 50       	subi	r25, 0x01	; 1
    1e5a:	50 40       	sbci	r21, 0x00	; 0
    1e5c:	c1 f7       	brne	.-16     	; 0x1e4e <ldexp+0x16>
    1e5e:	9e 3f       	cpi	r25, 0xFE	; 254
    1e60:	51 05       	cpc	r21, r1
    1e62:	44 f7       	brge	.-48     	; 0x1e34 <inverse+0xe>
    1e64:	88 0f       	add	r24, r24
    1e66:	91 1d       	adc	r25, r1
    1e68:	96 95       	lsr	r25
    1e6a:	87 95       	ror	r24
    1e6c:	97 f9       	bld	r25, 7
    1e6e:	08 95       	ret
    1e70:	5f 3f       	cpi	r21, 0xFF	; 255
    1e72:	ac f0       	brlt	.+42     	; 0x1e9e <ldexp+0x66>
    1e74:	98 3e       	cpi	r25, 0xE8	; 232
    1e76:	9c f0       	brlt	.+38     	; 0x1e9e <ldexp+0x66>
    1e78:	bb 27       	eor	r27, r27
    1e7a:	86 95       	lsr	r24
    1e7c:	77 95       	ror	r23
    1e7e:	67 95       	ror	r22
    1e80:	b7 95       	ror	r27
    1e82:	08 f4       	brcc	.+2      	; 0x1e86 <ldexp+0x4e>
    1e84:	b1 60       	ori	r27, 0x01	; 1
    1e86:	93 95       	inc	r25
    1e88:	c1 f7       	brne	.-16     	; 0x1e7a <ldexp+0x42>
    1e8a:	bb 0f       	add	r27, r27
    1e8c:	58 f7       	brcc	.-42     	; 0x1e64 <ldexp+0x2c>
    1e8e:	11 f4       	brne	.+4      	; 0x1e94 <ldexp+0x5c>
    1e90:	60 ff       	sbrs	r22, 0
    1e92:	e8 cf       	rjmp	.-48     	; 0x1e64 <ldexp+0x2c>
    1e94:	6f 5f       	subi	r22, 0xFF	; 255
    1e96:	7f 4f       	sbci	r23, 0xFF	; 255
    1e98:	8f 4f       	sbci	r24, 0xFF	; 255
    1e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9c:	e3 cf       	rjmp	.-58     	; 0x1e64 <ldexp+0x2c>
    1e9e:	b8 ce       	rjmp	.-656    	; 0x1c10 <__fp_szero>
    1ea0:	0e f0       	brts	.+2      	; 0x1ea4 <ldexp+0x6c>
    1ea2:	76 c0       	rjmp	.+236    	; 0x1f90 <__fp_mpack>
    1ea4:	70 ce       	rjmp	.-800    	; 0x1b86 <__fp_nan>
    1ea6:	68 94       	set
    1ea8:	68 ce       	rjmp	.-816    	; 0x1b7a <__fp_inf>

00001eaa <log>:
    1eaa:	97 de       	rcall	.-722    	; 0x1bda <__fp_splitA>
    1eac:	c8 f3       	brcs	.-14     	; 0x1ea0 <ldexp+0x68>
    1eae:	99 23       	and	r25, r25
    1eb0:	d1 f3       	breq	.-12     	; 0x1ea6 <ldexp+0x6e>
    1eb2:	c6 f3       	brts	.-16     	; 0x1ea4 <ldexp+0x6c>
    1eb4:	df 93       	push	r29
    1eb6:	cf 93       	push	r28
    1eb8:	1f 93       	push	r17
    1eba:	0f 93       	push	r16
    1ebc:	ff 92       	push	r15
    1ebe:	c9 2f       	mov	r28, r25
    1ec0:	dd 27       	eor	r29, r29
    1ec2:	88 23       	and	r24, r24
    1ec4:	2a f0       	brmi	.+10     	; 0x1ed0 <log+0x26>
    1ec6:	21 97       	sbiw	r28, 0x01	; 1
    1ec8:	66 0f       	add	r22, r22
    1eca:	77 1f       	adc	r23, r23
    1ecc:	88 1f       	adc	r24, r24
    1ece:	da f7       	brpl	.-10     	; 0x1ec6 <log+0x1c>
    1ed0:	20 e0       	ldi	r18, 0x00	; 0
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	40 e8       	ldi	r20, 0x80	; 128
    1ed6:	5f eb       	ldi	r21, 0xBF	; 191
    1ed8:	9f e3       	ldi	r25, 0x3F	; 63
    1eda:	88 39       	cpi	r24, 0x98	; 152
    1edc:	20 f0       	brcs	.+8      	; 0x1ee6 <log+0x3c>
    1ede:	80 3e       	cpi	r24, 0xE0	; 224
    1ee0:	30 f0       	brcs	.+12     	; 0x1eee <log+0x44>
    1ee2:	21 96       	adiw	r28, 0x01	; 1
    1ee4:	8f 77       	andi	r24, 0x7F	; 127
    1ee6:	0f dd       	rcall	.-1506   	; 0x1906 <__addsf3>
    1ee8:	ec e5       	ldi	r30, 0x5C	; 92
    1eea:	f1 e0       	ldi	r31, 0x01	; 1
    1eec:	03 c0       	rjmp	.+6      	; 0x1ef4 <log+0x4a>
    1eee:	0b dd       	rcall	.-1514   	; 0x1906 <__addsf3>
    1ef0:	e9 e8       	ldi	r30, 0x89	; 137
    1ef2:	f1 e0       	ldi	r31, 0x01	; 1
    1ef4:	73 df       	rcall	.-282    	; 0x1ddc <__fp_powser>
    1ef6:	8b 01       	movw	r16, r22
    1ef8:	be 01       	movw	r22, r28
    1efa:	ec 01       	movw	r28, r24
    1efc:	fb 2e       	mov	r15, r27
    1efe:	6f 57       	subi	r22, 0x7F	; 127
    1f00:	71 09       	sbc	r23, r1
    1f02:	75 95       	asr	r23
    1f04:	77 1f       	adc	r23, r23
    1f06:	88 0b       	sbc	r24, r24
    1f08:	99 0b       	sbc	r25, r25
    1f0a:	fc dd       	rcall	.-1032   	; 0x1b04 <__floatsisf>
    1f0c:	28 e1       	ldi	r18, 0x18	; 24
    1f0e:	32 e7       	ldi	r19, 0x72	; 114
    1f10:	41 e3       	ldi	r20, 0x31	; 49
    1f12:	5f e3       	ldi	r21, 0x3F	; 63
    1f14:	8f de       	rcall	.-738    	; 0x1c34 <__mulsf3x>
    1f16:	af 2d       	mov	r26, r15
    1f18:	98 01       	movw	r18, r16
    1f1a:	ae 01       	movw	r20, r28
    1f1c:	ff 90       	pop	r15
    1f1e:	0f 91       	pop	r16
    1f20:	1f 91       	pop	r17
    1f22:	cf 91       	pop	r28
    1f24:	df 91       	pop	r29
    1f26:	00 dd       	rcall	.-1536   	; 0x1928 <__addsf3x>
    1f28:	3f ce       	rjmp	.-898    	; 0x1ba8 <__fp_round>

00001f2a <modf>:
    1f2a:	fa 01       	movw	r30, r20
    1f2c:	dc 01       	movw	r26, r24
    1f2e:	aa 0f       	add	r26, r26
    1f30:	bb 1f       	adc	r27, r27
    1f32:	9b 01       	movw	r18, r22
    1f34:	ac 01       	movw	r20, r24
    1f36:	bf 57       	subi	r27, 0x7F	; 127
    1f38:	28 f4       	brcc	.+10     	; 0x1f44 <modf+0x1a>
    1f3a:	22 27       	eor	r18, r18
    1f3c:	33 27       	eor	r19, r19
    1f3e:	44 27       	eor	r20, r20
    1f40:	50 78       	andi	r21, 0x80	; 128
    1f42:	1f c0       	rjmp	.+62     	; 0x1f82 <modf+0x58>
    1f44:	b7 51       	subi	r27, 0x17	; 23
    1f46:	88 f4       	brcc	.+34     	; 0x1f6a <modf+0x40>
    1f48:	ab 2f       	mov	r26, r27
    1f4a:	00 24       	eor	r0, r0
    1f4c:	46 95       	lsr	r20
    1f4e:	37 95       	ror	r19
    1f50:	27 95       	ror	r18
    1f52:	01 1c       	adc	r0, r1
    1f54:	a3 95       	inc	r26
    1f56:	d2 f3       	brmi	.-12     	; 0x1f4c <modf+0x22>
    1f58:	00 20       	and	r0, r0
    1f5a:	69 f0       	breq	.+26     	; 0x1f76 <modf+0x4c>
    1f5c:	22 0f       	add	r18, r18
    1f5e:	33 1f       	adc	r19, r19
    1f60:	44 1f       	adc	r20, r20
    1f62:	b3 95       	inc	r27
    1f64:	da f3       	brmi	.-10     	; 0x1f5c <modf+0x32>
    1f66:	0d d0       	rcall	.+26     	; 0x1f82 <modf+0x58>
    1f68:	cd cc       	rjmp	.-1638   	; 0x1904 <__subsf3>
    1f6a:	61 30       	cpi	r22, 0x01	; 1
    1f6c:	71 05       	cpc	r23, r1
    1f6e:	a0 e8       	ldi	r26, 0x80	; 128
    1f70:	8a 07       	cpc	r24, r26
    1f72:	b9 46       	sbci	r27, 0x69	; 105
    1f74:	30 f4       	brcc	.+12     	; 0x1f82 <modf+0x58>
    1f76:	9b 01       	movw	r18, r22
    1f78:	ac 01       	movw	r20, r24
    1f7a:	66 27       	eor	r22, r22
    1f7c:	77 27       	eor	r23, r23
    1f7e:	88 27       	eor	r24, r24
    1f80:	90 78       	andi	r25, 0x80	; 128
    1f82:	30 96       	adiw	r30, 0x00	; 0
    1f84:	21 f0       	breq	.+8      	; 0x1f8e <modf+0x64>
    1f86:	20 83       	st	Z, r18
    1f88:	31 83       	std	Z+1, r19	; 0x01
    1f8a:	42 83       	std	Z+2, r20	; 0x02
    1f8c:	53 83       	std	Z+3, r21	; 0x03
    1f8e:	08 95       	ret

00001f90 <__fp_mpack>:
    1f90:	9f 3f       	cpi	r25, 0xFF	; 255
    1f92:	31 f0       	breq	.+12     	; 0x1fa0 <__fp_mpack_finite+0xc>

00001f94 <__fp_mpack_finite>:
    1f94:	91 50       	subi	r25, 0x01	; 1
    1f96:	20 f4       	brcc	.+8      	; 0x1fa0 <__fp_mpack_finite+0xc>
    1f98:	87 95       	ror	r24
    1f9a:	77 95       	ror	r23
    1f9c:	67 95       	ror	r22
    1f9e:	b7 95       	ror	r27
    1fa0:	88 0f       	add	r24, r24
    1fa2:	91 1d       	adc	r25, r1
    1fa4:	96 95       	lsr	r25
    1fa6:	87 95       	ror	r24
    1fa8:	97 f9       	bld	r25, 7
    1faa:	08 95       	ret

00001fac <__udivmodhi4>:
    1fac:	aa 1b       	sub	r26, r26
    1fae:	bb 1b       	sub	r27, r27
    1fb0:	51 e1       	ldi	r21, 0x11	; 17
    1fb2:	07 c0       	rjmp	.+14     	; 0x1fc2 <__udivmodhi4_ep>

00001fb4 <__udivmodhi4_loop>:
    1fb4:	aa 1f       	adc	r26, r26
    1fb6:	bb 1f       	adc	r27, r27
    1fb8:	a6 17       	cp	r26, r22
    1fba:	b7 07       	cpc	r27, r23
    1fbc:	10 f0       	brcs	.+4      	; 0x1fc2 <__udivmodhi4_ep>
    1fbe:	a6 1b       	sub	r26, r22
    1fc0:	b7 0b       	sbc	r27, r23

00001fc2 <__udivmodhi4_ep>:
    1fc2:	88 1f       	adc	r24, r24
    1fc4:	99 1f       	adc	r25, r25
    1fc6:	5a 95       	dec	r21
    1fc8:	a9 f7       	brne	.-22     	; 0x1fb4 <__udivmodhi4_loop>
    1fca:	80 95       	com	r24
    1fcc:	90 95       	com	r25
    1fce:	bc 01       	movw	r22, r24
    1fd0:	cd 01       	movw	r24, r26
    1fd2:	08 95       	ret

00001fd4 <__tablejump2__>:
    1fd4:	ee 0f       	add	r30, r30
    1fd6:	ff 1f       	adc	r31, r31
    1fd8:	88 1f       	adc	r24, r24
    1fda:	8b bf       	out	0x3b, r24	; 59
    1fdc:	07 90       	elpm	r0, Z+
    1fde:	f6 91       	elpm	r31, Z
    1fe0:	e0 2d       	mov	r30, r0
    1fe2:	19 94       	eijmp

00001fe4 <__umulhisi3>:
    1fe4:	a2 9f       	mul	r26, r18
    1fe6:	b0 01       	movw	r22, r0
    1fe8:	b3 9f       	mul	r27, r19
    1fea:	c0 01       	movw	r24, r0
    1fec:	a3 9f       	mul	r26, r19
    1fee:	70 0d       	add	r23, r0
    1ff0:	81 1d       	adc	r24, r1
    1ff2:	11 24       	eor	r1, r1
    1ff4:	91 1d       	adc	r25, r1
    1ff6:	b2 9f       	mul	r27, r18
    1ff8:	70 0d       	add	r23, r0
    1ffa:	81 1d       	adc	r24, r1
    1ffc:	11 24       	eor	r1, r1
    1ffe:	91 1d       	adc	r25, r1
    2000:	08 95       	ret

00002002 <_exit>:
    2002:	f8 94       	cli

00002004 <__stop_program>:
    2004:	ff cf       	rjmp	.-2      	; 0x2004 <__stop_program>
